<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>思维之海</title>
  
  <subtitle>——在云端，寻找我的星匙。</subtitle>
  <link href="https://stellarkey.github.io/atom.xml" rel="self"/>
  
  <link href="https://stellarkey.github.io/"/>
  <updated>2022-05-25T17:09:24.862Z</updated>
  <id>https://stellarkey.github.io/</id>
  
  <author>
    <name>工云</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>辛普森悖论 Simpson&#39;s paradox</title>
    <link href="https://stellarkey.github.io/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/"/>
    <id>https://stellarkey.github.io/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/</id>
    <published>2022-05-25T17:09:02.000Z</published>
    <updated>2022-05-25T17:09:24.862Z</updated>
    
    <content type="html"><![CDATA[<iframe height=300px src="//player.bilibili.com/player.html?aid=20000392&bvid=BV1xW41147dJ&cid=32627179&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="辛普森悖论实例"><a href="#辛普森悖论实例" class="headerlink" title="辛普森悖论实例"></a>辛普森悖论实例</h1><p><strong>悖论描述</strong>：对于 Cat 和 Human 分别而言，  Treatment A 的效果（治愈率）都更好，但是在整体上（加在一起之后），Treatment B 的效果却更好。</p><div class="table-container"><table><thead><tr><th>Condition</th><th>Treatment A</th><th>Treatment B</th></tr></thead><tbody><tr><td>Cat</td><td><font style='color:red;font-weight:bold;'>100%</font> (2/2)</td><td>75% (6/<font style='color:deepskyblue;font-weight:bold;'>8</font>)</td></tr><tr><td>Human</td><td><font style='color:red;font-weight:bold;'>25%</font> (2/<font style='color:deepskyblue;font-weight:bold;'>8</font>)</td><td>0% (0/2)</td></tr><tr><td>Total</td><td>40% (4/10)</td><td><font style='color:red;font-weight:bold;'>60%</font> (6/10)</td></tr></tbody></table></div><p>设对应因果图如下：<span id="more"></span></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    A(Condition) --&gt;  B(Treatment)</span><br><span class="line">    A(Condition) --&gt;  C(Survival)</span><br><span class="line">    B(Treatment) --&gt;  C(Survival)</span><br></pre></td></tr></table></figure><blockquote><p>因果图的含义：药效受到物种和治疗方案的影响，治疗方案又受到物种的影响。</p><p>辛普森悖论反映了数据集上的偏斜（如前表中<font style='color:deepskyblue;font-weight:bold;'>蓝色</font>所示）。</p><blockquote><p>出现偏斜的原因，比如说可以是：Treatment A 比较昂贵，所以人类会优先给自己使用 Treatment A，而给宠物使用 Treatment B。</p></blockquote><p>我们希望找到 <font style='color:red;font-weight:bold;'>Treatment 对 Survival 的影响</font>（不参杂其它因素）。即上述因果图的子图：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    B(Treatment) --&gt;  C(Survival)</span><br></pre></td></tr></table></figure></blockquote><p>可以通过绘制比例上下限来理解上面出现的悖论：</p><p><img data-src="辛普森悖论/辛普森悖论-绘制上下限.jpg" alt="辛普森悖论-绘制上下限" style="zoom:50%;" /></p><blockquote><p>可以看出，混合后的全体统计量可以是 Human 和 Cat 的上下限之间的任意一个<font style='color:blue;font-weight:bold;'>凸组合</font>（Convex Combination），只要调大对应的采样比例。所以，如果 Treatment A 的 Human 采样比例足够大，且 Treatment B 的 Cat 采样比例足够大，则混合后 Treatment B 的治愈率可能超过 Treatment A。</p></blockquote><h2 id="解决思路-重平衡"><a href="#解决思路-重平衡" class="headerlink" title="解决思路-重平衡"></a>解决思路-重平衡</h2><p>解决辛普森悖论的思路很简单：我们必须明确，我们<font style='color:red;font-weight:bold;'>究竟希望考察的是哪个数据分布</font>？然后增强或者采样出所需的数据集。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    A(Condition) -.-&gt;  B(Treatment)</span><br><span class="line">    A(Condition) -.-&gt;  C(Survival)</span><br><span class="line">    B(Treatment) --&gt;  C(Survival)</span><br></pre></td></tr></table></figure><p>重平衡数据集如下：（调节两个 Condition 下的，即 Cat 和 Human 的试验数比例一致，50% : 50%）</p><div class="table-container"><table><thead><tr><th>Condition</th><th>Treatment A</th><th>Treatment B</th></tr></thead><tbody><tr><td>Cat</td><td><font style='color:red;font-weight:bold;'>100%</font> (<font style='color:limegreen;font-weight:bold;'>4/4</font>)</td><td>75% (3/<font style='color:deepskyblue;font-weight:bold;'>4</font>)</td></tr><tr><td>Human</td><td><font style='color:red;font-weight:bold;'>25%</font> (1/<font style='color:deepskyblue;font-weight:bold;'>4</font>)</td><td>0% (<font style='color:limegreen;font-weight:bold;'>0/4</font>)</td></tr><tr><td>Total</td><td><font style='color:red;font-weight:bold;'>62.5%</font> (<font style='color:limegreen;font-weight:bold;'>5/8</font>)</td><td>37.5% (<font style='color:limegreen;font-weight:bold;'>3/8</font>)</td></tr></tbody></table></div><p>此时，辛普森悖论消失了。</p><p>其次，重平衡的比例控制可以自由选取，我们可以绘制一个更清晰的比例上下限的凸组合变化图示：（越靠近两侧的其中一端，对应 Condition 所占的比例就越大）</p><p><img data-src="辛普森悖论/另一种展示形式.jpg" alt="另一种展示形式" style="zoom: 67%;" /></p><p>只要 Treatment A 和 Treatment B 两者的数据分布相同，即 $\cfrac{|\text{Cat}|}{|\text{Human}|}\Big|_A = \cfrac{|\text{Cat}|}{|\text{Human}|}\Big|_B$。如下图<font style='color:deepskyblue;font-weight:bold;'>天蓝色线</font>所示，线条的每一个位置都是一种可能的组合方式。（其中，最优组合的选择需要一些先验知识）</p><img data-src="/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/reweighting.gif" class="" title="reweighting"><h1 id="辛普森悖论成立的前提"><a href="#辛普森悖论成立的前提" class="headerlink" title="辛普森悖论成立的前提"></a>辛普森悖论成立的前提</h1><p><strong>重平衡方法并不是在所有情况下都起作用的</strong>，有些情况下，试图去偏（Debiasing）的操作是不可行的。</p><p><font style='color:red;font-weight:bold;'>辛普森悖论成立的前提</font>是：Treatment 对于所有的 Condition 的作用性质是一致的，都是正向效果/负向效果。</p><blockquote><p>例如，无论曝光频率情况如何，同一个情况下，只要文档的相关性越高，点击率就应该越高。</p></blockquote><p>例如下图。Treatment 变量为性别，Condition 变量为院系，结果变量为录取率。对于不同院系而言，同一性别不一定都具有更高的录取率。此时，<strong>重平衡方法不再适用</strong>。</p><img data-src="/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/%E5%BD%95%E5%8F%96%E7%8E%87%E7%A4%BA%E6%84%8F%E5%9B%BE.png" class="" title="录取率示意图"><p>对于上述问题，一种更为实际的方法是：<font style='color:red;font-weight:bold;'>分类讨论</font>。即，对每一种 Condition 单独分析。</p><blockquote><p>想象一个搜索的场景（Treatment 变量为是否是广告，Condition 变量为位置，结果变量为点击率）。 现在你已知位置偏差（Positional Bias）是存在的，你想要去偏。但是，作为一个搜索引擎公司，用户有一个习惯：自动过滤某一个位置的结果，比如首行、第二行。这可能是因为这一行经常被用来做广告，用户已经习惯无视。这就导致在某些情况下，排名靠前的广告，用户的点击率反而下降。这时，只能对广告和非广告分别讨论，debias 无法解决这样的问题。</p></blockquote><h1 id="内生变量无需去偏的情况"><a href="#内生变量无需去偏的情况" class="headerlink" title="内生变量无需去偏的情况"></a>内生变量无需去偏的情况</h1><p><strong>悖论描述</strong>：对于高低<font style='color:LimeGreen;font-weight:bold;'>血压</font>（Blood Pressure）分别而言，  Treatment A 的效果（治愈率）都更好，但是在整体上（加在一起之后），Treatment B 的效果却更好。</p><div class="table-container"><table><thead><tr><th>Condition</th><th>Treatment A</th><th>Treatment B</th></tr></thead><tbody><tr><td><font style='color:LimeGreen;font-weight:bold;'>Low Blood Pressure</font></td><td><font style='color:red;font-weight:bold;'>100%</font> (2/2)</td><td>75% (6/<font style='color:deepskyblue;font-weight:bold;'>8</font>)</td></tr><tr><td><font style='color:LimeGreen;font-weight:bold;'>High Blood Pressure</font></td><td><font style='color:red;font-weight:bold;'>25%</font> (2/<font style='color:deepskyblue;font-weight:bold;'>8</font>)</td><td>0% (0/2)</td></tr><tr><td>Total</td><td>40% (4/10)</td><td><font style='color:red;font-weight:bold;'>60%</font> (6/10)</td></tr></tbody></table></div><p>但是其对应的因果图如下：（和之前相比，Condition 和 Treatment 交换了位置）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    B(Condition) --&gt;  A(Treatment)</span><br><span class="line">    A(Condition) --&gt;  C(Survival)</span><br><span class="line">    B(Treatment) --&gt;  C(Survival)</span><br></pre></td></tr></table></figure><blockquote><p>我们仍然希望找到 <font style='color:red;font-weight:bold;'>Treatment 对 Survival 的影响</font>。此时，上述因果图的子图变为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    B(Condition) --&gt;  A(Treatment)</span><br><span class="line">    A(Condition) --&gt;  C(Survival)</span><br><span class="line">    B(Treatment) --&gt;  C(Survival)</span><br></pre></td></tr></table></figure><p>这是因为，Condition 变成了受到 Treatment 控制的内生变量。</p></blockquote><p>此时，<strong>Condition 带来的数据偏斜问题，其本质是 Treatment 导致的</strong>。比如，药物可能使得血压降低，更低的血压进而又改善了病情。</p><p>因此，这种情况下，考察 Treatment 效果时，<strong>重平衡是不必要的</strong>。此时应该直接选取总体下的统计量，即，根据 Total = <font style='color:red;font-weight:bold;'>60%</font> 的疗效认为 Treatment B 效果更好。</p><h1 id="常见逻辑佯谬"><a href="#常见逻辑佯谬" class="headerlink" title="常见逻辑佯谬"></a>常见逻辑佯谬</h1><script type="math/tex; mode=display">\text{if } a \rightarrow b, \text{ then } \neg\; a \rightarrow \neg \;b</script><iframe height=300px src="//player.bilibili.com/player.html?aid=65429829&bvid=BV1t441167uj&cid=113548097&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul><li><a href="http://math.bme.hu/~marib/bsmeur/simpson.pdf">The Interpretation of Interaction in Contingency Tables. Simpson, Edward H. (1951).</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;iframe height=300px src=&quot;//player.bilibili.com/player.html?aid=20000392&amp;bvid=BV1xW41147dJ&amp;cid=32627179&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;

&lt;h1 id=&quot;辛普森悖论实例&quot;&gt;&lt;a href=&quot;#辛普森悖论实例&quot; class=&quot;headerlink&quot; title=&quot;辛普森悖论实例&quot;&gt;&lt;/a&gt;辛普森悖论实例&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;悖论描述&lt;/strong&gt;：对于 Cat 和 Human 分别而言，  Treatment A 的效果（治愈率）都更好，但是在整体上（加在一起之后），Treatment B 的效果却更好。&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Condition&lt;/th&gt;
&lt;th&gt;Treatment A&lt;/th&gt;
&lt;th&gt;Treatment B&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Cat&lt;/td&gt;
&lt;td&gt;&lt;font style=&#39;color:red;font-weight:bold;&#39;&gt;100%&lt;/font&gt; (2/2)&lt;/td&gt;
&lt;td&gt;75% (6/&lt;font style=&#39;color:deepskyblue;font-weight:bold;&#39;&gt;8&lt;/font&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Human&lt;/td&gt;
&lt;td&gt;&lt;font style=&#39;color:red;font-weight:bold;&#39;&gt;25%&lt;/font&gt; (2/&lt;font style=&#39;color:deepskyblue;font-weight:bold;&#39;&gt;8&lt;/font&gt;)&lt;/td&gt;
&lt;td&gt;0% (0/2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;40% (4/10)&lt;/td&gt;
&lt;td&gt;&lt;font style=&#39;color:red;font-weight:bold;&#39;&gt;60%&lt;/font&gt; (6/10)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;设对应因果图如下：</summary>
    
    
    
    <category term="Learn" scheme="https://stellarkey.github.io/categories/Learn/"/>
    
    
    <category term="因果推断" scheme="https://stellarkey.github.io/tags/%E5%9B%A0%E6%9E%9C%E6%8E%A8%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>12球问题及其扩展的算法解</title>
    <link href="https://stellarkey.github.io/12%E7%90%83%E9%97%AE%E9%A2%98%E5%8F%8A%E5%85%B6%E6%89%A9%E5%B1%95%E7%9A%84%E7%AE%97%E6%B3%95%E8%A7%A3/"/>
    <id>https://stellarkey.github.io/12%E7%90%83%E9%97%AE%E9%A2%98%E5%8F%8A%E5%85%B6%E6%89%A9%E5%B1%95%E7%9A%84%E7%AE%97%E6%B3%95%E8%A7%A3/</id>
    <published>2022-05-25T16:43:02.000Z</published>
    <updated>2022-05-25T17:00:25.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p><font style='color:red;font-weight:bold;'>12球问题</font>：12个乒乓球，有一个次品，不知轻重，用一台无砝码天平称三次，找出次品，<strong>同时</strong>告知轻重？</p><h2 id="一种基本解法"><a href="#一种基本解法" class="headerlink" title="一种基本解法"></a>一种基本解法</h2><img data-src="/12%E7%90%83%E9%97%AE%E9%A2%98%E5%8F%8A%E5%85%B6%E6%89%A9%E5%B1%95%E7%9A%84%E7%AE%97%E6%B3%95%E8%A7%A3/12%E7%90%83%E9%97%AE%E9%A2%98.jpg" class="" title="12球问题"><blockquote><p>12球问题可以用信息论来保证有解。整个解空间为24，由于天平每次可以三分，所以 12 球问题相对于天平的信息量为 $\log_3 24 &lt;\log_3 27=3$，因此在 3 步内有解。<span id="more"></span></p><p>同时，必须保证第三步时，剩下的解空间 $\leq$ 3。</p><p><font style='color:blue;font-weight:bold;'>推论</font>：<font style='color:red;'>若有 1 个辅助球，则对于任意含次品的 4 组球（每组相同数量）可以通过 2 次称重，确定次品的轻重和组号</font>。（辅助球，即一个已知的不是次品的标准球）</p><ul><li>设组号为 <code>[1, 2, 3, 4]</code>，辅助球为 <code>F</code><ul><li>第 1 次测量：分为 3 + 1两份，称完之后解空间分别为3 + 1*2，均 &lt;= 3，信息论可解。<ul><li>A=<code>[1, 2]</code> vs. B=<code>[3, F]</code></li></ul></li><li>第 2 次测量：<ul><li>A = B<ul><li>C=<code>[4]</code> vs. D=<code>[F]</code></li></ul></li><li>A &lt; B || A &gt; B<ul><li>C=<code>[1]</code> vs. D=<code>[2]</code></li></ul></li></ul></li></ul></li></ul></blockquote><h1 id="13-球问题"><a href="#13-球问题" class="headerlink" title="13 球问题"></a>13 球问题</h1><p>对于 13 球问题，可以证明，必须添加一个标准的辅助球才有解。</p><p>首先信息量为 $\log_3 26 &lt;\log_3 27=3$，因此理论可解。</p><p><font style='color:blue;font-weight:bold;'>引理1</font>：<font style='color:red;'>$n$ 个球取 $m$ 个称 1 次后的两种情况的剩余解空间规模 $S$ 为 $m$ 和 $2(n-m)$</font>。</p><blockquote><p>证明：</p><ul><li>对于第一种情况，天平不平衡<ul><li>次品必然在取出的在 $m$ 个球中，且每个球的轻重已知。故解空间为球数：$m$。</li></ul></li><li>对于第二种情况，天平平衡<ul><li>次品必然在没有取出的在 $n-m$ 个球中，且每个球的轻重未知。故解空间为两倍球数：$2(n-m)$。</li></ul></li></ul></blockquote><p><font style='color:blue;font-weight:bold;'>引理2</font>：<font style='color:red;'>若剩余 $k$ 步，未确定的解空间规模 $S$ 必须不大于 $3^k$</font>。</p><blockquote><p>证明：</p><ul><li>根据信息论约束， $S$ 的规模必须满足 $\log_3 S \leq k$ 才可能有解。</li><li>于是得到 $S \leq 3^k$。</li></ul></blockquote><p>根据引理 1 可知，第 1 步结束后的两个解空间 $S$ 大小分别为 $m$ 和 $2(13-m)$。</p><p>根据引理 2 可知，第 1 步结束后还剩 2 步，则 $S\leq 3^2=9$。</p><p>故得到：</p><script type="math/tex; mode=display">m\leq 9\\2(13-m)\leq9</script><p>$m$ 有唯一解： $m=9$。即，第 1 步的分配必须取出 <font style='color:red;font-weight:bold;'>9</font> 个球进行称量。然而，<font style='color:red;font-weight:bold;'>奇数个球无法直接进行称重</font>。</p><p>故，13 球问题必须添加一个标准的辅助球才有解。</p><blockquote><p>注：12 球问题中 $m={8,9}$，但是 $m=9$ 的情况也一样需要辅助球。</p></blockquote><h1 id="n-球问题"><a href="#n-球问题" class="headerlink" title="$n$ 球问题"></a>$n$ 球问题</h1><p>实际上以上的证明过程使得我们可以对 $n$ 球问题进行程序化的求解。</p><p>首先根据引理 1 和 引理 2 确定 $m$ 的取值范围，如果 $m$ 是奇数，则需要辅助球，否则可以递归求解 $n-m$ 和 $m$ 两堆球。</p><script type="math/tex; mode=display">f(n)=f(n-m)+g(m)</script><p><font style='color:blue;font-weight:bold;'>引理3</font>：<font style='color:red;'>$n$ 个<strong>已知轻重</strong>的球取 $m$ 个称 1 次后的两种情况的剩余的最小解空间规模 $S$ 分别为 $\lceil m/2 \rceil$ 和 $n-m$</font>。</p><blockquote><p>证明：$m$ 个已称重的球可以通过天平上的<strong>两组内部交换部分的球</strong>来进行递归求解。其中，交换其中的一半 $\lceil m/2 \rceil$ 可以降低最多的解空间。</p><script type="math/tex; mode=display">g(n)=g(n-m)+g( \lfloor m/2 \rfloor)+g( \lceil m/2 \rceil)</script></blockquote><p>根据引理3，可得信息论约束</p><script type="math/tex; mode=display">\lceil m/2 \rceil\leq3^{S-1}\\n-m \leq3^{S-1}</script><h2 id="递归求解程序"><a href="#递归求解程序" class="headerlink" title="递归求解程序"></a>递归求解程序</h2><p>$n$ 球问题每一步递归分治，要么退化成引理1的情况（$f(n)=f(m)+g(n-m)$），要么退化成引理3的情况 $g(n)=g(m)+g( \lfloor (n-m)/2 \rfloor)+g( \lceil (n-m)/2 \rceil)$。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">g</span>(<span class="params">n: <span class="built_in">int</span>, max_steps: <span class="built_in">int</span> = <span class="number">3</span>, step: <span class="built_in">int</span> = <span class="number">1</span></span>):</span><br><span class="line">  <span class="keyword">if</span> n &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">  m = <span class="built_in">max</span>(<span class="number">1</span>, n - <span class="built_in">pow</span>(<span class="number">3</span>, max_steps - step))</span><br><span class="line">  <span class="keyword">while</span> math.ceil(m/<span class="number">2</span>) &lt;= <span class="built_in">pow</span>(<span class="number">3</span>, max_steps - step) <span class="keyword">and</span> m &lt;= n:</span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">      <span class="string">&quot;&#123;indent&#125;[step &#123;step&#125;] g(n=&#123;n&#125;)\t\t[&#123;remains&#125;, &#123;left&#125; - &#123;right&#125;];&quot;</span><span class="comment">#+&quot;\tremain=&#123;remains&#125;\tleft=&#123;left&#125;\tright=&#123;right&#125;&quot;</span></span><br><span class="line">      .<span class="built_in">format</span>(</span><br><span class="line">        indent = <span class="string">&quot;    &quot;</span> * (step - <span class="number">1</span>),</span><br><span class="line">        n       = n,</span><br><span class="line">        step    = step,</span><br><span class="line">        remains = n - m,</span><br><span class="line">        left    = m // <span class="number">2</span> <span class="keyword">if</span> m % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> m // <span class="number">2</span> + <span class="number">1</span>,</span><br><span class="line">        right   = m // <span class="number">2</span> <span class="keyword">if</span> m % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="built_in">str</span>(m // <span class="number">2</span>) + <span class="string">&quot;(+)&quot;</span></span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span> step &lt; max_steps:</span><br><span class="line">      g(n-m, max_steps, step + <span class="number">1</span>)</span><br><span class="line">      g(m // <span class="number">2</span> <span class="keyword">if</span> m % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> m // <span class="number">2</span> + <span class="number">1</span>, max_steps, step + <span class="number">1</span>)</span><br><span class="line">      g(m // <span class="number">2</span>, max_steps, step + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    m += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">n: <span class="built_in">int</span>, max_steps: <span class="built_in">int</span> = <span class="number">3</span>, step: <span class="built_in">int</span> = <span class="number">1</span></span>):</span><br><span class="line">  <span class="keyword">if</span> n &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">if</span> step == <span class="number">1</span> <span class="keyword">and</span> max_steps &gt; math.ceil(math.log(n, <span class="number">3</span>)):</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;[Warning] Extra steps, you only need [&#123;steps_required&#125;] steps to solve [&#123;n&#125;] ball game. Auto relacing max_steps...&quot;</span></span><br><span class="line">        .<span class="built_in">format</span>(</span><br><span class="line">          n = n,</span><br><span class="line">          steps_required = math.ceil(math.log(n, <span class="number">3</span>))</span><br><span class="line">        )</span><br><span class="line">      )</span><br><span class="line">      max_steps = math.ceil(math.log(n, <span class="number">3</span>))</span><br><span class="line">      <span class="comment"># return</span></span><br><span class="line">  m = <span class="built_in">max</span>(<span class="number">1</span>, n - <span class="built_in">pow</span>(<span class="number">3</span>, max_steps - step) // <span class="number">2</span>)</span><br><span class="line">  <span class="keyword">if</span> m &gt; <span class="built_in">min</span>(n, <span class="built_in">pow</span>(<span class="number">3</span>, max_steps - step)):</span><br><span class="line">    steps_required = max_steps</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">max</span>(<span class="number">1</span>, n - <span class="built_in">pow</span>(<span class="number">3</span>, steps_required - step) // <span class="number">2</span>) &gt; <span class="built_in">min</span>(n, <span class="built_in">pow</span>(<span class="number">3</span>, steps_required - step)): steps_required += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;No solution!\nTO solve [&#123;n&#125;] ball game max_steps must be at least [&#123;steps_required&#125;].\nAnd [&#123;max_steps&#125;] steps can solve at most [&#123;n_required&#125;] ball game.&quot;</span></span><br><span class="line">      .<span class="built_in">format</span>(</span><br><span class="line">        n = n,</span><br><span class="line">        steps_required = steps_required,</span><br><span class="line">        max_steps = max_steps,</span><br><span class="line">        n_required = math.floor(<span class="number">3</span>/<span class="number">2</span>*<span class="built_in">pow</span>(<span class="number">3</span>, max_steps - step))</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  <span class="keyword">while</span> m &lt;= <span class="built_in">min</span>(n, <span class="built_in">pow</span>(<span class="number">3</span>, max_steps - step)):</span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">      <span class="string">&quot;&#123;indent&#125;[step &#123;step&#125;] f(n=&#123;n&#125;)\t\t[&#123;remains&#125;, &#123;left&#125; - &#123;right&#125;];&quot;</span><span class="comment">#+&quot;\tremain=&#123;remains&#125;\tleft=&#123;left&#125;\tright=&#123;right&#125;&quot;</span></span><br><span class="line">      .<span class="built_in">format</span>(</span><br><span class="line">        indent = <span class="string">&quot;    &quot;</span> * (step - <span class="number">1</span>),</span><br><span class="line">        n       = n,</span><br><span class="line">        step    = step,</span><br><span class="line">        remains = n - m,</span><br><span class="line">        left    = m // <span class="number">2</span> <span class="keyword">if</span> m % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> m // <span class="number">2</span> + <span class="number">1</span>,</span><br><span class="line">        right   = m // <span class="number">2</span> <span class="keyword">if</span> m % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="built_in">str</span>(m // <span class="number">2</span>) + <span class="string">&quot;(+)&quot;</span></span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span> step &lt; max_steps:</span><br><span class="line">      g(    m, max_steps, step + <span class="number">1</span>)</span><br><span class="line">      f(n - m, max_steps, step + <span class="number">1</span>)</span><br><span class="line">    m += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># f(8, 2)</span></span><br><span class="line"><span class="comment"># f(4, 5)</span></span><br><span class="line"><span class="comment"># f(13, 3)</span></span><br><span class="line"><span class="comment"># f(14, 3)</span></span><br><span class="line">f(<span class="number">999</span>, <span class="number">6</span>)</span><br><span class="line"><span class="comment"># f(4, 10)</span></span><br></pre></td></tr></table></figure><h2 id="程序测试"><a href="#程序测试" class="headerlink" title="程序测试"></a>程序测试</h2><p>从程序中我们可以发现 12 球存在辅助球解法（输出中，“<code>(+)</code>” 号表示辅助球），13 球只有辅助球解法，14球不存在 3 步内解法。4 步最多可以求解40球。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">输入：f(12, 3)</span><br><span class="line">输出：</span><br><span class="line">[step 1] f(n=12)                [4, 4 - 4];</span><br><span class="line">    [step 2] g(n=8)             [3, 3 - 2(+)];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">        [step 3] g(n=2)         [1, 1 - 0(+)];</span><br><span class="line">    [step 2] f(n=4)             [1, 2 - 1(+)];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">        [step 3] f(n=1)         [0, 1 - 0(+)];</span><br><span class="line">[step 1] f(n=12)                [3, 5 - 4(+)];</span><br><span class="line">    [step 2] g(n=9)             [3, 3 - 3];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">    [step 2] f(n=3)             [1, 1 - 1];</span><br><span class="line">        [step 3] g(n=2)         [1, 1 - 0(+)];</span><br><span class="line">        [step 3] f(n=1)         [0, 1 - 0(+)];</span><br><span class="line">    [step 2] f(n=3)             [0, 2 - 1(+)];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入：f(13, 3)</span><br><span class="line">输出：</span><br><span class="line">[step 1] f(n=13)                [4, 5 - 4(+)];</span><br><span class="line">    [step 2] g(n=9)             [3, 3 - 3];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">    [step 2] f(n=4)             [1, 2 - 1(+)];</span><br><span class="line">        [step 3] g(n=3)         [1, 1 - 1];</span><br><span class="line">        [step 3] f(n=1)         [0, 1 - 0(+)];</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：f(14, 3)</span><br><span class="line">输出：</span><br><span class="line">No solution!</span><br><span class="line">TO solve [14] ball game max_steps must be at least [4].</span><br><span class="line">And [3] steps can solve at most [13] ball game.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：f(41, 4)</span><br><span class="line">输出：</span><br><span class="line">No solution!</span><br><span class="line">TO solve [41] ball game max_steps must be at least [5].</span><br><span class="line">And [4] steps can solve at most [40] ball game.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：f(4, 10)</span><br><span class="line">输出：</span><br><span class="line">[Warning] Extra steps, you only need [2] steps to solve [4] ball game. Auto relacing max_steps...</span><br><span class="line">[step 1] f(n=4)         [1, 2 - 1(+)];</span><br><span class="line">    [step 2] g(n=3)             [1, 1 - 1];</span><br><span class="line">    [step 2] f(n=1)             [0, 1 - 0(+)];</span><br></pre></td></tr></table></figure><p>彩蛋：999 个球问题最少需要 7 步解决。（<a href="https://www.zhihu.com/question/20854512/answer/16411345）">https://www.zhihu.com/question/20854512/answer/16411345）</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：f(999, 6)</span><br><span class="line">输出：</span><br><span class="line">No solution!</span><br><span class="line">TO solve [999] ball game max_steps must be at least [7].</span><br><span class="line">And [6] steps can solve at most [364] ball game.</span><br></pre></td></tr></table></figure><blockquote><p>进一步，这个问题还可以求解方案数，此处不再进一步讨论。</p></blockquote><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul><li><a href="https://juejin.cn/post/6844903630147944462">谷歌面试题之-12球称重问题- 掘金</a></li><li><a href="https://zh.wikipedia.org/wiki/秤球問題">秤球问题- 维基百科，自由的百科全书</a><ul><li>Wikipedia 中的结论是不考虑辅助球的。本文中则默认可以使用 1 个辅助球。</li></ul></li><li><a href="https://www.zhihu.com/question/348811511/answer/852591656">知乎上的某个回答……</a></li><li><a href="https://zhuanlan.zhihu.com/p/516425776">12球问题到n球问题的算法解</a></li><li><a href="https://zhuanlan.zhihu.com/p/368050985">「小球称重问题」完整版解答汇总</a></li><li><a href="https://www.acfun.cn/a/ac30241454">12枚硬币称量问题 底层逻辑完美分析 一亿个球你也行</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;&lt;font style=&#39;color:red;font-weight:bold;&#39;&gt;12球问题&lt;/font&gt;：12个乒乓球，有一个次品，不知轻重，用一台无砝码天平称三次，找出次品，&lt;strong&gt;同时&lt;/strong&gt;告知轻重？&lt;/p&gt;
&lt;h2 id=&quot;一种基本解法&quot;&gt;&lt;a href=&quot;#一种基本解法&quot; class=&quot;headerlink&quot; title=&quot;一种基本解法&quot;&gt;&lt;/a&gt;一种基本解法&lt;/h2&gt;&lt;img data-src=&quot;/12%E7%90%83%E9%97%AE%E9%A2%98%E5%8F%8A%E5%85%B6%E6%89%A9%E5%B1%95%E7%9A%84%E7%AE%97%E6%B3%95%E8%A7%A3/12%E7%90%83%E9%97%AE%E9%A2%98.jpg&quot; class=&quot;&quot; title=&quot;12球问题&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;12球问题可以用信息论来保证有解。整个解空间为24，由于天平每次可以三分，所以 12 球问题相对于天平的信息量为 $\log_3 24 &amp;lt;\log_3 27=3$，因此在 3 步内有解。</summary>
    
    
    
    <category term="Think" scheme="https://stellarkey.github.io/categories/Think/"/>
    
    
    <category term="算法" scheme="https://stellarkey.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>从0到1</title>
    <link href="https://stellarkey.github.io/%E4%BB%8E0%E5%88%B01/"/>
    <id>https://stellarkey.github.io/%E4%BB%8E0%E5%88%B01/</id>
    <published>2021-08-17T17:49:49.000Z</published>
    <updated>2021-08-17T17:56:21.764Z</updated>
    
    <content type="html"><![CDATA[<p>“师傅领进门，修行在个人。”做一件事最大的阻碍，往往在一开始。<span id="more"></span></p><h1 id="意识到存在"><a href="#意识到存在" class="headerlink" title="意识到存在"></a>意识到存在</h1><h1 id="搜集资料"><a href="#搜集资料" class="headerlink" title="搜集资料"></a>搜集资料</h1><h1 id="记忆和思考"><a href="#记忆和思考" class="headerlink" title="记忆和思考"></a>记忆和思考</h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;“师傅领进门，修行在个人。”做一件事最大的阻碍，往往在一开始。</summary>
    
    
    
    <category term="Learn" scheme="https://stellarkey.github.io/categories/Learn/"/>
    
    
  </entry>
  
  <entry>
    <title>做个随想录</title>
    <link href="https://stellarkey.github.io/%E5%81%9A%E4%B8%AA%E9%9A%8F%E6%83%B3%E5%BD%95/"/>
    <id>https://stellarkey.github.io/%E5%81%9A%E4%B8%AA%E9%9A%8F%E6%83%B3%E5%BD%95/</id>
    <published>2021-08-04T17:10:52.000Z</published>
    <updated>2022-05-25T16:40:02.300Z</updated>
    
    <content type="html"><![CDATA[<p>受到 <a href="https://hitokoto.cn/">Hitokoto 一言</a> 的启发。前几日看到一个博主：<a href="https://blog.l0v0.com/">智伤帝</a>。动了念头。<span id="more"></span></p><p>目标：一个可以动态维护的文字系统，前端进行展示和传输，后端进行存储和处理。</p><h1 id="创建数据库（废止）"><a href="#创建数据库（废止）" class="headerlink" title="创建数据库（废止）"></a>创建数据库（废止）</h1><p>使用 SQLite 创建所需的数据库存储系统。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> idea;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> idea (</span><br><span class="line">    id <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY AUTOINCREMENT <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    content TEXT <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    author TEXT <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> 佚名,</span><br><span class="line">    description TEXT,</span><br><span class="line">    origin TEXT, </span><br><span class="line">    create_time <span class="type">INTEGER</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    update_time <span class="type">INTEGER</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    stars <span class="type">INTEGER</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入新的条目</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> idea (content, author, description, origin, create_time, update_time) </span><br><span class="line">    <span class="keyword">VALUES</span>(&quot;hello world.&quot;, &quot;vel&quot;, &quot;The first commit of all time.&quot;, &quot;https://vel.life&quot;, DateTime(<span class="string">&#x27;now&#x27;</span>), DateTime(<span class="string">&#x27;now&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 更新</span></span><br><span class="line"><span class="keyword">UPDATE</span> idea <span class="keyword">SET</span> content <span class="operator">=</span> &quot;hello world!&quot;, update_time <span class="operator">=</span> DateTime(<span class="string">&#x27;now&#x27;</span>) <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 有人点赞</span></span><br><span class="line"><span class="keyword">UPDATE</span> idea <span class="keyword">SET</span> stars <span class="operator">=</span> stars <span class="operator">+</span> <span class="number">1</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h1 id="前端的选择"><a href="#前端的选择" class="headerlink" title="前端的选择"></a>前端的选择</h1><ul><li><a href="https://mattboldt.github.io/typed.js/"><code>typed.js</code></a> 打字机</li><li><a href="https://www.prisma.io/"><code>prisma.js</code></a> 数据库操作（废止）</li></ul><h1 id="最终方案"><a href="#最终方案" class="headerlink" title="最终方案"></a>最终方案</h1><p>为了简单，直接本地编辑文章，网页端动态读取并转换成句子列表，然后 shuffle 并展示出来。</p><p><font style='color:red;font-weight:bold;'>效果展示</font>：<a href="https://vel.wiki/">https://vel.wiki/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;受到 &lt;a href=&quot;https://hitokoto.cn/&quot;&gt;Hitokoto 一言&lt;/a&gt; 的启发。前几日看到一个博主：&lt;a href=&quot;https://blog.l0v0.com/&quot;&gt;智伤帝&lt;/a&gt;。动了念头。</summary>
    
    
    
    <category term="Work" scheme="https://stellarkey.github.io/categories/Work/"/>
    
    
  </entry>
  
  <entry>
    <title>圆明园游记</title>
    <link href="https://stellarkey.github.io/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/"/>
    <id>https://stellarkey.github.io/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/</id>
    <published>2021-04-27T14:36:19.000Z</published>
    <updated>2021-06-01T19:30:40.203Z</updated>
    
    <content type="html"><![CDATA[<p>今日游了圆明园。南进南出，自成循环。清风从过，巨风藏其间。动物以鸟类为主，辅以湖中的鱼。<span id="more"></span></p><p>多日不曾行走，无目的的行走。而走一遭。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/df233cc7495a709dc3c0472aba6f9da-1619534551942.jpg" class="" title="未开的荷花"><p>湖面上有不多的鸟类栖息，岸边有不多的三脚架，背后是巨大口径的摄像机与师。然而，鹅不畏惧人，怡然自得，略过湖面时带起水波。咔嚓声接连闪动。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/11f124962be1bfc62357168c2d8a3e3-1619535098909.jpg" class="" title="水上嬉戏的鸟类"><p>我告诫自我要冷静。鱼在水下有，它们也不冷静，也冷静，相互像是捕食者，然而又未浮于表面。在不求证的视角下，观察也便到此了。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/ba8121bebf58457646b40f0bd79cdc0-1619535096015.jpg" class="" title="鱼与鸟"><p>春风和畅。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/b160d662fbfd82ac244f42f2cf4893f-1619535092729.jpg" class="" title="镜湖"><p>凭栏远眺。看不见什么。所以要想到翱翔。而鱼翔浅底。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/af1f2a7fa33497ff27d478a78bc540a-1619535118568.jpg" class="" title="看栏杆"><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/7a8597c02ca8d4b0d3ba1d2a94e0acb-1619535215577.jpg" class="" title="亭楼"><p>在铁桥上遇见捞集浮藻的工人，</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/a5f910850b21a5bc7deae1820d80000-1619535232965.jpg" class="" title="捞藻"><p>然而情绪不能共鸣。感到需要抓拍，可是只找到视觉美。我想没有知识，获得的美也是限定的；终究是残缺的美。</p><p>对焦太阳，获得低曝。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/49da05994e8e6ec19edf76a5adc9e34-1619535401793.jpg" class="" title="残墟"><p>遇到迷宫。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/b19500f0bbed437402cf2e1ea7197fc-1619535429597.jpg" class="" title="迷宫"><p>再次低曝。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/f7e9a421ddf70c7db807810dfa1d62c-1619535481034.jpg" class="" title="半遮光"><p>暗光色似乎挺适合我。我也未尝其他色彩。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/bb030c750719c710fea5b55c6160e36-1619535509714.jpg" class="" title="日与栏杆"><p>返回途中遇见人偶。拍之。</p><img data-src="/%E5%9C%86%E6%98%8E%E5%9B%AD%E6%B8%B8%E8%AE%B0/cf2f1e8883b80691ad035a26f56febb-1619535573718.jpg" class="" title="人偶"><hr><p>有发现美的能力，然而不可从技术上精确定位。</p><p>没有知识，对美的理解也会不足。</p><p>然而，竟然是不可说的。</p><p>我者不可说！于是我只好沉默地欣赏，沉默着离去。没有表情地欣喜，没有心动的纪念。如果情绪总取决于外物，则要么挑选外物，要么固步自封，要么就要随波逐流。</p><p>而我不想成为后两者。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今日游了圆明园。南进南出，自成循环。清风从过，巨风藏其间。动物以鸟类为主，辅以湖中的鱼。</summary>
    
    
    
    <category term="View" scheme="https://stellarkey.github.io/categories/View/"/>
    
    
  </entry>
  
  <entry>
    <title>挖矿入门</title>
    <link href="https://stellarkey.github.io/%E6%8C%96%E7%9F%BF%E5%85%A5%E9%97%A8/"/>
    <id>https://stellarkey.github.io/%E6%8C%96%E7%9F%BF%E5%85%A5%E9%97%A8/</id>
    <published>2021-01-04T10:04:25.000Z</published>
    <updated>2022-05-21T19:39:17.224Z</updated>
    
    <content type="html"><![CDATA[<p>挖矿入门。<span id="more"></span></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://cloud.tencent.com/">腾讯云</a></p><h1 id="币价行情"><a href="#币价行情" class="headerlink" title="币价行情"></a>币价行情</h1><blockquote><p><a href="https://coinmarketcap.com/">https://coinmarketcap.com/</a></p></blockquote><p>数字货币行情波动剧烈。</p><p>BTC：（比特币）</p><img data-src="/%E6%8C%96%E7%9F%BF%E5%85%A5%E9%97%A8/image-20210104182035365.png" class="" title="BTC行情-20210104"><p>ETH：（以太坊）</p><blockquote><p>以太坊发生过硬分叉，黑客盗走了大量ETC（<strong>Et</strong>hereum <strong>C</strong>lassic，DAO攻击事件）。在DAO交易生效锁定28天到期之前，开发者决定回滚DAO智能合约，并产生了新货币ETH（<strong>Eth</strong>ereum）。</p></blockquote><img data-src="/%E6%8C%96%E7%9F%BF%E5%85%A5%E9%97%A8/image-20210104182139947.png" class="" title="CFX行情-20210104"><p>CFX：（Conflux）</p><img data-src="/%E6%8C%96%E7%9F%BF%E5%85%A5%E9%97%A8/image-20210104181958548.png" class="" title="CFX行情-20210104"><h1 id="Windows下挖矿"><a href="#Windows下挖矿" class="headerlink" title="Windows下挖矿"></a>Windows下挖矿</h1><p>可以使用<a href="http://www.qskg.top/">轻松矿工</a>、AIminer之类的集成软件快捷挖矿。</p><p>具体参考：<a href="https://stellarkey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/#PoW%E5%85%B1%E8%AF%86%E4%BD%93%E9%AA%8C">PoW体验</a>。</p><h1 id="Linux下挖矿"><a href="#Linux下挖矿" class="headerlink" title="Linux下挖矿"></a>Linux下挖矿</h1><blockquote><p><a href="https://github.com/NebuTech/NBMiner">NBMiner</a> 挖矿软件，集成度较高</p></blockquote><p>下载相应版本的NBMiner软件，解压，即可运行.sh脚本进行挖矿。操作比较简单。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/NebuTech/NBMiner/releases/download/v36.1/NBMiner_36.1_Linux.tgz</span><br><span class="line"></span><br><span class="line">tar xvf NBMiner_36.1_Linux.tgz</span><br><span class="line"></span><br><span class="line">cd NBMiner_Linux/</span><br><span class="line">vim ./start_conflux.sh # 修改脚本中钱包地址并保存</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nbminer -a algo -o 协议+连接类型://矿池地址:矿池端口 -u 钱包地址或用户名.矿工名:密码可选</span></span><br><span class="line">./start_conflux.sh     # 这个脚本里保存的就是一行挖矿命令</span><br></pre></td></tr></table></figure><div><hr><font size=5>相关文章</font><ul><li><a href="https://stellarkey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/">区块链课程实验</a></li><li><a href="https://stellarkey.github.io/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/">零知识证明简记</a></li><li><a href="https://stellarkey.github.io/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/">北斗UMA专项</a></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;挖矿入门。</summary>
    
    
    
    <category term="Learn" scheme="https://stellarkey.github.io/categories/Learn/"/>
    
    
    <category term="区块链" scheme="https://stellarkey.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="Conflux" scheme="https://stellarkey.github.io/tags/Conflux/"/>
    
  </entry>
  
  <entry>
    <title>论学习方法</title>
    <link href="https://stellarkey.github.io/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    <id>https://stellarkey.github.io/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</id>
    <published>2020-12-20T06:24:59.000Z</published>
    <updated>2022-05-21T19:39:04.237Z</updated>
    
    <content type="html"><![CDATA[<center><font face=kaiti color=deepskyblue size=4.7><i><strong>两岸猿声啼不住，轻舟已过万重山。</strong></i></font></center><p>本文为写给学堂在线疾风计划的同学的一些学习经验分享。因时间仓促、知识有限，难以面面俱到；仅供参考。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201220154821058.png" class="" title="疾风计划"><span id="more"></span><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.xuetangx.com/program/XT0809003778001">学堂在线 - 疾风计划</a>，<a href="./疾风计划经验分享.pdf">经验分享PPT</a></p><p><a href="https://stellarkey.github.io/%E5%B9%B4%E4%B8%AD%E6%80%BB%E7%BB%93/">年中总结</a></p><p><a href="https://stellarkey.github.io/%E5%AD%A6%E5%A0%82%E5%9C%A8%E7%BA%BF-912%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9%E8%AE%A1%E5%88%92/">912 内容学习计划</a></p><p><a href="https://program-think.blogspot.com/2020/12/Study-and-Life.html">学习与人生——700篇博文之感悟</a> 编程随想，<a href="https://github.com/programthink/books">推荐书单</a></p><blockquote><p><a href="https://program-think.blogspot.com/2019/12/Time-and-Life.html">时间与人生——跨入本世纪20年代的随想</a></p><p><a href="https://program-think.blogspot.com/2015/12/Hobbies-and-Interests.html">什么是【真正的】兴趣爱好？以及它有啥好处？</a></p><p><a href="https://program-think.blogspot.com/2013/09/knowledge-structure.html">如何完善自己的知识结构</a></p></blockquote><h1 id="兴趣-意志力-执行力"><a href="#兴趣-意志力-执行力" class="headerlink" title="兴趣 | 意志力 | 执行力"></a>兴趣 | 意志力 | 执行力</h1><h2 id="动机森林"><a href="#动机森林" class="headerlink" title="动机森林"></a><font color=blue>动机森林</font></h2><p>什么是动机？首先，一个人<strong>做任何事情都是有目的</strong>的。</p><p>打个比方，在机器学习中，梯度下降的目的是为了降低损失函数在特定样本上的函数值，降低函数值的目的则是最优化，那么最优化就是人们使用机器学习的动机吗？并不是，最优化的目的是为了让某个分类或者回归指标变得最好，而变得最好的目的则是在某个问题上机器可以达到甚至超越人类水平……这还没完，超越人类水平对于商业公司而言的是希望获得最大的经济效益，对于科研人员而言则可能是做出领先世界的研究成果……</p><p>最后，这些对于同一件事的不同分叉，构成了一棵动机树。<strong>树上的每一个<font color=red>叶节点</font>都成为一个真正的动机。</strong></p><p>每一个事件都对应着一颗动机树，这便是动机森林。将动机森林合并，便形成了前馈网络。我们还可以对不同事件的树根进行聚合，得到更宏观的动机。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201227003056945.png" class="" title="动机森林"><p>以上便是动机模型。</p><h2 id="内在动机"><a href="#内在动机" class="headerlink" title="内在动机"></a>内在动机</h2><p>动机可能具有“外部性”或者“内部性”。</p><p>以“<strong>学习编程</strong>”为例：</p><ul><li>假设某人的父母听说学编程有前途，于是让孩子去学习某门编程语言——这属于<strong>被动学习</strong>。</li><li>假设某人听说程序员比较好找工作，于是去学习某门编程语言——这属于<strong>主动学习的“功利因素”</strong>。</li><li>假设某人本来就喜欢编程这项活动，于是去学习某门编程语言——这属于<strong>主动学习的“非功利因素”</strong>。</li></ul><p>“被动学习”与“基于功利因素的学习”有一个共同点——其动机是【外在】的。</p><blockquote><p>如果某人学习的动机是【外在】，这个<strong>动机【未必】能持久，一旦外部环境变了，其动机可能就消失了</strong>。<br>反之，【内在】的动机比较能持久（不会轻易受到外部环境的干扰）。</p></blockquote><p>内在动机通常取决于你很长时间的历史经历——你是什么样的人，喜欢什么样的形式，你的行为模式是怎样的……这些东西在短期内不会发生剧变，甚至对于多数人，成年以后便终生不再改变。</p><p>下面举两个内在动机的例子。</p><p><strong><font color=blue>好奇心</font></strong>。好奇心的本质来源于对新知的渴望，意味着你有一种知道更多东西的心理倾向。但是，好奇心会随着你接受的新知的具体属性和顺序而发生改变。<strong>大多数人在童年时代都具备天生的足量好奇心</strong>，但是这些好奇心由于新知的融入，因环境而产生分化，有的人渐渐失去好奇心，而有的人的好奇心分化到特定领域……</p><p><strong><font color=blue>思维乐趣</font></strong>。思维乐趣是在脑海中自成一派，是指热爱思考的人。具有好奇心的人，不一定同时享有思维乐趣；能够享有思维乐趣的人，不一定具备好奇心。比如，有些同学喜欢算微积分，一道积分题算一天，这个过程充满了思考，但是并不会接收新知；另一些同学，喜欢看MOOC，但是从来不做笔记，也不做题，看完了就完了，这个过程虽然获得了新知，但缺乏思考，当需要具体应用时，问题就会暴露出来。<strong>思维乐趣不具有普遍性，多数人很难从纯粹的思考获得幸福感</strong>。</p><h3 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h3><p><strong><font color=red>同时保有好奇心和思维乐趣两种内在动机</font></strong>的人，则称之为具备<strong><font color=blue>兴趣</font></strong>的人。</p><blockquote><p>但是，这只是从定义上明确了兴趣，对于兴趣的外延解释能力有限。</p></blockquote><h4 id="伪兴趣"><a href="#伪兴趣" class="headerlink" title="伪兴趣"></a>伪兴趣</h4><p>什么是“伪兴趣”：</p><ul><li>三分钟热度<ul><li>得到了很快就失去兴趣；得不到的，很快就畏难而退</li></ul></li><li>动机存在功利因素<ul><li>仅仅因为比特币市场火爆，才学习区块链技术</li></ul></li><li>外在动机<ul><li>被强迫去做某事<ul><li>被学校布置任务；被家长强迫学习</li></ul></li><li>受到社会观念约束<ul><li>高考填志愿选择热门专业</li></ul></li><li>为了得到群体认可<ul><li>为了出名、获得荣誉而做某事</li></ul></li><li>受到法律约束<ul><li>义务教育；义务服兵役</li></ul></li></ul></li><li>纯粹感官刺激、本能驱动的行为<ul><li>吃顿美餐、泡个温泉……</li></ul></li><li>消极行为<ul><li>边工作边听音乐。这时，听音乐是一种消极的行为，不需要你主观意识的参与</li></ul></li><li>心理舒适区<ul><li>一种“心理状态”。处于这种状态，你会感觉到放松，没有压力和焦虑。<ul><li>如果你处于某个环境中，在该环境下所需要的行为你都可以轻松搞定；你就处于“心理舒适区”。</li></ul></li><li>看知乎、看视频（短视频、电影、电视剧）、看微博……</li></ul></li></ul><h4 id="真正的兴趣"><a href="#真正的兴趣" class="headerlink" title="真正的兴趣"></a>真正的兴趣</h4><p>兴趣所具有的外延特征：</p><ul><li><strong><font color=blue>持久</font></strong><ul><li>几年，几十年……</li></ul></li><li><strong><font color=blue>内在动机</font></strong>（好奇心 + 思维乐趣）<ul><li>动机完全来源于内心，不随外界环境改变而轻易变迁</li></ul></li><li><strong><font color=blue>思维高度参与</font></strong><ul><li>编程、写作、作曲……各种需要强创作能力的行为</li></ul></li><li><strong><font color=blue>幸福感 / 快感</font></strong><ul><li>费马：数学只是业余爱好，研究成果大多没有发表<ul><li>“费马小定理”是他与朋友的往来书信中顺便提及的：$a^{m-1} \equiv 1(\bmod m)$</li></ul></li><li>过程性的快乐：持久但强度不高（即使尚未获得成果，它也会起作用）</li><li>愿意付出其他代价：从快感中获得补偿<ul><li>《侣行》</li></ul></li></ul></li><li><strong><font color=blue>成瘾性</font></strong><ul><li>真正的兴趣让人上瘾<ul><li>熬夜肝代码，调BUG</li></ul></li></ul></li><li><strong><font color=blue>走出心理舒适区</font></strong><ul><li>深度提升：在某个领域更进一步</li><li>广度提升：涉足一个全新的领域</li></ul></li><li><strong><font color=deepskyblue>心流</font></strong>（flow）<ul><li>由心理学家米哈里·契克森米哈伊（Mihaly Csikszentmihalyi）最早提出的概念。在心流状态下，你会忘记时间流逝、外界变迁，达到一种”<strong>忘我</strong>“的境界，全身心地投入到你感兴趣的活动中。</li><li>如图所示，当你<strong>在某个领域达到高水平技能，同时还面临着高难度任务的挑战</strong>，就有可能进入到心流的状态。（你对某个领域的兴趣越大，你越有可能在心流模型的两个维度同时达到高水平。）</li></ul></li></ul><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/9bfrey0IpObw5IW3kpM78jgOUf6tgclsYlvmeKKKxHHn0Gvxl8ntygrnvCXtFPs7IrbIetJnMvGIhCtdsFZuax06Lqo-8Dt7JiCUnbMHc70ocDJ4iMmBJ_uzb3JMVDFIxMlruTP8J9U" class="" title="维基百科-“心流”"><p>真正的兴趣可以使你在人生中获得更多的快乐、更充实的生活。</p><h2 id="获得真正的兴趣"><a href="#获得真正的兴趣" class="headerlink" title="获得真正的兴趣"></a>获得真正的兴趣</h2><blockquote><p>如何获得真正的兴趣仍然是一个开放的话题。这里只讲一些简单的思考。</p><p><a href="https://www.zhihu.com/question/24963114/answer/29635971">本科、硕士和博士有何区别？</a></p></blockquote><p>获得兴趣的必要条件是获得好奇心和思维乐趣。</p><p>好奇心一般不需要专门培养，当了解的越多，好奇心也会更强。只是需要注意，<strong>对广度的把握</strong>；如果对某一个领域过度专注，就会相对失去对其它领域的好奇心。至少，在获得真正的兴趣之前，不要过分偏科。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201221110703168.png" class="" title="知识边界"><p>获得思维乐趣的方式，可以尝试从获取新知的过程中发掘。<strong>在获取新知的时候，适当地放慢速度</strong>，让新知和脑海中已存在的思想发生联结。在充分沉淀过后，内在的思考能力就会得到提升，当能力提升以后，便可以引发思考，并最终趋向于思维乐趣。</p><h2 id="自律"><a href="#自律" class="headerlink" title="自律"></a>自律</h2><p>一个网上广为流传的段子：</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/v2-74bf8d17930236ee4d28793d80b2aba0_720w.jpg" class="" title="胡适打牌"><blockquote><p>当然，原文并非一致：<a href="https://www.zhihu.com/question/20162890/answer/14180030">网上流传的季羡林吐槽、胡适打牌的日记属实吗？ - 田吉顺的回答 - 知乎</a></p></blockquote><p>自律意味着意志力；意志力通常与思维能力有关。</p><p>在获得思维乐趣之前，获取新知的同时，如果想要提升思考能力，就需要意志力。意志力可以帮你克服一些兴趣不起作用的场景。但意志力是一种宝贵的稀有资源，应该尽量让它在最有需要的场景发挥作用。</p><blockquote><p>意志力常常表现为一种偏执的信仰，任何新知都会不由自主地触发并强化它。</p></blockquote><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/dc-Cover-t387kh7bitbsdukgrkrmpho5a1-20190519010432.Medi.jpeg" class="" title="John Wick 3"><blockquote><p>《John Wick 3》: <em>“He Is a Man of Focus, Commitment and Sheer Fucking Will.”</em></p></blockquote><p>外在动机和好奇心是意志力的主要来源，虽然不稳定，但是会有效果。获得意志力有时也需要内在动机的支撑：</p><blockquote><p><em>鲍迈斯特的小组屡次发现，刻意掌控意志和进行自我控制很辛苦。如果你必须强迫自己去做某件事，而此时这件事又面临一个新的挑战，你就会很不情愿或是根本无法进行自我控制。这种现象被命名为自我损耗（ego depletion）。</em></p></blockquote><p>在现实生活中，意志力很难获得。</p><p><strong>意志力遵循马太效应</strong>，</p><ul><li>那些意志力比较强的人，他们就更有可能运用某些心理学的措施，来进一步提升自己的意志力；</li><li>而那些意志力很差的人，即使知道这些改进措施，也没法付诸实行。</li></ul><p>在互联网时代，这样的马太效应会进一步放大。大部分人的上网时间都用于<strong>消遣</strong>——你总是处在你的心理舒适区，而这会渐渐消磨掉你的意志。</p><p>遗憾的是，大多数人终生也无法“<strong>战胜自我</strong>”。</p><p>自律，获得意志力的过程，只有你自己可以完成，其他任何人都无法代替。好的环境，好的方法，只能给你可能性，只有靠你自己去捕获其中的必然性。</p><h2 id="小马过河"><a href="#小马过河" class="headerlink" title="小马过河"></a>小马过河</h2><blockquote><p><strong><i><font color=deepskyblue>勇于尝试。</font></i></strong></p></blockquote><p>我想讲一点关于<strong>执行力</strong>的事情。</p><p>这里可以以我自身为例。我想学前端已经很久了，但一直觉得前端技术是一个很大很复杂的领域，包括你去看简单的HTML代码——几乎没有什么简单可言。比如，尝试查看我博客上About页面的HTML源代码：<a href="https://stellarkey.github.io/about/">https://stellarkey.github.io/about/</a>。虽然整个页面看起来没有特别复杂，但对应的源代码也足有600行之多。</p><p>这使得我一直不敢轻易涉足前端。我总是尽量避免参与任何与前端相关的工作。</p><p>但是，最近，一个课程项目：<a href="https://stellarkey.github.io/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/">P2P系统设计</a>。因为要负责和前端对接，需要使用JavaScript编程，我被迫需要在几天时间上手前端。一开始觉得简直不可能，想找些Python的替代方案，但是效果都不好；最后咬咬牙，现学现卖，竟真的用JS做出来了。</p><p>道理固然是很重要的，但是，<strong>只有经历过的道理，才会在心中留下重量</strong>。就像小马过河的寓言，就像鲁迅的文字，就像王菲的歌……</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/77094b36acaf2eddfcfb778c801001e939019348.jpg" class="" title="小马过河"><p>执行力是一种与勇气更加挂钩的能力。与意志力不同的是，如果意志力所坚持的方向是错误的，执行力可以让你及时纠错；万事开头难，执行力是意志力开始发挥效力前的铺垫工作，是一切的开始。</p><p>执行力强调状态的变化；意志力强调状态的维持。</p><h1 id="知识结构"><a href="#知识结构" class="headerlink" title="知识结构"></a>知识结构</h1><blockquote><p>《<a href="https://book.douban.com/subject/10785583/">思考，快与慢</a>》，<a href="https://scholar.princeton.edu/kahneman">Daniel Kahneman</a></p></blockquote><h2 id="大脑的两个系统"><a href="#大脑的两个系统" class="headerlink" title="大脑的两个系统"></a>大脑的两个系统</h2><blockquote><p><a href="https://www.linkedin.com/pulse/brain-system-1-2-faraz-ehjaz">The Brain - System 1 and System 2</a></p></blockquote><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/1570612670044" class="" title="The Brain - System 1 and System 2"><p>我们的大脑存在快、慢两种做决定的方式：无意识的“系统1”，有意识的“系统2”。这两者是大脑应对不同场景的两套<strong>任务处理流程</strong>。</p><blockquote><p>注：心理学家基思·斯坦诺维奇（Keith Stanovich）和理查德·韦斯特（Richard West）率先提出的术语，用以说明大脑中的两套系统，即系统1和系统2。</p></blockquote><h3 id="系统1"><a href="#系统1" class="headerlink" title="系统1"></a>系统1</h3><p>系统1的运行是无意识且快速的，不怎么费脑力，没有感觉，完全处于自主控制状态。</p><p>比如：</p><ul><li>人脸识别、表情识别</li><li>听到某首（你熟悉的）乐曲，立即想到名称</li><li>（对于识字的人）一看到某个“字/单词”，就想到读音</li><li>周围存在笑声的时候，你也不自禁地笑起来</li></ul><p>系统1自动运行，其带给你（潜移默化）的直观感受是你所无法控制的：</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201221144728825.png" class="" title="视觉干扰"><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201221153759012.png" class="" title="立体直觉"><h3 id="系统2"><a href="#系统2" class="headerlink" title="系统2"></a>系统2</h3><p>系统2将注意力转移到需要费脑力的大脑活动（<strong>思维能力</strong>）上来，例如复杂的运算。系统2的运行通常与行为、选择和专注等主观体验相关联。</p><p>比如：</p><ul><li>计算 $37\times 24 = \;?$</li><li>逻辑推理</li><li>打游戏</li><li>看论文</li><li>创作……</li></ul><hr><p>系统1偏向于直觉/感知（无意识），系统2偏向于认知（有意识）。</p><p>和计算机相反的是，人类大脑的系统1耗能水平远低于系统2。</p><blockquote><p>真正的兴趣活动，离不开系统2的运作。</p></blockquote><h3 id="短路原理"><a href="#短路原理" class="headerlink" title="短路原理"></a>短路原理</h3><p>如果某个任务可以由“系统1”搞定，就不会再让“系统2”参与。</p><blockquote><p>对于司空见惯的常识，系统2将不再参与思考。</p></blockquote><p>即使有意识地调用系统2来完成某个任务，仍然可能受到系统1无意识中收集的信息的影响。</p><blockquote><p>下面是某个心理学实验：<br>　　对 A、B 两组被试，让他们填写一份问卷。问卷上有一系列历史名人，要求填写这些名人大概死于几岁。参与测试的人都知道这些名人，但未必记得他们的死亡年龄，只能进行大致的估计。<br>　　对于“A组”，他们的座位上标有一个随机数字。这个数字大概是几百或几千（很显然与年龄没啥关系）；对于“B组”，座位上没有标数字。<br>　　测试的结果，“A组”的问卷，对年龄的猜测显著高于“B组”。测试之后，再去询问“A组”的测试人员，相当比例的人【没有】意识到自己的座位上标有数字。<br>　　从这个测试可以看出：“系统1”在下意识（无意识）的情况下收集到的信息，也影响到了“系统2”。</p></blockquote><h3 id="如何提升思维能力"><a href="#如何提升思维能力" class="headerlink" title="如何提升思维能力"></a>如何提升思维能力</h3><ul><li>少看消遣性的内容，<strong>多看费脑筋的内容</strong></li><li><strong>多接触和学习不同领域</strong></li><li><strong>批判思维</strong><ul><li>弱批判思维：聆听与自己有冲突的意见，并寻找全部的谬误</li><li>强批判思维：质疑和反思自我，找到自己的全部谬误</li></ul></li><li><strong>培养兴趣</strong></li><li><strong>选择合适的信息媒介</strong></li></ul><h2 id="信息媒介"><a href="#信息媒介" class="headerlink" title="信息媒介"></a>信息媒介</h2><blockquote><p><a href="https://stellarkey.github.io/传播学/">传播学</a></p><p><a href="https://program-think.blogspot.com/2015/02/Is-Blogging-Dead.html">“传统博客”过时了吗？——兼谈各种媒介形态的优缺点</a></p></blockquote><p>相对于博客：</p><ul><li>微博客<ul><li>缺乏深度<ul><li>字数“显”限制</li></ul></li><li>碎片化<ul><li>无法集中注意力</li></ul></li><li>生命周期太短</li><li>信噪比低<ul><li>高价值内容远少于总阅读量</li></ul></li></ul></li><li>社交网络（比如微信）<ul><li>碎片化</li><li>信噪比低</li><li>干扰因素多<ul><li>频繁的互动、更新</li></ul></li></ul></li><li><strong>问答网站</strong>（比如知乎）<ul><li>需要提问能力、搜索能力（有一定基础）</li><li>能够展现的信息形式受限（小说、诗歌、散文……在问答网站上一般只有命题作文。）</li></ul></li><li><strong>Wiki百科</strong><ul><li>适合于事实的传播</li><li>不适合于观点的获取</li></ul></li><li><strong>书籍</strong><ul><li>主动性、系统性、深刻性</li><li>创作门槛较高<ul><li>目前出版变得越来越容易，导致筛选成本急剧上升</li></ul></li></ul></li></ul><h2 id="核心学习原则"><a href="#核心学习原则" class="headerlink" title="核心学习原则"></a>核心学习原则</h2><blockquote><p><em><font color=deepskyblue><strong>有限的精力，需要有限的专注。</strong></font></em></p></blockquote><h3 id="DIKW模型"><a href="#DIKW模型" class="headerlink" title="DIKW模型"></a>DIKW模型</h3><blockquote><p><a href="https://program-think.blogspot.com/2019/10/Systematic-Learning.html">如何【系统性学习】——从“媒介形态”聊到“DIKW 模型”</a></p></blockquote><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/vfMbn8C4VB4hG_Eg4rovih8lEMnb2Qwx8LLGrdjkKsl_Zr2graRjKsnVAUV5t2SqGs4f_xWSirtgCt1VbqgIQgjG3R-pjBOXrSaBWxLX6TF5JhTy_-W1ec62SpI7CmNPObazmwqfkdI" class="" title="DIZK模型"><ul><li><strong>Data</strong>（数据）<ul><li>从环境中直接获取的观测结果<ul><li>比如电路中的电信号，气象测量中的传感器值</li></ul></li></ul></li><li><strong>Information</strong>（信息）<ul><li>从Data中获得的简单结论；周期短，碎片化（<strong>WHAT</strong>？）<ul><li>从气象传感器中得出某个时段的平均气温</li></ul></li></ul></li><li><strong><font color=blue>Knowledge</font></strong>（知识）<ul><li>从Information中整合出的通用原理（<strong>HOW</strong>？）<ul><li>从气温统计中得出气候变化的规律</li></ul></li></ul></li><li><strong><font color=deepskyblue>Wisdom</font></strong>（智慧）<ul><li>从Knowledge中进行因果推断，获得本质（<strong>WHY</strong>？）<ul><li>“编程语言”有成百上千种，而“编程范式”只有大约十多种。“编程范式”就是一种 <font color=deepskyblue><strong>W</strong></font>（智慧）。</li></ul></li></ul></li></ul><blockquote><p><a href="https://en.wikipedia.org/wiki/Alan_Perlis">Alan Perlis</a>（<a href="https://zh.wikipedia.org/zh-hk/艾伦·佩利">艾伦·佩利</a>，【第一个】图灵奖得主）的名言——<strong><font color=red>不能影响你编程观点的语言，不值得你去学！</font></strong></p></blockquote><h3 id="少即是多"><a href="#少即是多" class="headerlink" title="少即是多"></a>少即是多</h3><p>我们应该着重学习有价值的内容，但就算只学习<strong><font color=blue>Knowledge</font></strong>（知识）和<strong><font color=deepskyblue>Wisdom</font></strong>（智慧），它们在整个人类世界中的数量也是十分庞大的。</p><p><strong><font color=red>知识爆炸</font></strong>在当代表现十分突出。做科研的要面对每年成千上万新鲜出炉的论文，做工程面对层出不穷的新模型新技术，自媒体和碎片化信息充斥了我们的闲暇生活。</p><p>这时候你需要做一些取舍——<strong>只记住核心的知识点，舍弃边缘的知识点</strong>。当需要用到那些边缘知识的时候，查阅笔记或者查阅搜索引擎就可以了。</p><p>除了对具体知识内容的过滤，还可能需要主动平衡整体学习的广度和深度。</p><p><strong>深度</strong>，就是每一个具体领域，你深入到了什么层次。</p><blockquote><p>如果一个人的知识结构只有广度没有深度，就会导致“<strong><font color=red>没有亮点</font></strong>”，变得没有竞争力，只能“纸上谈兵”。</p></blockquote><p><strong>广度</strong>，就是在你的知识结构中，包含了多少领域。</p><blockquote><p>现代社会不同领域之间的联系变得紧密，想要某个领域有足够的深入，必然要了解很多辅助性领域的知识。</p></blockquote><p><strong><font color=red>一个人的精力是极其有限的</font></strong>。如何平衡广度和深度呢？可以借鉴正态分布：<strong>在核心领域上最为深入</strong>，在一些相近的领域上也投入一定的时间，其他较为疏远的领域则可以浅尝辄止。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/6eH82UPynOfXmccG23GrSJGTiekvEedE7vXCej4JlIA1_bD8VqYZVRtBYoAgkimnJ9XcKKryPaw4HyXCqjX-lm7nrOWnZ6w1qbjgrcOJeu9zX2J5aeAxNFnjTRog" class="" title="知识的分布"><h3 id="知识拓扑"><a href="#知识拓扑" class="headerlink" title="知识拓扑"></a>知识拓扑</h3><blockquote><p><a href="https://www.processon.com/">ProcessOn</a> 流程图工具</p></blockquote><p>在学习计算机的过程中，大家很快会接触到一种叫做“<a href="http://songlee24.github.io/2015/05/07/topological-sorting/">拓扑排序</a>”的东西。大概的意思，就是你在学习A之前，你得先学会B；在学会B之前，先学会C和D……</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201221193552319.png" class="" title="粒子物理学"><p>如果一个领域有复杂的知识拓扑，那么合适的拓扑排序——找到一开始应该优先学习的内容，很重要。</p><p>如何获得一个领域的知识拓扑呢？</p><ul><li>看该领域的入门读物 / 百科 / 博客</li><li>询问某个熟悉该领域的人</li></ul><p>在疾风计划的课程大纲上，其实也展现了一个粗略的知识拓扑：</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201220154821058.png" class="" title="疾风计划"><blockquote><p>但是它并不细致，比如学习一部分数据结构或者离散数学，实际就可以开始学习一些简单的算法。这样的学习策略，可以一定程度地帮助你培养内在动机，从而点燃真正的兴趣。</p></blockquote><h3 id="知识森林"><a href="#知识森林" class="headerlink" title="知识森林"></a><font color=blue>知识森林</font></h3><p>如果把不同领域的知识拓扑放在一起，你就可以观察到我们之前提及的知识分布的离散化结构。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201225191809822.png" class="" title="知识树示例"><h2 id="费曼学习法"><a href="#费曼学习法" class="headerlink" title="费曼学习法"></a>费曼学习法</h2><blockquote><p><em><font color=deepskyblue><strong>以教促学。</strong></font></em></p></blockquote><p>假设你正在学习某个领域。费曼学习法即，你需要将这个领域的知识讲给一个在这个领域零基础的菜鸟，并且让他听懂。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/the-feynman-technique-safal-niveshak.jpeg" class="" title="Learning Effectively With the Feynman Technique (The Complete Guide)(https:&#x2F;&#x2F;www.lifehack.org&#x2F;862931&#x2F;feynman-technique)"><p>三种掌握程度：</p><ul><li>完全不知道讲什么<ul><li>对该领域还缺乏<strong>系统性</strong>的了解</li><li>需要重新“入门”</li></ul></li><li>讲着讲着会经常卡壳<ul><li>有了系统性了解，但还没有<strong>理顺</strong>整个领域</li><li>把卡壳的地方重新学习</li></ul></li><li>讲得出来，但别人听不懂<ul><li>无法做到深入浅出；没有做到换位思考</li><li>（通过讨论，把没讲明白的部分筛选出来，做进一步的分析）</li></ul></li></ul><h3 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h3><p>行使费曼学习法的一个好方法就是写博客。写博客面向的网络上随机的人，因此需要深入浅出的文章，这会潜意识地锻炼你写作的能力，同时使得博客的受众获得知识传播。</p><p>我也是在自学计算机的过程中，逐渐了解到博客的存在，并最终决定建立自己的博客。搭建一个博客，简单的可以直接在各种博客网注册账号，即可以发表文章；复杂的，则可能需要你架设自己的服务器、域名，你必须会一些前端的知识，面对各种工程问题你还需要一些DEBUG能力……写博客会督促你不断学习。最好的状态是，写博客成为你的一种兴趣。</p><h1 id="时间与人生"><a href="#时间与人生" class="headerlink" title="时间与人生"></a>时间与人生</h1><p><a href="http://www.stat.ucla.edu/~sczhu/Blog_articles/%E5%AD%A6%E6%9C%AF%E4%BA%BA%E7%94%9F%EF%BC%9A%E6%96%87%E7%AB%A0%E5%8D%83%E5%8F%A4%E4%BA%8B%E5%BE%97%E5%A4%B1%E5%AF%B8%E5%BF%83%E7%9F%A5.pdf">学术人生：文章千古事， 得失寸心知</a> 朱松纯</p><blockquote><p><em><font color=deepskyblue><strong>“珍惜你的学习机会，思考长远的人生路途，做明智的选择。”</strong></font></em></p></blockquote><h2 id="成长"><a href="#成长" class="headerlink" title="成长"></a>成长</h2><blockquote><p>《<a href="https://docs.google.com/document/d/1cm3v2QT8wvT1WFKq_IjzwAHN0_1QuMpEQOVzVYQcIw4/">成为技术领导者——解决问题的有机方法</a>》，<a href="https://en.wikipedia.org/wiki/Gerald_Weinberg">Gerald Weinberg</a> / <a href="https://zh.wikipedia.org/wiki/傑拉爾德·溫伯格">杰拉尔德·温伯格</a>，<a href="https://github.com/TonnnnnnyLiu/Books/blob/master/%E6%88%90%E4%B8%BA%E6%8A%80%E6%9C%AF%E9%A2%86%E5%AF%BC%E8%80%85.pdf">PDF</a></p></blockquote><h3 id="能力曲线"><a href="#能力曲线" class="headerlink" title="能力曲线"></a><font color=blue>能力曲线</font></h3><p>个人能力的变化存在两种模式。一种是渐进模式，另一种是跃迁模式。</p><ul><li><strong>渐进模式</strong>：在同一个层次上，能力发生进步</li><li><strong>跃迁模式</strong>：这种模式下，能力可以跃迁到更高的层次</li></ul><p>大部分人观测到的进步（<strong><font color=blue>能力曲线</font></strong>）通常像下面这个图，每隔一段时间就发现有明显的进步：</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201225122901702.png" class="" title="技术进步"><p>但是当统计数据更多一些之后，真正的能力曲线形状的刻画变得更精细，这时出现了“平稳期”和“突变期”的概念。大部分的进步来源于从一个高原阶段到另一个的高原阶段的突然飞跃。</p><p>平稳期的技术积累对于瓶颈期的快速突破至关重要，但是在突破期除了熟能生巧以外，为了产生真正的质变，常常需要需要某种<strong>观念上的突破</strong>。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201225123004209.png" class="" title="平稳期和突变期"><blockquote><p><em><font color=deepskyblue><strong>黎明前的黑暗。</strong></font></em></p></blockquote><p>如果对成长曲线的刻画更加精细一些，你还会发现，在完成跃迁前，存在一个低谷期。每当试图有所提高时，可能需要一个小的退步之后才能取得大的提高。</p><p>比如，有一个编辑器叫做<a href="https://www.vim.org/"><code>vim</code></a>，学习成本很高，但是一旦学会灵活使用，文本编辑的速度就会产生飞跃——这样的飞跃仅仅通过在其他编辑器上不断练习是做不到的。</p><blockquote><p>对于大多数用户来说，Vim有着一个比较陡峭的学习曲线。这意味着开始学习的时候可能会进展缓慢，但是一旦掌握一些基本操作之后，能大幅度提高编辑效率。（<a href="https://zh.wikipedia.org/wiki/Vim#%E5%AD%A6%E4%B9%A0%E6%9B%B2%E7%BA%BF">Vim - 维基百科</a>）</p></blockquote><p>这种飞跃更像是一种<strong>攀登</strong>。为了攀登到新的高度，你必须离开原有的立足点，抛开擅长的东西，还可能回落到低谷。但如果你不愿意舍弃擅长的东西，那么你将继续缓慢进步，但永远达不到新的高度。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201225122758391.png" class="" title="技术跃迁"><p>成长曲线在现实中可能存在大量的噪声，这些随机事件常常使人“不识庐山真面目”。但在许多真实成长过程中的噪音下掩藏着一个“低谷-高原”模式……</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201225124754114.png" class="" title="在现实社会中成长"><blockquote><p><del>注：翻译此书的人可能把坐标轴标反了。</del></p></blockquote><p>《<a href="https://docs.google.com/document/d/1cm3v2QT8wvT1WFKq_IjzwAHN0_1QuMpEQOVzVYQcIw4/">成为技术领导者——解决问题的有机方法</a>》的作者Gerald是软件工程领域久负盛名的大牛。早在上世纪50年代（IT 的远古时代），就在 IBM 担任系统开发经理，并参与60年代 NASA 的<a href="https://zh.wikipedia.org/wiki/水星计划">水星计划</a>（美国首次载人航天飞行）。</p><p>Gerald在书中也谈到自己的能力曲线的一个具体案例。</p><p>Gerald当年是<a href="https://en.wikipedia.org/wiki/IBM_650">IBM650</a>的最佳程序员。IBM650是上个世纪五十年代的计算机（1950s），当时还在用纸带打孔的方式编程。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/1024px-IBM_650_at_Texas_A&M.jpg" class="" title="IBM 650 at Texas A&amp;M University. The IBM 533 Card Read Punch unit is on the right."><p>但没过多久<a href="https://en.wikipedia.org/wiki/IBM_704">IBM704</a>这种更庞大功能更强的计算机就生产出来了。Gerald一开始是拒绝的，他私下学习了704的知识，但是发现学起来并不容易，找了个借口又回到了650。直到他渐渐了解到704的一些优越性，包括大存储、高运算速度，能够解决650所不能解决的一些问题。Gerald有一天碰到了一位客户，发现他遇到的计算问题，用650是显然无法解决的，而704就是为这类问题量身定做——Gerald终于开始全面转向704，<strong>攀登新的高原</strong>。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/1024px-IBM_Electronic_Data_Processing_Machine_-_GPN-2000-001881.jpg" class="" title="An IBM 704 computer at NACA in 1957"><p>计算机技术进步很快，在704之后，全新的计算机<a href="https://en.wikipedia.org/wiki/IBM_System/360">IBM360</a>又问世了。再过了几年，高级语言也问世了，汇编语言一统天下的场景一去不复返……Gerald开始一轮又一轮的循环，但他的感觉不再像第一次转变那么痛苦——同样感到不安，同样基于返回原地，但是这次他更为自信，相信自己一定能成功，甚至感到了一丝兴奋……他相信自己能够应付这样的变化，把它看作是一个创造性的挑战而不是一种必须承受的磨难。</p><h3 id="学习曲线"><a href="#学习曲线" class="headerlink" title="学习曲线"></a>学习曲线</h3><blockquote><p><em><font color=deepskyblue><strong>“远见”。</strong></font></em></p></blockquote><h4 id="慢即是快"><a href="#慢即是快" class="headerlink" title="慢即是快"></a>慢即是快</h4><p>那些愿意花足够的时间与精力去<strong>搞定基本功</strong>、<strong>打好基础</strong>的人，加速度会越来越快。</p><blockquote><p>在能力曲线上就是追求基本能力的多次跃迁。</p></blockquote><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/Wvom7GqT56FImCj47wXwaNVk5MYYs4Cm-YWISag0iF9w5Mrp_ZSuqzJgUdjLmjUpKcz7LVOvtaUXyvDR-7cwRhk9NtOfUuasGHoThhO464VzFVbctFiO2WDmeF32-KcUH1SzUnjQWOY" class="" title="指数函数"><h4 id="边际递增"><a href="#边际递增" class="headerlink" title="边际递增"></a>边际递增</h4><blockquote><p><strong><font color=deepskyblue>大多数人在20到30岁就已经过完自己的一生；<br>一过了这个年龄段，他们就变成自己的影子，以后的生命只是在不断重复自己…</font></strong></p><p>——罗曼·罗兰，《约翰·克里斯朵夫》</p></blockquote><p>绝大部分人的人生处在<strong><font color=red>边际递减</font></strong>的状态中。他们的学习曲线到了一定程度便不再发生显著的变化，而是趋近于某个固定的水平。</p><p>互联网的出现，使得一小部分人的能力曲线，发生了<strong><font color=blue>边际递增</font></strong>的现象。一个善于学习，没有沉迷在互联网的各种繁杂中的人，如果充满求知欲，如果运气不太差的话……不断学习，不断跨领域、做系统性学习的人，他的思维能力和学习能力都会不断上升，从而让能力曲线不断上扬。</p><blockquote><p>学习，一定要从长计议，考虑长期坚持之后的收获。</p></blockquote><h4 id="更激进的跃迁模式"><a href="#更激进的跃迁模式" class="headerlink" title="更激进的跃迁模式"></a>更激进的跃迁模式</h4><blockquote><p><em><font color=deepskyblue><strong>那不能杀死我的，使我更强！（What does not kill me, makes me stronger.）</strong></font></em></p><p>——尼采，《Ecce Homo》</p></blockquote><p>我们在能力曲线一节中已经指出：<strong>每当试图跨越到下一个阶段时，可能需要一个小的退步之后才能取得大的提高</strong>。</p><p>在现实生活中，你需要勇于尝试那些更有挑战性的工作，而不仅仅满足于”稍稍偏离舒适区的小退步“所带来的一定跃迁。</p><p><strong>成长曲线是整个人生的学习曲线的一小段缩影</strong>。如图，每一小段学习曲线，都是一条成长曲线。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201225210858008.png" class="" title="激进跃迁"><p>在不断学习的过程，你的跃迁将会越来越快，幅度也越来越大；你挑战的问题难度也必然越来越大。这就对应着越来越激进的跃迁模式。</p><h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><blockquote><p><a href="https://stellarkey.github.io/%E5%B9%B4%E4%B8%AD%E6%80%BB%E7%BB%93/">年中总结</a></p></blockquote><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/Mot-1.jpg" class="" title="Motivation | Evolution Culture(https:&#x2F;&#x2F;www.evolutionculture.co.uk&#x2F;motivation&#x2F;)"><p>计算机领域著名的学者朱松纯老师在《<a href="http://www.stat.ucla.edu/~sczhu/Blog_articles/%E5%AD%A6%E6%9C%AF%E4%BA%BA%E7%94%9F%EF%BC%9A%E6%96%87%E7%AB%A0%E5%8D%83%E5%8F%A4%E4%BA%8B%E5%BE%97%E5%A4%B1%E5%AF%B8%E5%BF%83%E7%9F%A5.pdf">学术人生：文章千古事， 得失寸心知</a>》谈到了他的人生。当然，不是每个人都会过所谓的“学术人生”，但是，既然大家参加了疾风计划，想必对学习这件事情是比较重视的，也许不一定走上“学术人生”，但是学习的道路总是相似的，我相信，大家终究是殊途同归。</p><p>至于我的人生，说实话，在我看来，才刚刚开始走上我想要去走的路——也许还没有找到最终的路……</p><h3 id="谈到计算机"><a href="#谈到计算机" class="headerlink" title="谈到计算机"></a>谈到计算机</h3><blockquote><p><a href="https://stellarkey.github.io/%E5%AD%A6%E5%A0%82%E5%9C%A8%E7%BA%BF-912%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9%E8%AE%A1%E5%88%92/">912 内容学习计划</a></p></blockquote><p>关于如何学好计算机课程专业知识。我并非计算机专业，所以我能谈的非常有限。</p><p>每个人学计算机的动机都是不同的，因此最想要学习的内容也会有不同。但是，如果说没有什么特别急需应用的需求的话（比如马上要做一个网站，马上要上线一个产品……），我觉得还是尽量优先学习那些比较经典的、经过了漫长时间考验的知识。这些在计算机学科里面就体现为基础知识：数学、编程、实验……</p><p>时代变化得越来越快，做科研、做工程，可能会不由自主地追逐当下的热点。但是，从学习的角度来说，我们的聚焦点不该停留在这些快速迭代的风景中，而要去寻找变换中的不变，寻找风中的磐石。如果想做真正有价值的科研、开发有突破贡献的技术，有时还得静下心来，沉淀。</p><h3 id="黄色的树林"><a href="#黄色的树林" class="headerlink" title="黄色的树林"></a>黄色的树林</h3><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/DORbMI8UIAAnB0F.jpg" class="" title="Two roads diverged through the yellow woods...I  took the road less traveled ~Robert Frost…"><blockquote><p><em>黄色的树林里分出两条路</em><br><em>可惜我不能同时去涉足</em><br><em>我在那路口久久伫立</em><br><em>我向着一条路极目望去</em><br><em>直到它消失在丛林深处</em></p><p><em>但我却选择了另外一条路</em><br><em>它荒草萋萋，十分幽寂</em><br><em>显得更诱人，更美丽</em><br><em>虽然在这条小路上</em><br><em>很少留下旅人的足迹</em></p><p><em>那天清晨落叶满地</em><br><em>两条路都未经脚印污染</em><br><em>呵，留下一条路等改日再见</em><br><em>但我知道路径延绵无尽头</em><br><em>恐怕我难以再回返</em></p><p><em>也许多少年后在某个地方，</em><br><em>我将轻声叹息将往事回顾：</em><br><em>一片树林里分出两条路——</em><br><em>而我选择了人迹更少的一条，</em><br><em>从此决定了我一生的道路。</em></p><p>——《未选择的路》，罗伯特·弗尔斯特</p></blockquote><p>大家以后的路会有不同。会面不同的选择。</p><p>我提到了一些观点，但是这些也仅仅只是一些有限适用的观点。在现实里面，选择更多，困难更多，干扰也更多。</p><p>也许过不了多久，这里讲述的所有东西都将被你遗忘。我想， 有几个关键词：<strong><font color=deepskyblue>心流</font></strong>、<strong><font color=deepskyblue>智慧</font></strong>、<strong><font color=deepskyblue>远见</font></strong>。其他的内容忘了，回忆这几个字，在某种意义上也足够了。</p><h3 id="勤为径"><a href="#勤为径" class="headerlink" title="勤为径"></a>勤为径</h3><blockquote><p><em><font color=deepskyblue><strong>既入宝山，不空手而归。</strong></font></em></p></blockquote><p>邓公总是强调：“入宝山不能空手而返”。</p><p>既然参加了疾风计划，就“不要空手而返”吧。</p><p>书山有路勤为径。这句话其实从另一个角度理解的话：“书山”本没有路——走的人多了，也便成了路。你现在看到的每一条学习之路，都是无数勤恳的开拓者硬生生从荒野中开辟而出的。</p><p>希望大家有一天也可以开辟一条自己的路。</p><img data-src="/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/climb.jpeg" class="" title="climb"><h1 id="Pre答疑环节"><a href="#Pre答疑环节" class="headerlink" title="Pre答疑环节"></a>Pre答疑环节</h1><p>Q：本人目前大二，因为我也考虑要跨专业考计算机研究生，所以特别想知道学长认为应当<strong>怎样才能认清自己能力的范围</strong>呢？（其实就是想问在计算机考研中要怎样才能知道自己是否拥有着清华或其他985院校的实力呢？）如果想要像学长一样清华或者其他985院校跨考计算机上岸的话，学长认为我们应当拥有的<strong>核心竞争力</strong>是什么呢？疾风计划能在何种程度上帮助到我们呢？</p><blockquote><p>认清自己能力最好的方式就是做有挑战的事情，这个时候你就会对自己能力的局限之处获得直观感受。其次，就是多去了解别人走过的路，他们的具体经历，这也会帮助你找准定位。</p><p>核心竞争力是：科研能力、编程能力、学业水平。</p><p>疾风计划更针对学业水平一些。</p></blockquote><p>Q：在专业背景不同的情况下，如何尽快在有限的时间内跟上计算机专业学习的进度？比如：如何在我们学堂在线规定的一年内克服专业背景不同的困难，完成学业？</p><blockquote><p>投入，不拖延。学习任何事情都需要花费时间，但是，拖得越久，学习效率就越低（日积月累这种零碎学习方式只适合记忆，而不适合学习理论）。一定要抽出整块的时间，给自己留出充分的思考余地。对学过的东西一定要做好高质量的笔记；不一味地追赶进度，而是保证每一个脚印都很扎实。</p></blockquote><p>Q：请问学长准备跨考期间是怎么复习的呢，比如高数，英语，政治和专业课各科的复习方法能简要介绍一下吗？</p><blockquote><p>可以看我以前写的总结：<a href="https://stellarkey.github.io/%E5%AD%A6%E5%A0%82%E5%9C%A8%E7%BA%BF-912%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9%E8%AE%A1%E5%88%92/">912 内容学习计划</a>。公共课方面我的水平很一般，就不班门弄斧了。</p></blockquote><p>Q：1.目前的计算机科研方向主要可以分为哪些? 2.之后如果走科研道路需不需要参加ACM或蓝桥杯(本人非常想参加算法竞赛但同时也爱好科研) 3.跨专业考985院校除了要学习计科的所有内容还需要再拓展哪些内容?(例如人工智能方向的) 4.计科专业有没有必要学数学系的分析学和代数学内容?如果有则需要着重学习哪些课程?</p><blockquote><p>科研方向可就多了，按清华计算机系研究所来分：媒体所、软件所、智能所、网络所、高性能所。具体可以看系官网上的<a href="http://www.cs.tsinghua.edu.cn/publish/cs/4719/index.html">科学研究</a>部分。</p><p>算法竞赛是<strong>打基础</strong>和<strong>敲门砖</strong>。在实际科研中运用有限。</p><p>需要带有科研性质的经历，拓展的内容根据你选定的科研方向而定（数据挖掘、机器翻译、目标跟踪、人机交互……）。</p><p>有需要。单纯从计算机科学的角度讲，数学极为重要，很多计算机科学家都是数学系出身；如果要从事理论计算机科学的研究的话，数学更是不可或缺。在AI领域的话，深度学习中的理论分析会用到概率论、经典分析、函数论的一些知识，现在所谓的符号空间智能模型也需要符号计算的一些工具，比如多项式代数。计算共形几何的最优传输理论现在也在GAN等模型中用来解释一些现象。总之就是，有很多数学知识需要学，但是并不一定要全面地学——看具体需求即可。我写了一些类似的总结，<a href="https://stellarkey.github.io/人工智能中的新数学/">人工智能中的新数学</a>，有兴趣可以看看。</p></blockquote><p>Q：算法学习方法分享</p><blockquote><p>之前算法训练营的longyue521助教曾经发表过相关的内容，我转载到了知乎上：<a href="https://www.zhihu.com/question/275893080/answer/444570092">Here</a>。有兴趣可以看看。</p></blockquote><p>Q：1.清华计算机912专业课应如何准备？ 2.考研复习从几月份开始，具体是如何备考的？</p><blockquote><p>可以看我以前写的总结：<a href="https://stellarkey.github.io/%E5%AD%A6%E5%A0%82%E5%9C%A8%E7%BA%BF-912%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9%E8%AE%A1%E5%88%92/">912 内容学习计划</a>。</p></blockquote><p>Q：如何做到算法训练营第一名？考研时每天学习投入多少？学习算法训练营每天投入多少？入学前只学习了考试科目和算法训练营吗，疾风计划里的非考试科目您有自学到什么程度？</p><blockquote><p>专注和投入。考研时每天除了生活起居之外基本都是在学习，算法训练营也是类似的；都需要全身心投入。不只，在学校学过基本的编程语言，做过一些人工智能、数据分析方面的事情。</p><p>疾风计划里的非考试科目：</p><ul><li>程序设计基础：大学修过《高级程序设计语言》，100分</li><li>面向对象程序设计：选修过一门通识课，了解过C++的核心概念</li><li>离散数学：在图书馆借过一本红色封面的美版离散数学教材，自行学习了大部分内容</li><li>算法设计与分析：大学选过软院的算法课，但是没有OJ经验，加上时间仓促，成绩勉强及格</li><li>Linux、人工智能……</li></ul></blockquote><p>Q： 1.跨考到清华计算机需要做什么准备，或者说需要达到什么水平？ 2.跨考生如何弥补自己没有项目经历的劣势？</p><blockquote><p>据我了解，考研有一定的运气成分（即使有足够的水平，也不一定就能上岸）；最终还是看老师怎么想。你唯一能做的，就是做好自己。水平自然是越高越好，准备的方面应该有：学习水平（GPA / 英语 / 自学能力）、科研水平（项目 / 论文 / 实习）、编程能力……</p><p>提前找实习（实验室，或者科研型企业），参与开源项目，或者其他<strong>能证明自己科研潜力</strong>的事情。</p></blockquote><p>Q：跨专业跨校考研，专业课资料怎么找？</p><blockquote><p>我仅仅了解912计算机专业课的资料收集。渠道大概有：考研QQ群，课程官方网站，github开源项目，搜索引擎……并且，本人在考研过程中已经总结了一个比较系统的项目：<a href="https://github.com/stellarkey/912_project">912_project</a>。因此在912专业课方面应该不存在什么找资料的问题，资料都已经找好了。主要还是学习能力和决心。</p></blockquote><p>Q：学长，请聊聊为何跨专业，以及跨专业考研所面对的问题</p><blockquote><p>这个跟我们之前谈到的动机问题是一致的，无论做什么事情，拥有一个内在动机才能走得长远。在我当年刚进入大学的时候，计算机行业其实就已经开始进入潮流了，要说完全只是出于兴趣——我也不好说得这么绝对。但是，我学习计算机这么久了，我想最后沉淀下来的，还是真正的兴趣在驱动。<strong>其实无论做什么事情，一开始的动机可能是比较复杂的，但如果能够坚持下去，最后总会收敛到某种内在动机</strong>。</p><p>跨专业考研面临的问题无非就是信息差，以及能力不足的问题。信息差主要在复试之前体现，包括找资料、找老师等；复试就会面临能力不足的问题。</p></blockquote><p>Q：学霸您好！我是参加疾风计划的一员，有幸可以通过这次的直播，请教您一个问题。就是我学着学者吧，脑子就不自觉的跑路了，开小差了，特别想问一下您，是怎么做到可以在学习上如此专注的？可以和我们分享一下您的妙招吗？</p><blockquote><p>长时间专注是一种稀有的状态，也就是之前提到的所谓“<strong>心流</strong>”。但是，如果一开始你的学习专注能力不够，不妨先从一小段一小段的专注开始慢慢感受；中间穿插适当的休息。你也可以采用一些类似番茄钟的时间管理软件来获得更精确的控制。培养出习惯大概只需要两周。</p><p>如果发现自己不在状态，最困难的一步可能是从这种低效的开小差状态中脱离出来——因为它会给你同时身体的放松和精神上虚有的自我满足感。这个时候，一些提前设计好的外力，比如去图书馆，比如找你的同学对你进行监督，比如找一些学习小组，往往可以使你<strong>迈出最关键的第一步</strong>。</p></blockquote><p>Q：自学过程中，遇到过哪些坎坷，如何解决的？ 广泛精度教材而不是大量刷题，比如深入理解计算机系统，计算机系统设计，等等各类国内外经典教材，是否能够在考研中取得好成绩。 还是说，这两者如何结合呢？刷题的侧重点在哪，如何选择有质量的题目</p><blockquote><p>万事开头难，自学也一样——找适合的学习资源往往消耗大量精力。当然这样就会潜移默化地加强你的信息搜索意识和能力。特别是，当信息越来越多的时候，你发现你的记忆变得不可靠了，你开始有意识地做整理、做归纳、做笔记，你自己开始成为别人的学习资源。另一个在自学中常常遇到的问题是，容易被外物的影响而打断，这就是意志力和执行力的问题了；如果意志力和执行力不够，我还是推荐你们更集中地学，刻意制造一些短期的不被打扰的学习环境。再有，就是自学的深度和广度不好把控，我的建议是，深度要结合你自己的需要来学，不必全然按照你找的学习资料来安排；广度，则可以尽量兼顾一些。最后，是自学碰到难题的场景，如果没有可以提问的对象，我的建议是在各类社区上去提问（stackoverflow, 知乎, …）；如果你感觉一时半会儿解决不了，记下来，及时跳过，等有机会再琢磨——如果是那种关键性的知识点，则可以充分发挥你的搜索能力，我相信对于领域的关键理解，网上都会有许多文章可供参考。</p><p>不能。考研有两门关键的课，数学和专业课。数学比较依赖刷题，这无可避免。专业课题量一般比较有限，不太需要大量刷题，所以不存在取舍的问题。精读教材是很耗时间的，这部分不建议放到考研这段时间里来——放到平时。考研时，就专心考研；其他的工作，尽量放到考研之前或初试之后。</p><p>刷题的目的是考试拿分。尽早上手真题。做多了真题，你自然就会知道如何选择有质量的题目了。</p></blockquote><div><hr><font size=5>相关文章</font><ul><li><a href="https://stellarkey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/">区块链课程实验</a></li><li><a href="https://stellarkey.github.io/CS%E6%8C%91%E6%88%98%E8%90%A5/">CS挑战营</a></li><li><a href="https://stellarkey.github.io/%E5%8D%95%E5%88%86%E7%B1%BB/">单分类（one-class classification）</a></li><li><a href="https://stellarkey.github.io/Notes-of-Intro-to-Computer-System/">Review of ICS</a></li><li><a href="https://stellarkey.github.io/%E3%80%8A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E2%80%94%E2%80%94%E8%AE%A1%E7%AE%97%E6%80%9D%E7%BB%B4%E7%9A%84%E8%A7%86%E8%A7%92%E3%80%8B%E7%AC%94%E8%AE%B0/">《大学计算机——计算思维的视角》笔记</a></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;center&gt;&lt;font face=kaiti color=deepskyblue size=4.7&gt;&lt;i&gt;&lt;strong&gt;两岸猿声啼不住，轻舟已过万重山。&lt;/strong&gt;&lt;/i&gt;&lt;/font&gt;&lt;/center&gt;

&lt;p&gt;本文为写给学堂在线疾风计划的同学的一些学习经验分享。因时间仓促、知识有限，难以面面俱到；仅供参考。&lt;/p&gt;
&lt;img data-src=&quot;/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/image-20201220154821058.png&quot; class=&quot;&quot; title=&quot;疾风计划&quot;&gt;</summary>
    
    
    
    <category term="Think" scheme="https://stellarkey.github.io/categories/Think/"/>
    
    
    <category term="CS" scheme="https://stellarkey.github.io/tags/CS/"/>
    
  </entry>
  
  <entry>
    <title>人工智能中的“新”数学</title>
    <link href="https://stellarkey.github.io/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/"/>
    <id>https://stellarkey.github.io/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/</id>
    <published>2020-12-17T06:00:51.000Z</published>
    <updated>2022-05-21T19:38:43.597Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.stat-center.pku.edu.cn/zxry/zxjy/lw/1227407.htm">林伟</a>在《人工智能的新数学》主题报告中，指出人工智能中经典的数学工具，有以下四类：</p><ul><li>概率论、数理统计；</li><li>数值代数、数值分析、最优化；</li><li>经典分析、函数论（比如深度学习的逼近论相关知识）；</li><li>计算机科学基础，包括离散数学、理论计算机科学。</li></ul><p>经典数学工具对于学生而言，是最应该掌握、最核心的工具。</p><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222160231066.png" class="" title="人工智能中的“旧”数学"><span id="more"></span><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://mp.weixin.qq.com/s/ElJN4nK3ByQ2ulxgq4qJvw">AI的十种”新数学“</a></p><iframe src="//player.bilibili.com/player.html?aid=927809167&bvid=BV1dK4y1Z7uQ&cid=257459123&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p><a href="https://www.bilibili.com/video/BV1954y1r7UU">林宙辰-下一代机器学习</a></p><blockquote><p>这里面也提到了人脑的系统1和系统2（系统1 / Intuitive 是现在的深度学习，系统2 / Logical 是未来的研究方向）。</p></blockquote><p><a href="https://www.zhihu.com/column/eleven-dimension-math">Meet in Maths</a></p><h1 id="泛函分析"><a href="#泛函分析" class="headerlink" title="泛函分析"></a>泛函分析</h1><p><a href="https://stellarkey.github.io/%E6%B3%9B%E5%87%BD%E5%88%86%E6%9E%90/">泛函分析</a></p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/50118911">从度量空间、线性空间到希尔伯特空间- 知乎</a></p><p><a href="https://jishuin.proginn.com/p/763bfbd31a95">度量、范数和内积原来是这么个关系</a></p><p><a href="http://www.fanyeong.com/2017/11/13/the-kernel-trick/">核技巧（The Kernel Trick） | 范永勇</a></p></blockquote><h2 id="巴拿赫空间"><a href="#巴拿赫空间" class="headerlink" title="巴拿赫空间"></a>巴拿赫空间</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/113197869">希尔伯特空间</a></p></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222155504083.png" class="" title="巴拿赫空间"><p><strong><font color=red>度量</font></strong>：$X$是一个集合，度量是$X$上的一个<strong>二元关系</strong>（$X \times X \rightarrow R$），对于任意的 $x, y, z \in X$：</p><ul><li>非负：$\rho(x, y) \geq 0$，（非退化）当且仅当 $x=y$ 时等号成立</li><li>对称：$\rho(x, y)=\rho(y, x)$</li><li>三角不等式：$\rho(x, z) \leq \rho(x, y)+\rho(y, z)$ 。</li></ul><p><strong><font color=red>范数</font></strong>：范数是一种线性空间上的度量，它还满足</p><ul><li>齐次：对于所有 $\mathbf{v} \in V$ 和 $\lambda \in \mathbb{R},$ 有 $|\lambda \mathbf{v}|=|\lambda| \cdot | \mathbf{v} |$</li></ul><p><strong><font color=red>内积</font></strong>：内积是一种线性空间上的范数，它还满足</p><ul><li>分配律：对于所有向量 $\mathbf{u}, \mathbf{v}, \mathbf{w} \in V,$ 都有 $\langle\mathbf{v}, \mathbf{w}+\mathbf{u})=\langle\mathbf{v}, \mathbf{w}\rangle+\langle\mathbf{v}, \mathbf{u}\rangle$</li></ul><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/fec6278793691d25ee4a3edf89eff904.webp" class="" title="度量空间，赋范空间，内积空间"><blockquote><p><strong><font color=blue>核技巧</font></strong>（Kernel Trick）就是一种内积。</p><script type="math/tex; mode=display">K(x, y)=\langle\phi(x), \phi(y)\rangle</script><p>其中，$\phi(x)$是指将样本向量 $x$ <strong>从输入空间映射到特征空间</strong>（希尔伯特空间），从而在高维线性可分。因为我们不需要知道$\phi(x)$的具体形式，所以可以直接通过定义核函数$K(x,y)$的方式获得$\phi(x)$的隐式定义。</p><p>Q: 那么如何确定 $\phi(x)$ 映射到一个高维空间呢？</p><blockquote><p>A: 这部分需要查阅核函数的理论推导。</p><p>比如，</p><ul><li>线性核，其实就是没有映射<ul><li>$\kappa\left(x<em>{1}, x</em>{2}\right)=\langle x 1, x 2\rangle$</li></ul></li><li><strong><font color=red>高斯核</font></strong>函数，也称径向基(RBF)函数，使用最为广泛，<strong>它能够把原始特征映射到<font color=red>无穷维</font></strong><ul><li>$\kappa\left(x<em>{1}, x</em>{2}\right)= \exp \left(-\gamma\left|\mathbf{x}<em>{1}-\mathbf{x}</em>{2}\right|_{2}^{2}\right)$</li></ul></li><li>多项式核函数，它能把数据映射到$C_{n+d}^{n}$维<ul><li>$\kappa\left(x<em>{1}, x</em>{2}\right)=\left(\left\langle x<em>{1}, x</em>{2}\right\rangle+R\right)^{d}$</li></ul></li></ul></blockquote></blockquote><p><strong><font color=red>完备</font></strong>：一个完备空间中的任何<a href="https://zh.wikipedia.org/wiki/柯西序列">柯西序列</a>都收敛在该空间之内。</p><h2 id="从函数到无穷维"><a href="#从函数到无穷维" class="headerlink" title="从函数到无穷维"></a>从函数到无穷维</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/135898326"><strong>RBF 核函数背后隐藏着怎样的映射？</strong></a></p><p><a href="https://www.zhihu.com/question/39890018">如何理解「函数可以看成是一个无限维的向量」？</a></p><p><a href="http://www.360doc.com/content/19/1110/15/39821762_872262517.shtml">重新理解函数空间（上）</a></p><p><a href="https://charlesliuyx.github.io/2018/02/18/%E3%80%90%E7%9B%B4%E8%A7%82%E8%AF%A6%E8%A7%A3%E3%80%91%E8%AE%A9%E4%BD%A0%E6%B0%B8%E8%BF%9C%E5%BF%98%E4%B8%8D%E4%BA%86%E7%9A%84%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E8%A7%A3%E6%9E%90/">【直观详解】让你永远忘不了的傅里叶变换解析</a> Fourier 变换是将时域信号转换为频域信号，Fourier 解析是将频域信号转换为时域信号。</p></blockquote><h3 id="脉冲"><a href="#脉冲" class="headerlink" title="*脉冲"></a>*脉冲</h3><blockquote><p><a href="https://stellarkey.github.io/%E7%AE%97%E6%B3%95-%E6%91%8A%E8%BF%98%E5%88%86%E6%9E%90%EF%BC%9A%E4%BB%B7%E6%A0%BC%E6%82%96%E8%AE%BA/">摊还分析：价格悖论</a></p></blockquote><p><strong><font color=red>脉冲函数</font></strong>：<a href="https://zh.wikipedia.org/wiki/%E7%8B%84%E6%8B%89%E5%85%8B%CE%B4%E5%87%BD%E6%95%B0">Dirac函数</a>。</p><hr><h3 id="高斯核背后的映射"><a href="#高斯核背后的映射" class="headerlink" title="高斯核背后的映射"></a>高斯核背后的映射</h3><p>不妨设在一维空间。如图，两个样本点：</p><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/v2-16a0a97ac9453977c13d1ee527eca0c2_720w.jpg" class="" title="两个样本点"><p>将点映射成一个函数 / 分布：（类傅里叶解析）</p><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/v2-04a7af5f35589b958b83e9e56ba5f124_720w.jpg" class="" title="函数"><p>此时，函数空间构成了一个无穷维空间。</p><blockquote><p>可以想象一个<strong>无限细分的柱形图</strong>，每一根立柱就是一个维度。</p></blockquote><p>比如，将样本${\color{red}{x_1} },{\color{blue}{x_2} }$映射为两个高斯分布，</p><script type="math/tex; mode=display">\begin{equation}f_{1}(x)=\exp \left[-\frac{\left(x-{\color{red}{x_{1} } }\right)^{2}}{2 \sigma^{2}}\right], \quad f_{2}(x)=\exp \left[-\frac{\left(x-{\color{blue}{x_{2} } }\right)^{2}}{2 \sigma^{2}}\right]\end{equation}</script><p>定义函数内积为相乘后的积分：</p><script type="math/tex; mode=display">\begin{equation}\begin{aligned}K\left(x_{1}, x_{2}\right) &=\left\langle\phi\left(x_{1}\right), \phi\left(x_{2}\right)\right\rangle=\left\langle f_{1}, f_{2}\right\rangle \\&=\int_{\infty}^{+\infty} f_{1}(x) f_{2}(x) \mathrm{d} x \\&=\int_{-\infty}^{+\infty} \exp \left[-\frac{\left(x-x_{1}\right)^{2}}{2 \sigma^{2}}\right] \cdot \exp \left[-\frac{\left(x-x_{2}\right)^{2}}{2 \sigma^{2}}\right] \mathrm{d} x \\&=\int_{\infty}^{+\infty} \exp \left[-\frac{2 x^{2}-2\left(x_{1}+x_{2}\right) x+\left(x_{1}^{2}+x_{2}^{2}\right)}{2 \sigma^{2}}\right] \mathrm{d} x \\&=\int_{\infty}^{+\infty} \exp \left\{-\frac{1}{\sigma^{2}}\left[\left(x-\frac{x_{1}+x_{2}}{2}\right)^{2}+\left(\frac{x_{1}-x_{2}}{2}\right)^{2}\right]\right\} \mathrm{d} x \\&={\color{red}{\int_{-\infty}^{+\infty} \exp \left(-\frac{x^{2}}{\sigma^{2}}\right) \mathrm{d} x} } \cdot \exp \left[-\frac{\left(x_{1}-x_{2}\right)^{2}}{4 \sigma^{2}}\right] \\&=\sqrt{\pi} \sigma \cdot \exp \left[\frac{\left(x_{1}-x_{2}\right)^{2}}{4 \sigma^{2}}\right]\end{aligned}\end{equation}</script><p>忽略掉系数，就得到了一个高斯核。</p><h2 id="无穷宽的DNN"><a href="#无穷宽的DNN" class="headerlink" title="无穷宽的DNN"></a>无穷宽的DNN</h2><blockquote><p><a href="https://arxiv.org/abs/2007.15623">On the Banach spaces associated with multi-layer ReLU networks: Function representation, approximation theory and gradient descent dynamics</a></p><blockquote><p><strong>We develop Banach spaces for ReLU neural networks of finite depth L and infinite width</strong>. The spaces contain all finite fully connected L-layer networks and their L2-limiting objects under bounds on the natural path-norm. Under this norm, the…</p></blockquote></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222151629104.png" class="" title="无穷宽网络"><p>因为宽度无穷宽，就构成了一个无穷维的巴纳赫空间（完备的赋范线性空间）。</p><h1 id="群表示论与范畴论"><a href="#群表示论与范畴论" class="headerlink" title="群表示论与范畴论"></a>群表示论与范畴论</h1><p><a href="https://stellarkey.github.io/抽象代数基础/">抽象代数基础</a></p><p><a href="https://stellarkey.github.io/%E7%BE%A4%E8%A1%A8%E7%A4%BA%E8%AE%BA/">群表示论</a></p><p><a href="https://stellarkey.github.io/%E8%8C%83%E7%95%B4%E8%AE%BA/">范畴论</a></p><blockquote><p><a href="https://www.math.arizona.edu/~xuehang/rep_notes.pdf">中国科学院暑假学校讲义: 群表示论的一些小知识</a></p></blockquote><h2 id="关于群的研究"><a href="#关于群的研究" class="headerlink" title="关于群的研究"></a>关于群的研究</h2><blockquote><p><a href="https://mp.weixin.qq.com/s/-bxH9Sp9_p2sK8VlAxZslQ">一个半世纪的征程—有限单群分类定理（上）</a></p><p><a href="https://mp.weixin.qq.com/s/hErfHxgNO9Zjk_XlBus7Tw">24维晶体中特有的对称—-有限单群分类定理（中）</a></p><p><a href="https://mp.weixin.qq.com/s/JtAZmfKHrsmf6lUtM48VgQ">月光下的群魔—有限单群分类定理（下）</a></p><p><a href="https://fwjmath.wordpress.com/2011/09/15/finite-simple-group-history/">有限单群：一段百年征程</a></p></blockquote><p>一个群就是一个代数系统。</p><p>现代数学研究群的结构一般有两种方法：</p><ul><li><strong><font color=blue>研究子群</font></strong><ul><li>3b1b视频：<a href="https://www.bilibili.com/video/BV1Rh411R7KL">群论与 808017424794512875886459904961710757005754368000000000</a></li><li>对有限群的基本群即单群（Simple groups）进行分类<ul><li>有限群就是有限个元素构成的群</li><li>2004年由一篇100多位数学家写成的1200多页的Paper收尾<ul><li>$\Longrightarrow$ 有限单群分类定理</li></ul></li></ul></li></ul></li></ul><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222222935682.png" class="" title="单群的分类"><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222225431590.png" class="" title="有限单群周期表 - 大老李谈数学"><ul><li><strong><font color=blue>研究群的表示</font></strong><ul><li>群的表示就是把给定的群$G$同态地映到另一个群$W$的操作（同态就是<strong>保持运算</strong>）。<ul><li>通过不同的表示，我们可以通过各种熟悉的$W$，来从不同的角度观察$G$的性质，从而认识未知的事物</li><li>什么样的群表示最值得研究？<ul><li>不可约表示：一个表示被称作不可约的，当且仅当它没有在G的作用下不变的非平凡子空间。</li></ul></li></ul></li></ul></li></ul><blockquote><p>同态映射反映了两个代数系统的<strong>被映射部分</strong>的局部相似性（即同种规律在不同体系下的表示）。</p></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/1549049058360.png" class="" title="同态映射"><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/1549049282169.png" class="" title="同态满射"><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/1549049512585.png" class="" title="同构映射"><h2 id="从图到范畴论"><a href="#从图到范畴论" class="headerlink" title="从图到范畴论"></a>从图到范畴论</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/108528537">范畴论简史- 知乎</a></p><p><a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E8%AE%8A%E6%8F%9B">自然变换</a></p></blockquote><p>范畴论使用图论作为描述工具，节点表示一个<strong>对象</strong>，有向边表示<strong>态射</strong>，整个图构成一个<strong>范畴</strong>。</p><blockquote><p>范畴，就是具有代数结构的有向图。</p></blockquote><p>范畴论是“数学的数学”，它试图研究各种数学结构之间的联系和共性。</p><p><strong><font color=red>函子</font></strong>（Functor）：如果范畴本身也作为一个对象，那么就可以创造更高阶的范畴，在这样的高阶范畴中的态射称为函子。</p><p><strong><font color=red>自然变换</font></strong>：把函子也作为一个对象，函子和函子间的态射就称为自然变换。</p><blockquote><p>设C和D是范畴，F和G是C和D之间的函子。一个从F到G 的自然变换η，对C中每个对象，给出一个在D的对象间的态射ηX : F(X) → G(X)，称为η在X处的分量（component），使得对C中每个态射f : X → Y都有：</p></blockquote><script type="math/tex; mode=display">\eta_{Y} \circ F(f)=G(f) \circ \eta_{X}</script><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/175px-Natural_transformation.svg.png" class="" title="自然变换示例"><h2 id="DNN中的对称性、函子"><a href="#DNN中的对称性、函子" class="headerlink" title="DNN中的对称性、函子"></a>DNN中的对称性、函子</h2><blockquote><p><a href="https://arxiv.org/abs/2008.01805">Analytic Characterization of the Hessian in Shallow ReLU Models: A Tale of Symmetry</a></p><p><a href="https://arxiv.org/abs/1711.10455">Backprop as Functor: A compositional perspective on supervised learning</a></p></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222201729074.png" class="" title="群表示论与范畴论示例"><p>神经网络中存在一些冗余，这些冗余可以利用群表示论的技术进行一些修剪。</p><p>函子（Functor）适合于用来表达函数的复合。</p><h1 id="微分几何"><a href="#微分几何" class="headerlink" title="微分几何"></a>微分几何</h1><blockquote><p><a href="https://link.springer.com/chapter/10.1007/978-3-642-00826-9_4">Information Geometry and Its Applications: Convex Function and Dually Flat Manifold</a></p><p><a href="https://www.bilibili.com/video/BV1Lb411g7nL">A Thorough Introduction to The Theory of General Relativity</a> 前12节课</p><p><a href="https://link.springer.com/book/10.1007/978-3-319-96992-3">A Visual Introduction to Differential Forms and Calculus on Manifolds</a></p></blockquote><h2 id="微分流形"><a href="#微分流形" class="headerlink" title="微分流形"></a>微分流形</h2><p><strong><font color=red>流形</font></strong>（Manifold）：可以局部欧几里得空间化的一个拓扑空间。</p><blockquote><p>希尔伯特空间就是欧几里得空间推广到无穷维。</p><p>比如，李群是一个在拓扑群上加上了微分结构的代数结构，让拓扑群的拓扑空间成为<a href="https://zh.wikipedia.org/wiki/%E5%BE%AE%E5%88%86%E6%B5%81%E5%BD%A2">微分流形</a>。</p><p>李群既是群也是流形。</p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/51199404">MP67：典型群(1)：拓扑性质</a></p></blockquote></blockquote><p>可微流形上的微积分研究被称为<strong>微分几何</strong>，利用微积分理论研究空间的几何性质。</p><h2 id="深度学习的几何解释"><a href="#深度学习的几何解释" class="headerlink" title="深度学习的几何解释"></a>深度学习的几何解释</h2><blockquote><p><a href="https://arxiv.org/abs/1805.10451">Geometric Understanding of Deep Learning</a> 顾险峰团队</p><p><a href="https://arxiv.org/abs/1710.05488">A Geometric View of Optimal Transportation and Generative Model</a></p></blockquote><p><strong><font color=red>流形分布律</font></strong>：不同的类对应着流形上的不同概率分布，这些分布之间的距离大到足够将这些类区分。 </p><blockquote><p>顾险峰在公众号文章《<a href="https://mp.weixin.qq.com/s/v9kXLFp_lZziT4er9n2HFQ">基本工程问题是否需要前沿几何理论？</a>》中提到：</p><blockquote><p>大数据的本质模式可以概括为如下的物理定则（Physics law）：</p><ul><li><strong><font  color=blue>一类自然数据可以被视作嵌入在高维空间中的低维流形上的概率分布</font>。</strong></li></ul><p>深度学习具有两个主要任务：</p><ul><li>一是<strong>学习流形结构</strong>，表示为编码和解码映射，流形的参数空间就是隐空间或者特征空间；</li><li>二是<strong>概率分布变换</strong>，即将白噪声变换成数据分布。</li></ul><p>深度神经网络的唯一功能就是表达欧式空间之间的连续映射，因此在统计深度学习领域，所有的数据都被表示成映射，概率分布也被表示成映射，即从白噪声到给定概率分布间的传输变换（transportation map）。由此，<strong>统计深度学习可以由范畴语言来表述</strong>，其范畴为{流形上的概率分布，流形间的映射}。</p></blockquote></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222202014577.png" class="" title="微分几何示例"><p>利用流形上的数学来研究GAN中从输入到输出之间的一些关系。</p><h1 id="计算共形几何与最优传输"><a href="#计算共形几何与最优传输" class="headerlink" title="计算共形几何与最优传输"></a>计算共形几何与最优传输</h1><p><a href="https://stellarkey.github.io/%E8%AE%A1%E7%AE%97%E5%85%B1%E5%BD%A2%E5%87%A0%E4%BD%95/">计算共形几何</a></p><blockquote><p><a href="https://www.jiqizhixin.com/articles/2018-11-09-5">WGAN-div：默默无闻的WGAN填坑者| 附开源代码| 机器之心</a></p><p><a href="https://zhuanlan.zhihu.com/p/58506295">Wasserstein Distance 讲解</a></p></blockquote><h2 id="最优传输散度"><a href="#最优传输散度" class="headerlink" title="最优传输散度"></a>最优传输散度</h2><p><strong><font color=red>最优传输</font></strong>的问题便是，有两个概率分布，怎样从一个概率分布迁移到另外一个概率分布？所以它也叫“推土机”，类似推土机一样把分布以最小的代价变成另外一个概率分布；目标是要解一个问题，每一点移动有一个代价，要使得这个移动总代价是最低的。</p><p>最优传输可以用来描述两个概率分布之间的距离，称为<strong>最优传输散度</strong>，即：<a href="https://zhuanlan.zhihu.com/p/58506295"><strong>Wasserstein Distance</strong></a>。跟统计学中KL散度的作用类似；但是，KL散度有一些缺陷：没有对称性，无法衡量离散分布和连续分布的距离……</p><script type="math/tex; mode=display">\begin{equation}W_{p}(\mu, \nu)=\left(\inf _{\gamma \in \Gamma(\mu, \nu)} \int_{\mathcal{X} \times \mathcal{X}}\|x-y\|^{p} d \gamma(x, y)\right)^{1 / p}\end{equation}</script><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/v2-6ad7768d4f98dfe0b9739ba9f0bf3390_720w.jpg" class="" title="最优传输示例 - 知乎@张楚珩"><h2 id="GAN的模式崩溃"><a href="#GAN的模式崩溃" class="headerlink" title="GAN的模式崩溃"></a>GAN的模式崩溃</h2><blockquote><p><a href="https://arxiv.org/abs/1803.00567">Computational Optimal Transport</a></p></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222215836927.png" class="" title="最优传输示例"><hr><p>最优传输特别适合用来描述对抗生成网络（GAN）里面的问题。</p><blockquote><p>这部分研究也是顾险峰团队在推动。</p></blockquote><p>GAN的训练中有一种被称为<strong><font color=blue>模式崩溃</font></strong>（Mode Collapsing）的现象。GNN在学习多模态（mode）的分布时，经常只能收敛到其中的部分模态。即使经过正则一类的措施能够让GAN覆盖所有模态，却会生成虚假的样本。</p><p>顾险峰团队认为，其中的本质原因是，<strong>深度神经网络只能表示连续映射，而最优传输映射整体是非连续的</strong>。</p><h1 id="代数几何"><a href="#代数几何" class="headerlink" title="代数几何"></a>代数几何</h1><p>代数几何的基本研究对象是在任意维数的（仿射或射影）空间中，由若干个代数方程的公共零点所构成的集合的几何特性。</p><h2 id="热带几何"><a href="#热带几何" class="headerlink" title="热带几何"></a>热带几何</h2><blockquote><p><a href="https://arxiv.org/abs/1805.07091">Tropical Geometry of Deep Neural Networks</a></p></blockquote><p>热带几何是<strong>分片线性化</strong>的代数几何。</p><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222202401528.png" class="" title="热带几何"><p>因为ReLU函数是{X,0}取大，通过这个取大操作以及加法、减法，定义了一些热带几何上的运算，通过这几种预算，我们就可以定义一种多项式。多项式就涉及到了代数几何的研究范畴。</p><h1 id="计算机代数"><a href="#计算机代数" class="headerlink" title="计算机代数"></a>计算机代数</h1><p><a href="https://stellarkey.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BB%A3%E6%95%B0/">计算机代数</a></p><blockquote><p><a href="https://stellarkey.github.io/第二届AI与安全研讨会/">第二届 AI 与安全研讨会</a></p></blockquote><h2 id="向量空间、符号空间"><a href="#向量空间、符号空间" class="headerlink" title="向量空间、符号空间"></a>向量空间、符号空间</h2><p>在第三代人工智能模型中，指出两天发展人工智能的道路：</p><ul><li>继续研究<strong><font color=deepskyblue>向量空间</font></strong><ul><li>最大挑战：<strong>语义丢失问题</strong></li></ul></li><li>走回知识驱动 + 数据驱动 $\longrightarrow$ <strong><font color=deepskyblue>符号空间</font></strong><ul><li><strong>在符号空间中，数学工具有限</strong><ul><li>朱军：符号空间的数学工具，将来大家将学习离散数学（<strong>数理逻辑</strong>），CS的还要学<strong>形式语言与自动机</strong>，<strong>组合数学</strong>，<strong>图论</strong>等相关课程，<strong>抽象代数</strong>（群、环、域）也相关</li></ul></li><li>缺少知识</li></ul></li></ul><h2 id="多项式代数"><a href="#多项式代数" class="headerlink" title="多项式代数"></a>多项式代数</h2><p>计算机代数主要指多项式代数，它实现了无精度损失的<strong>符号计算</strong>。属于符号空间中的数学工具。</p><p>计算机代数中常用的方法有<strong>Groebner基</strong>，<strong>三角列</strong>和<strong>柱形代数分解</strong>。</p><p>机器证明的底层数学工具就是计算机代数。</p><h1 id="随机矩阵"><a href="#随机矩阵" class="headerlink" title="随机矩阵"></a>随机矩阵</h1><blockquote><p><a href="https://arxiv.org/abs/1702.05419">A Random Matrix Approach to Neural Networks</a></p><p><a href="https://papers.nips.cc/paper/6857-nonlinear-random-matrix-theory-for-deep-learning.pdf">Nonlinear random matrix theory for deep learning - NIPS</a></p><p><a href="https://zhuanlan.zhihu.com/p/37591888">随机矩阵理论(RMT)综述</a></p></blockquote><p><strong><font color=red>随机矩阵</font></strong>：一个矩阵中的所有元素都是随机变量。</p><p><strong><font color=red>经验谱分布函数</font></strong>（ESD）：设 $\mathrm{A}$ 是一个具有 $n$ 个实特征根的 $n$ 阶方阵，记其特征根为 $\lambda<em>{1}, \cdots, \lambda</em>{n}$。这些特征根的分布可以用以下函数$F_n(x)$表示，称为方阵 $\mathrm{A}$ 的经验分布函数。（$I$ 为指示函数）</p><script type="math/tex; mode=display">\begin{equation}F_{n}(x)=\frac{1}{n} \sum_{k=1}^{n} I\left(\lambda_{k} \leqslant x\right)\end{equation}</script><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222202947031.png" class="" title="随机矩阵示例"><p>大型神经网络的权值在某些情况下接近于随机分布。可以利用随机矩阵理论来刻画它的谱分布的一些性质。</p><h1 id="动力系统与随机分析"><a href="#动力系统与随机分析" class="headerlink" title="动力系统与随机分析"></a>动力系统与随机分析</h1><h2 id="ResNet"><a href="#ResNet" class="headerlink" title="ResNet"></a>ResNet</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/31852747">你必须要知道CNN模型：ResNet</a></p></blockquote><p>ResNet的作者何凯明因为ResNet工作摘得CVPR2016最佳论文奖。</p><p>深度神经网络在加深层数时，除了过拟合、梯度消亡、爆炸的问题以外，还会遇到退化的问题（Degradation problem）。</p><p><strong><font color=red>残差学习</font></strong>（Residual learning）：定义学习到的特征为$H(x)$，而残差为$F(x)=H(x)-x$。现在神经网络学习$F(x)$ instead of $H(x)$。</p><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/ResNetUnit.png" class="" title="ResNet单元"><blockquote><p>通过引入短路机制，残差网络的内部结构只需学习残差。当残差为0时，变为恒等映射。</p><p>因为残差的数量级较小，映射对于残差微小的变化较为敏感。</p></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/v2-7cb9c03871ab1faa7ca23199ac403bd9_720w.jpg" class="" title="ResNet网络结构图"><h2 id="相平面图"><a href="#相平面图" class="headerlink" title="相平面图"></a>相平面图</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/119390532">非线性控制（二）相平面法</a></p></blockquote><p>相平面法是一种基于时域的分析方法。表示有两个独立变量的系统（二阶系统）的轨迹。</p><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/v2-00f2369204775ba6f2dd1f3741f539eb_r.jpg" class="" title="相平面图示例"><h2 id="郎之万动力学"><a href="#郎之万动力学" class="headerlink" title="郎之万动力学"></a>郎之万动力学</h2><p>朗之万动力学 ( Langevin Dynamics ) 是控制模拟系统能量的一种常用算法。</p><p>在模拟一个大型系统时，误差会逐渐积累，朗之万动力学的实现方法是在系统中加入<strong>耗散力</strong>和<strong>随机力</strong>（相当于引入布朗运动），弱化系统误差，使得系统保持一定的平衡状态。</p><h2 id="相关工作"><a href="#相关工作" class="headerlink" title="相关工作"></a>相关工作</h2><blockquote><p><a href="https://arxiv.org/abs/1705.03341">Stable Architectures for Deep Neural Networks</a></p><p><a href="https://arxiv.org/abs/1702.03849">Non-convex learning via Stochastic Gradient Langevin Dynamics: a nonasymptotic analysis</a></p></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222215911981.png" class="" title="动力系统示例"><p>动力系统主要是指稳定性的内容。<a href="https://arxiv.org/abs/1705.03341">Stable Architectures for Deep Neural Networks</a>这篇文章是用相平面图来研究ResNet里面动力学的稳定性。</p><p>随机动力系统。比如：随机梯度下降。如果把它<strong>加一个人为的噪声</strong>（$\eta<em>{t} \sim N\left(0, \epsilon</em>{t}\right)$），变成带噪声的迭代，叫“<strong>随机梯度郎之万动力学</strong>”，会带来一些更好的表现。</p><h1 id="统计物理与非线性科学"><a href="#统计物理与非线性科学" class="headerlink" title="统计物理与非线性科学"></a>统计物理与非线性科学</h1><h2 id="平均场方法"><a href="#平均场方法" class="headerlink" title="平均场方法"></a>平均场方法</h2><p>平均场论（Mean field theory）是一种研究<strong>复杂多体问题</strong>的方法，将数量巨大的互相作用的多体问题转化成每一个粒子处在一种弱周期场中的单体问题。以<strong>平均作用效果</strong>替代单个作用效果的加和。</p><h2 id="混沌和分形"><a href="#混沌和分形" class="headerlink" title="混沌和分形"></a>混沌和分形</h2><blockquote><p><a href="http://www.global-sci.org/v1/mc/issues/3/no3/freepdf/35s.pdf">自然的奥秘：混沌与分形</a></p><p><em>混沌是时间上的分形，分形是空间上的混沌。</em></p></blockquote><p>混沌和分形都是动力系统中非线性方程所描述的非平衡的过程和结果。</p><h2 id="一些相关工作"><a href="#一些相关工作" class="headerlink" title="一些相关工作"></a>一些相关工作</h2><blockquote><p><a href="https://arxiv.org/abs/1804.06561">A Mean Field View of the Landscape of Two-Layers Neural Networks</a></p><p><a href="https://arxiv.org/abs/2006.09313">Hausdorff Dimension, Stochastic Differential Equations, and Generalization in Neural Networks</a></p></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222215946268.png" class="" title="统计物理示例"><p>最近有这样一个工作，两层神经网络可以做一个平均场近似，平均场方法几乎是物理学家的法宝，任何情况下都可以做一个平均场近似，大部分情况下都 work 得比较好。对于<strong>两层<font color=red>无穷宽</font>的神经网络</strong>，我们可以平均掉一些效果，这就可以得到一个比较好的跟实际效果吻合的预测。</p><p>非线性研究里还有很多研究混沌、分形几何之类的。举例来说，上图第二项工作是用随机梯度下降训练的轨道的分形维数来控制复杂度，由此可以得到一些泛化。</p><h1 id="信息论"><a href="#信息论" class="headerlink" title="信息论"></a>信息论</h1><p><a href="https://stellarkey.github.io/%E4%BF%A1%E6%81%AF%E8%AE%BA/">信息论</a></p><h2 id="信息瓶颈方法"><a href="#信息瓶颈方法" class="headerlink" title="信息瓶颈方法"></a>信息瓶颈方法</h2><blockquote><p><a href="https://www.zhihu.com/question/53245133">如何解释通俗的解释信息瓶颈方法？</a></p><p><a href="https://wiki.mbalib.com/zh-tw/信息瓶颈">信息瓶颈- MBA智库百科</a></p><p><a href="https://www.jiqizhixin.com/dailies/d6d8962c-18bc-446a-8c7b-c96b824afadc">使用深度变分信息瓶颈方法解释黑盒子| 机器之心</a></p></blockquote><p>数据可能很多，将数据全部接收后进行压缩，称为<strong>信息瓶颈方法</strong>。可以用信息瓶颈方法来最优化地平衡准确度和复杂度。</p><p>信息瓶颈方法也用于分析深度学习的过程。</p><h2 id="最大编码率降低原理"><a href="#最大编码率降低原理" class="headerlink" title="最大编码率降低原理"></a>最大编码率降低原理</h2><p><strong>最大编码率降低原理</strong>（MCR2），这是一种信息理论度量，可以最大限度地提高整个数据集和每个类的编码率差。</p><h2 id="相关工作-1"><a href="#相关工作-1" class="headerlink" title="相关工作"></a>相关工作</h2><blockquote><p><a href="https://arxiv.org/abs/1703.00810">Opening the Black Box of Deep Neural Networks via Information</a></p><p><a href="https://arxiv.org/abs/2006.08558">Learning Diverse and Discriminative Representations via the Principle of Maximal Coding Rate Reduction</a></p></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222220023514.png" class="" title="信息论示例"><p>“信息瓶颈方法”，这是我们比较少接触的；还有“最大编码率降低原理”，是从信息论或者编码理论里面出来的一些方法。</p><h1 id="博弈论"><a href="#博弈论" class="headerlink" title="博弈论"></a>博弈论</h1><p><a href="https://stellarkey.github.io/%E5%8D%9A%E5%BC%88%E8%AE%BA/">博弈论</a></p><h2 id="Shapley值法"><a href="#Shapley值法" class="headerlink" title="Shapley值法"></a>Shapley值法</h2><p>合作博弈中分为：</p><ul><li>功利主义：<strong>Shapley值</strong><ul><li>提倡最大化效益</li></ul></li><li>平均主义：核<ul><li>博弈的可行解空间构成一个核，核中任意一个分配都不会导致参与者组合脱离总合作</li></ul></li></ul><p>Shapley值衡量了一个联盟 $S$ 中参与者 $p_i$ 的<strong><font color=red>边际贡献</font></strong>。</p><script type="math/tex; mode=display">\begin{equation}\delta\left(p_{i}, S\right)=v(S)-v\left(S-\left\{p_{i}\right\}\right)\end{equation}</script><h2 id="可解释性AI"><a href="#可解释性AI" class="headerlink" title="可解释性AI"></a>可解释性AI</h2><blockquote><p><a href="https://arxiv.org/abs/1705.07874">A Unified Approach to Interpreting Model Predictions</a></p></blockquote><img data-src="/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222220046838.png" class="" title="博弈论示例"><p>在可解释性AI里面有一个比较有名的方法叫Shapley值法。这个想法很简单，对一个黑箱的算法，要去看黑箱里的变量是怎么work的，以及哪些变量重要的。给它做一个可视化，可以假设这些变量之间在进行搏弈，在争夺对Response的某种payoff。在这个搏弈过程中，我们想办法把它们的贡献分配给这些变量。</p><div><hr><font size=5>相关文章</font><ul><li><a href="https://stellarkey.github.io/%E7%AC%AC%E4%BA%8C%E5%B1%8AAI%E4%B8%8E%E5%AE%89%E5%85%A8%E7%A0%94%E8%AE%A8%E4%BC%9A/">第二届AI与安全研讨会</a></li><li><a href="https://stellarkey.github.io/CS%E6%8C%91%E6%88%98%E8%90%A5/">CS挑战营</a></li><li><a href="https://stellarkey.github.io/%E5%8D%95%E5%88%86%E7%B1%BB/">单分类（one-class classification）</a></li><li><a href="https://stellarkey.github.io/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">深度学习笔记</a></li><li><a href="https://stellarkey.github.io/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E4%B8%8E%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/">时间序列异常检测</a></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.stat-center.pku.edu.cn/zxry/zxjy/lw/1227407.htm&quot;&gt;林伟&lt;/a&gt;在《人工智能的新数学》主题报告中，指出人工智能中经典的数学工具，有以下四类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概率论、数理统计；&lt;/li&gt;
&lt;li&gt;数值代数、数值分析、最优化；&lt;/li&gt;
&lt;li&gt;经典分析、函数论（比如深度学习的逼近论相关知识）；&lt;/li&gt;
&lt;li&gt;计算机科学基础，包括离散数学、理论计算机科学。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经典数学工具对于学生而言，是最应该掌握、最核心的工具。&lt;/p&gt;
&lt;img data-src=&quot;/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/image-20201222160231066.png&quot; class=&quot;&quot; title=&quot;人工智能中的“旧”数学&quot;&gt;</summary>
    
    
    
    <category term="Learn" scheme="https://stellarkey.github.io/categories/Learn/"/>
    
    
    <category term="数学" scheme="https://stellarkey.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="AI" scheme="https://stellarkey.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>第二届AI与安全研讨会</title>
    <link href="https://stellarkey.github.io/%E7%AC%AC%E4%BA%8C%E5%B1%8AAI%E4%B8%8E%E5%AE%89%E5%85%A8%E7%A0%94%E8%AE%A8%E4%BC%9A/"/>
    <id>https://stellarkey.github.io/%E7%AC%AC%E4%BA%8C%E5%B1%8AAI%E4%B8%8E%E5%AE%89%E5%85%A8%E7%A0%94%E8%AE%A8%E4%BC%9A/</id>
    <published>2020-12-05T00:59:29.000Z</published>
    <updated>2022-05-21T19:39:10.835Z</updated>
    
    <content type="html"><![CDATA[<p>第二届AI与安全研讨会。<span id="more"></span>安全行业，在我的理解中，是一种诞生于“卷”的学问。它是社会进化的产物。众所周知，网络安全的研究耗时耗力，如果引入高自动化的挖掘机制，就可能获得一些研究上的便利。AI可以助力网络安全，AI本身也存在着巨大的安全问题。现代的人工智能技术的安全性很差。对抗研究层出不穷。修修补补固然重要，但想要从根本上提升AI的安全性，必须要从框架和基础原理出发。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="http://s.alibaba.com/conference">http://s.alibaba.com/conference</a></p><blockquote><p>只参加了上午场。</p></blockquote><img data-src="/%E7%AC%AC%E4%BA%8C%E5%B1%8AAI%E4%B8%8E%E5%AE%89%E5%85%A8%E7%A0%94%E8%AE%A8%E4%BC%9A/image-20201205090648183.png" class="" title="会议日程"><h1 id="致辞-人工智能理论发展趋势"><a href="#致辞-人工智能理论发展趋势" class="headerlink" title="致辞 人工智能理论发展趋势"></a>致辞 人工智能理论发展趋势</h1><blockquote><p>张钹(b o^2)</p></blockquote><h2 id="算法的安全问题"><a href="#算法的安全问题" class="headerlink" title="算法的安全问题"></a>算法的安全问题</h2><p>现阶段的产业应用都是基于大数据深度学习 / 神经网络的。</p><p>——大数据 + 大模型 + 大计算能力。</p><ul><li>解决拟合从输入到输出的映射。<ul><li>序列 $\longrightarrow$ 序列</li></ul></li><li>实质是<strong><font color=red>向量计算</font></strong>。</li></ul><p>参数化的神经网络拟合能力极强。（千亿级大小的参数集）——通用映射 / 万能映射。</p><p>一般情况下性能不错，但存在严重的安全问题。</p><h2 id="鲁棒性问题"><a href="#鲁棒性问题" class="headerlink" title="鲁棒性问题"></a>鲁棒性问题</h2><ul><li><strong>对测试集的鲁棒性极差</strong>，泛化能力<ul><li>应用场景非常有限</li></ul></li><li>对非对抗噪声的鲁棒性很差<ul><li>传统信息处理中也存在这样的问题</li></ul></li><li><strong>对对抗性噪声的鲁棒性几乎等于0</strong><ul><li>深度学习面临的最大挑战，算法本身的不安全</li><li>容易被滥用、误用、被攻击</li></ul></li></ul><p>向量空间和语义空间的度量不一样，不能抵抗干扰。</p><p>概率建模无法避免发生重大错误的情况。这和人的犯错是不同的。</p><blockquote><p>在机器翻译中，可能映射出完全没有意义的话。</p></blockquote><h2 id="第三代人工智能"><a href="#第三代人工智能" class="headerlink" title="第三代人工智能"></a>第三代人工智能</h2><blockquote><p><a href="https://stellarkey.github.io/阅《迈向第三代人工智能》/">阅《迈向第三代人工智能》</a></p></blockquote><p>所有的人工智能应用领域都是在求解语义问题。</p><p>在人工智能中注入<strong><font color=red>知识</font></strong>。——知识让安全更智能</p><h3 id="知识表示"><a href="#知识表示" class="headerlink" title="知识表示"></a>知识表示</h3><p>符号串 $\longrightarrow$ 向量</p><blockquote><p>如何在转换过程中确保语义不丢失？</p></blockquote><h2 id="知识库"><a href="#知识库" class="headerlink" title="知识库"></a>知识库</h2><p>知识数量 $\longrightarrow$ 动态、大规模的知识库。</p><blockquote><p>算法的实时性。。</p></blockquote><hr><h2 id="知识处理"><a href="#知识处理" class="headerlink" title="知识处理"></a>知识处理</h2><p>两条路：</p><ul><li>继续研究<strong><font color=deepskyblue>向量空间</font></strong><ul><li>最大挑战：<strong>语义丢失问题</strong></li></ul></li><li>走回知识驱动 + 数据驱动 $\longrightarrow$ <strong><font color=deepskyblue>符号空间</font></strong><ul><li><strong>在符号空间中，数学工具有限</strong><ul><li>朱军：符号空间的数学工具，将来大家将学习离散数学（<strong>数理逻辑</strong>），CS的还要学<strong>形式语言与自动机</strong>，<strong>组合数学</strong>，<strong>图论</strong>等相关课程，<strong>抽象代数</strong>（群、环、域）也相关</li></ul></li><li>缺少知识</li></ul></li></ul><blockquote><p>Q：在符号空间中，目前有哪些可用的数学工具？</p></blockquote><p>下一步：<strong><font color=blue>知识处理</font></strong>。大规模知识库 + 知识库的高效推理方法。</p><p>让计算机学习人类处理知识的过程。</p><h1 id="多媒体智能"><a href="#多媒体智能" class="headerlink" title="多媒体智能"></a>多媒体智能</h1><blockquote><p>朱文武</p></blockquote><p>朱文武老师最近写了一篇综述文章：Multimedia Intelligence: When multimedia meets intelligence…</p><p><strong>多媒体</strong>富含语义信息，可以为人工智能<strong>提供可解释性</strong>，拓宽机器学习的应用场景。（多模态机器学习）</p><p>当前机器学习存在的问题：<strong>不知其所以然</strong></p><h2 id="多媒体融合"><a href="#多媒体融合" class="headerlink" title="多媒体融合"></a>多媒体融合</h2><blockquote><p>PS. 我认为必须要借助多媒体融合，智能才能真正认识世界。</p><p>朱老师另一篇综述：Multi-Modal Deep Analysis for …</p></blockquote><p>将多模态信号融合，已完成特定机器学习任务。</p><p>可以进行关联分析。</p><h2 id="多媒体促进AI"><a href="#多媒体促进AI" class="headerlink" title="多媒体促进AI"></a>多媒体促进AI</h2><p>数据驱动与知识驱动<strong>协同</strong>。</p><p>知识和数据的融合：</p><ul><li>语义指导+数据驱动：关联表征学习</li><li>语义作为先验信息的贝叶斯学习</li></ul><h2 id="多媒体迁移"><a href="#多媒体迁移" class="headerlink" title="多媒体迁移"></a>多媒体迁移</h2><p>不同模态的知识丰富度不同。</p><p>语义对齐的方法：</p><ul><li>跨模态信息迁移</li><li>知识迁移</li></ul><h2 id="贝叶斯学习"><a href="#贝叶斯学习" class="headerlink" title="贝叶斯学习"></a>贝叶斯学习</h2><blockquote><p>朱军老师的工作</p></blockquote><p><strong><font color=red>小样本学习</font></strong>。有非常强的可推理性。</p><h2 id="AI促进多媒体"><a href="#AI促进多媒体" class="headerlink" title="AI促进多媒体"></a>AI促进多媒体</h2><p>增加多媒体可推理性。</p><ul><li>用RNN模仿人类的多步推理：论文 Compositional Attention Network…</li></ul><p>受关联推理启发的学习</p><ul><li>用GNN模仿人类的关联推理：论文 Boosting Visual Question Answering…</li></ul><p>感知-认知一体化学习</p><ul><li>多层次化。高层感知对应高层推理系统，低层次感知结果也有对应的推理形式。<ul><li>神经模块化网络：Perceptual Visual Reasoning…</li></ul></li></ul><h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><h3 id="多媒体上的可解释推理"><a href="#多媒体上的可解释推理" class="headerlink" title="多媒体上的可解释推理"></a>多媒体上的可解释推理</h3><p>结合逻辑推理（一阶逻辑、逻辑编程语言）</p><h3 id="多媒体上的自主学习与推理"><a href="#多媒体上的自主学习与推理" class="headerlink" title="多媒体上的自主学习与推理"></a>多媒体上的自主学习与推理</h3><p><strong>环境自适应</strong>。</p><p>如何进行动态的自主学习？</p><ul><li>自适应学习 + 常识学习</li></ul><h3 id="未来媒体大数据推理：类人认知"><a href="#未来媒体大数据推理：类人认知" class="headerlink" title="未来媒体大数据推理：类人认知"></a>未来媒体大数据推理：类人认知</h3><p>像人一样认知、学习和推理。</p><h3 id="数据驱动-知识驱动"><a href="#数据驱动-知识驱动" class="headerlink" title="数据驱动 + 知识驱动"></a>数据驱动 + 知识驱动</h3><p>机器（数据驱动）；人类（知识驱动）。</p><p>目前做不到完全的知识驱动， 那么</p><ul><li>能不能两者结合，找到一个中间点？</li></ul><h1 id="AI的预设与挑战"><a href="#AI的预设与挑战" class="headerlink" title="AI的预设与挑战"></a>AI的预设与挑战</h1><blockquote><p>于剑 北交人智院长</p></blockquote><h2 id="AI公理化"><a href="#AI公理化" class="headerlink" title="AI公理化"></a>AI公理化</h2><p>聚类分析的公理化研究遭遇重挫。</p><ul><li>聚类不可能性定理：An impossible theorem .. </li></ul><p>希尔伯特的信念：”我们必须知道，我们终将知道。“——相信概念可以精确定义。</p><p>维特根斯坦《哲学研究》。</p><p><strong>概念</strong>：</p><ul><li>符号表示：名字</li><li>内涵表示：命题</li><li>外延表示</li></ul><p>隶属度模糊化</p><p>经典集合分层逼近</p><h3 id="概念内涵表示的进展"><a href="#概念内涵表示的进展" class="headerlink" title="概念内涵表示的进展"></a>概念内涵表示的进展</h3><p>经典理论</p><p>原型理论</p><p>样例理论</p><p>知识理论</p><hr><h2 id="机器学习公理化"><a href="#机器学习公理化" class="headerlink" title="机器学习公理化"></a>机器学习公理化</h2><p><strong>《机器学习：从公理到算法》，于剑</strong></p><h2 id="AI的三大流派"><a href="#AI的三大流派" class="headerlink" title="AI的三大流派"></a>AI的三大流派</h2><p>符号主义：指名</p><p>连接主义：指心</p><p>行为主义：指物</p><hr><p>基本假设：指名 = 指心 = 指物。</p><blockquote><p>符号空间 = 幻想空间 = 现实空间</p><p>Q：这三种指代构成划分吗？是完备的吗？</p></blockquote><h1 id="数据驱动和知识引导相互结合的智能计算"><a href="#数据驱动和知识引导相互结合的智能计算" class="headerlink" title="数据驱动和知识引导相互结合的智能计算"></a>数据驱动和知识引导相互结合的智能计算</h1><blockquote><p>吴飞 浙大人智所长</p></blockquote><h2 id="第四范式"><a href="#第四范式" class="headerlink" title="第四范式"></a>第四范式</h2><p>数据洪流（Data Torrent）第四范式。</p><ul><li>任务可学习</li><li>结果可信任</li><li>……</li></ul><h2 id="三种记忆体"><a href="#三种记忆体" class="headerlink" title="三种记忆体"></a>三种记忆体</h2><ul><li>瞬时记忆（多通道感知）</li><li>工作记忆（直觉、顿悟、因果）</li><li>长期记忆（先验、知识）</li></ul><h2 id="从图灵机到【神经图灵机】"><a href="#从图灵机到【神经图灵机】" class="headerlink" title="从图灵机到【神经图灵机】"></a>从图灵机到【神经图灵机】</h2><p>Deep Neural Reasoning</p><h2 id="数据驱动、知识引导与行为探索"><a href="#数据驱动、知识引导与行为探索" class="headerlink" title="数据驱动、知识引导与行为探索"></a>数据驱动、知识引导与行为探索</h2><p>归纳、演绎、顿悟。</p><blockquote><p>Q：顿悟？？？</p></blockquote><p>Reasoning, Attention, Memory (RAM)</p><hr><p><strong>潘云鹤</strong>近期文章：</p><ul><li>多重知识表达：言语表达、形象表达、神经网络表达</li><li>《<strong><font color=blue>中国迈向新一代人工智能</font></strong>》，机器智能子刊</li></ul><hr><p>引入因果关联，降低虚假关系的权重</p><p>人工智能辅助司法判案。因果分析。</p><hr><p>浙大人工智能MOOC。目前已发布3门课。</p><h1 id="人工智能驱动的网络空间内容安全"><a href="#人工智能驱动的网络空间内容安全" class="headerlink" title="人工智能驱动的网络空间内容安全"></a>人工智能驱动的网络空间内容安全</h1><blockquote><p>操晓春 信工所</p></blockquote><h2 id="跨媒体因果推断"><a href="#跨媒体因果推断" class="headerlink" title="跨媒体因果推断"></a>跨媒体因果推断</h2><p>常识数据模态单一，支持机制模式固定，没有大知识驱动……</p><p>建立大规模数据库。</p><p>数据驱动（社会计算） + 知识驱动（因果推断）。</p><h2 id="隐群体社会计算"><a href="#隐群体社会计算" class="headerlink" title="隐群体社会计算"></a>隐群体社会计算</h2><p>输入是多媒体内容，人与内容的关系可能表示为超边等各种复杂的结构。</p><p>Graph Attention Topic Model。</p><h2 id="高价值元素发现"><a href="#高价值元素发现" class="headerlink" title="高价值元素发现"></a>高价值元素发现</h2><p>Forgery Detection。</p><p>图像编辑。如何判断真假？</p><p>从图像中提取高价值元素。</p><h2 id="跨模态协同识别"><a href="#跨模态协同识别" class="headerlink" title="跨模态协同识别"></a>跨模态协同识别</h2><p>Seeking Latent Representation</p><p>High Order Consistency</p><p>Partial Multi-view Data —— Cycle GAN?恢复缺失值</p><p>Position bias 偏序打分</p><h2 id="对抗防御"><a href="#对抗防御" class="headerlink" title="对抗防御"></a>对抗防御</h2><p>attack tracking</p><h2 id="视觉增强"><a href="#视觉增强" class="headerlink" title="视觉增强"></a>视觉增强</h2><p>Dehazing 去模糊</p><p>Super-resolution</p><h2 id="因果推断"><a href="#因果推断" class="headerlink" title="因果推断"></a>因果推断</h2><h3 id="任务-特征协同解耦"><a href="#任务-特征协同解耦" class="headerlink" title="任务-特征协同解耦"></a>任务-特征协同解耦</h3><p>任务、特征构成二分图……</p><h1 id="驾驶情境理解与预测方法初探"><a href="#驾驶情境理解与预测方法初探" class="headerlink" title="驾驶情境理解与预测方法初探"></a>驾驶情境理解与预测方法初探</h1><blockquote><p>薛建儒 西交大</p></blockquote><h2 id="交通场景理解"><a href="#交通场景理解" class="headerlink" title="交通场景理解"></a>交通场景理解</h2><p>对传感器数据进行处理，形成<strong>结构化表征</strong>。</p><p>障碍物的运动分析——检测、跟踪。</p><ul><li>3D点云+图像分割 的语义分析。</li><li>路口车辆运动轨迹估计。</li></ul><h2 id="交通情境预测"><a href="#交通情境预测" class="headerlink" title="交通情境预测"></a>交通情境预测</h2><p>主动感知、意图预测……<strong><font color=red>运动决策依赖于预测</font></strong>。</p><p>记忆机制、注意机制。</p><p>多粒度注意力机制，对向量元素进行自主选择。</p><hr><p><strong>实现长时段的预测</strong>。</p><h1 id="神经-符号系统的一些探索"><a href="#神经-符号系统的一些探索" class="headerlink" title="神经-符号系统的一些探索"></a>神经-符号系统的一些探索</h1><blockquote><p>俞扬</p></blockquote><h1 id="动态深度神经网络"><a href="#动态深度神经网络" class="headerlink" title="动态深度神经网络"></a>动态深度神经网络</h1><blockquote><p>黄高</p></blockquote><div><hr><font size=5>相关文章</font><ul><li><a href="https://stellarkey.github.io/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%AD%E7%9A%84%E6%96%B0%E6%95%B0%E5%AD%A6/">人工智能中的“新”数学</a></li><li><a href="https://stellarkey.github.io/%E5%8D%95%E5%88%86%E7%B1%BB/">单分类（one-class classification）</a></li><li><a href="https://stellarkey.github.io/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">深度学习笔记</a></li><li><a href="https://stellarkey.github.io/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E4%B8%8E%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/">时间序列异常检测</a></li><li><a href="https://stellarkey.github.io/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%AD%E7%BB%83%E8%90%A5/">深度学习训练营</a></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;第二届AI与安全研讨会。</summary>
    
    
    
    <category term="View" scheme="https://stellarkey.github.io/categories/View/"/>
    
    
    <category term="AI" scheme="https://stellarkey.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>P2P系统后端设计</title>
    <link href="https://stellarkey.github.io/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    <id>https://stellarkey.github.io/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</id>
    <published>2020-11-30T01:52:58.000Z</published>
    <updated>2021-09-22T07:38:03.122Z</updated>
    
    <content type="html"><![CDATA[<p>P2P系统设计项目 - 服务器后端。使用JavaScript + MySQL搭建后端接口，提供数据交互功能。</p><img data-src="/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20201216192812552.png" class="" title="仪表盘"><span id="more"></span><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.bilibili.com/video/BV1R4411w7f3">【回形针PaperClip】别再问我什么是 BT 种子</a></p><p><a href="https://www.bilibili.com/video/av34370450">【万物4分钟】磁力下载是什么原理？跟用种子下载的区别大不大？</a></p><p><a href="https://zhuanlan.zhihu.com/p/85652893">求求你，别再问你的种子磁力为什么下不动了！</a></p><h1 id="种子文件-torrent"><a href="#种子文件-torrent" class="headerlink" title="种子文件 .torrent"></a>种子文件 <code>.torrent</code></h1><h2 id="BEncoding-编码格式"><a href="#BEncoding-编码格式" class="headerlink" title="BEncoding 编码格式"></a>BEncoding 编码格式</h2><blockquote><p><a href="https://fenying.gitbooks.io/bittorrent-specification-chinese-edition/content/chapter2.html">第二篇：BEncoding</a></p><p><a href="https://www.cnblogs.com/hnrainll/archive/2011/07/26/2117423.html">BT种子文件格式</a></p></blockquote><p><strong>BEncoding</strong> 是一种用于组织、描述数据的简洁编码格式，它支持 4 种数据类型 / 元素：</p><ul><li>字节串（Byte String）</li><li>整数（Integer）</li><li>列表（List, 线性表）</li><li>字典（Dictionary）</li></ul><h3 id="字节串"><a href="#字节串" class="headerlink" title="字节串"></a>字节串</h3><p>格式为 <code>长度:内容</code>。</p><p>例如：</p><ul><li><code>4:abcd</code>：”abcd”</li><li><code>0:</code>：空串</li></ul><blockquote><p> <strong>BE字节串</strong>，不是字符串，因此在字典中 <strong>key</strong> 的比较是二进制比较而不是字符串比较。</p></blockquote><h3 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h3><p>格式为 <code>i + 整数 + e</code>。</p><p>例如：</p><ul><li><code>i1234e</code>：1234</li><li><code>i-1e</code>：-1</li><li><code>i0e</code>：0</li></ul><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>格式为 <code>l + 元素:元素:...:元素 + e</code>。</p><p>例如：</p><ul><li><code>l4:spam4:eggse</code>：[ “spam”, “eggs” ]</li><li><code>li123e5:helloi111ee</code>：[ 123, “hello”, 111 ]</li><li><code>le</code>：空列表</li></ul><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><p>格式为 <code>d + 字节串:元素:...:字节串:元素 + e</code>。</p><p>例如：</p><ul><li><code>d3:cow3:moo4:spam4:eggse</code>：{ “cow” =&gt; “moo”, “spam” =&gt; “eggs” }</li><li><code>d4:name5:Angus3:agei23ee</code>：{ “name” =&gt; “Angus”, “age” =&gt; 23 }</li><li><code>d4:spaml1:a1:bee</code>：{ “spam” =&gt; [ “a”, “b” ] }</li><li><code>de</code>：空列表</li></ul><h2 id="Torrent文件结构"><a href="#Torrent文件结构" class="headerlink" title="Torrent文件结构"></a>Torrent文件结构</h2><blockquote><p><strong><a href="https://www.cnblogs.com/rekent/p/13970413.html">Torrent文件的解析与转换</a></strong></p></blockquote><p>Torrent整体是一个Bencoding编码的字典，其中有以下的属性名。</p><div class="table-container"><table><thead><tr><th>键名称</th><th>数据类型</th><th>可选项</th><th>键值含义</th></tr></thead><tbody><tr><td>announce</td><td>string</td><td>required</td><td>Tracker的Url</td></tr><tr><td>info</td><td>dictionary</td><td>required</td><td>该条映射到一个字典，该字典的键将取决于共享的一个或多个文件</td></tr><tr><td>announce-list</td><td>array[]</td><td>optional</td><td>备用Tracker的Url，以列表形式存在</td></tr><tr><td>comment</td><td>string</td><td>optional</td><td>备注</td></tr><tr><td>created by</td><td>string</td><td>optional</td><td>创建人或创建程序的信息</td></tr></tbody></table></div><h3 id="Info字段"><a href="#Info字段" class="headerlink" title="Info字段"></a>Info字段</h3><p>在总体结构中有个info，其为字典格式。</p><blockquote><p>单文件、多文件的有不同的info属性。</p></blockquote><h4 id="单文件Info结构"><a href="#单文件Info结构" class="headerlink" title="单文件Info结构"></a>单文件Info结构</h4><div class="table-container"><table><thead><tr><th>键名称</th><th>数据类型</th><th>可选项</th><th>键值含义</th></tr></thead><tbody><tr><td>name</td><td>string</td><td>required</td><td>建议保存到的文件名称</td></tr><tr><td>piceces</td><td>byte[]</td><td>required</td><td>每个文件块的SHA-1的集成Hash。</td></tr><tr><td>piece length</td><td>long</td><td>required</td><td>每个文件块的字节数</td></tr></tbody></table></div><h4 id="多文件Info结构"><a href="#多文件Info结构" class="headerlink" title="多文件Info结构"></a>多文件Info结构</h4><div class="table-container"><table><thead><tr><th>键名称</th><th>数据类型</th><th>可选项</th><th>键值含义</th></tr></thead><tbody><tr><td>name</td><td>string</td><td>required</td><td>建议保存到的目录名称</td></tr><tr><td>piceces</td><td>byte[]</td><td>required</td><td>每个文件块的SHA-1的集成Hash。</td></tr><tr><td>piece length</td><td>long</td><td>required</td><td>每个文件块的字节数</td></tr><tr><td>files</td><td>array[]</td><td>required</td><td>文件列表，列表存储的内容是字典结构</td></tr></tbody></table></div><p><strong>files字典结构：</strong></p><div class="table-container"><table><thead><tr><th>键名称</th><th>数据类型</th><th>可选项</th><th>键值含义</th></tr></thead><tbody><tr><td>path</td><td>array[]</td><td>required</td><td>一个对应子目录名的字符串列表，最后一项是实际的文件名称</td></tr><tr><td>length</td><td>long</td><td>required</td><td>文件的大小（以字节为单位）</td></tr></tbody></table></div><h2 id="Torrent解析"><a href="#Torrent解析" class="headerlink" title="Torrent解析"></a>Torrent解析</h2><blockquote><p><a href="https://github.com/ndroi/pytorrent">https://github.com/ndroi/pytorrent</a> 不太好用</p><p><a href="https://www.npmjs.com/package/parse-torrent"><strong>parse-torrent</strong></a> 这个是JS版本的</p><p><a href="https://github.com/7sDream/torrent_parser">torrent_parser</a> python版本</p></blockquote><p>既可以解析磁力链接，也可以解析种子文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> parseTorrent = <span class="built_in">require</span>(<span class="string">&#x27;parse-torrent&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">parseTorrent</span>(<span class="string">&#x27;magnet:?xt=urn:btih:d2474e86c95b19b8bcfdb92bc12c9d44667cfa36&amp;tr=http%3A%2F%2Ftracker.example.com%2Fannounce&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">parseTorrent</span>(fs.<span class="title function_">readFileSync</span>(__dirname + <span class="string">&#x27;/example.torrent&#x27;</span>)))</span><br></pre></td></tr></table></figure><h2 id="开源torrent"><a href="#开源torrent" class="headerlink" title="开源torrent"></a>开源torrent</h2><h3 id="libtorrent-开源P2P"><a href="#libtorrent-开源P2P" class="headerlink" title="libtorrent 开源P2P"></a>libtorrent 开源P2P</h3><blockquote><p><a href="https://www.cnblogs.com/iczelion/p/13622602.html">libtorrent-开源代码P2P协议库(BitTorrent)-linux下编译，测试</a></p><p><a href="https://erdgeist.org/arts/software/opentracker/">opentracker – An open and free bittorrent tracker</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-libtorrent</span><br></pre></td></tr></table></figure><p>运行示例：<a href="https://github.com/arvidn/libtorrent/blob/libtorrent-1_0_7/bindings/python/client.py">https://github.com/arvidn/libtorrent/blob/libtorrent-1_0_7/bindings/python/client.py</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 client.py demo.torrent</span><br></pre></td></tr></table></figure><blockquote><p><code>demo.torrent</code>为一个测试种子文件。</p></blockquote><h3 id="WebTorrent-开源P2P"><a href="#WebTorrent-开源P2P" class="headerlink" title="WebTorrent  开源P2P"></a>WebTorrent  开源P2P</h3><blockquote><p><a href="https://webtorrent.io/">https://webtorrent.io/</a></p><p><a href="https://github.com/webtorrent/webtorrent">https://github.com/webtorrent/webtorrent</a></p></blockquote><p>WebTorrent is a streaming torrent client for <strong>Node.js</strong> and the <strong>web</strong>. WebTorrent provides the same API in both environments.</p><blockquote><p>The WebTorrent protocol works just like <a href="https://wiki.theory.org/BitTorrentSpecification">BitTorrent protocol</a>, except it uses <a href="https://en.wikipedia.org/wiki/WebRTC">WebRTC</a> instead of <a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol">TCP</a>/<a href="https://en.wikipedia.org/wiki/Micro_Transport_Protocol">uTP</a> as the transport protocol.</p></blockquote><p>在<a href="https://webtorrent.io/docs">Webtorrent的API</a>中支持直接访问种子中的各个字段：</p><img data-src="/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20201213175204709.png" class="" title="comment"><h1 id="JSON文件-json"><a href="#JSON文件-json" class="headerlink" title="JSON文件 .json"></a>JSON文件 <code>.json</code></h1><blockquote><p><a href="https://www.w3school.com.cn/json/json_syntax.asp">JSON 语法</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/JSON">使用JSON</a></p><p><a href="https://www.cnblogs.com/hwtblog/p/8483573.html">json文件格式详解</a></p><p><a href="http://www.json.cn/">JSON在线解析及格式化验证 - JSON.cn</a></p></blockquote><p>JSON（<strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation）是一个数据交换协议规范。它的设计简约，从而在Web开发中得到大量的应用。JSON文件后缀为<code>.json</code>。不同的语言中存在不同的对JSON文件的解析器，如JavaScript中的<code>eval()</code>函数。</p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/27487096">什么是数据交换语言?</a></p><blockquote><p><strong>在不同的系统不同的语言间交换数据时，我们一般倾向于使用无关于平台及语言的数据交换语言。此类语言主要包括XML，JSON，YAML，Protobuf等，常用于接口调用，配置文件，数据存储等场景。</strong></p></blockquote></blockquote><h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><p>JSON允许以下基本元素 / 值（value）：</p><ul><li><strong>字符串</strong>（string）</li><li><strong>数值</strong>（number）</li><li><strong>布尔值</strong>（true、false）</li><li><strong>空值</strong>（null）</li></ul><p>以及嵌套元素：</p><ul><li><strong><font color=blue>对象</font></strong>（object）</li><li><strong><font color=blue>数组</font></strong>（array）</li></ul><blockquote><p><strong><font color=red>一个JSON文件就是一个元素（具有任意的复杂度）。</font></strong></p></blockquote><hr><p>在JavaScript中可以直接创建JSON格式的变量。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> employees = [</span><br><span class="line">&#123; <span class="string">&quot;firstName&quot;</span>:<span class="string">&quot;Bill&quot;</span> , <span class="string">&quot;lastName&quot;</span>:<span class="string">&quot;Gates&quot;</span> &#125;,</span><br><span class="line">&#123; <span class="string">&quot;firstName&quot;</span>:<span class="string">&quot;George&quot;</span> , <span class="string">&quot;lastName&quot;</span>:<span class="string">&quot;Bush&quot;</span> &#125;,</span><br><span class="line">&#123; <span class="string">&quot;firstName&quot;</span>:<span class="string">&quot;Thomas&quot;</span> , <span class="string">&quot;lastName&quot;</span>: <span class="string">&quot;Carter&quot;</span> &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>可以像这样访问 JavaScript 对象数组中的第一项：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">employees[<span class="number">0</span>].<span class="property">lastName</span>;</span><br></pre></td></tr></table></figure><p>返回的内容是：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Gates</span></span><br></pre></td></tr></table></figure><p>可以像这样修改数据：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">employees[<span class="number">0</span>].<span class="property">lastName</span> = <span class="string">&quot;Jobs&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="对象"><a href="#对象" class="headerlink" title="对象 {}"></a>对象 <code>&#123;&#125;</code></h2><p>一个JSON对象就是一个字典，即，“键-值对”（<code>key: value</code>）。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;firstName&quot;</span><span class="punctuation">:</span><span class="string">&quot;John&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lastName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Doe&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组 []"></a>数组 <code>[]</code></h2><p>JSON 数组在方括号中书写。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;employees&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span> <span class="attr">&quot;firstName&quot;</span><span class="punctuation">:</span><span class="string">&quot;John&quot;</span> <span class="punctuation">,</span> <span class="attr">&quot;lastName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Doe&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span> <span class="attr">&quot;firstName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Anna&quot;</span> <span class="punctuation">,</span> <span class="attr">&quot;lastName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Smith&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span> <span class="attr">&quot;firstName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Peter&quot;</span> <span class="punctuation">,</span> <span class="attr">&quot;lastName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Jones&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="NPM-前端套件管理器"><a href="#NPM-前端套件管理器" class="headerlink" title="NPM 前端套件管理器"></a>NPM 前端套件管理器</h1><blockquote><p><a href="https://zhuanlan.zhihu.com/p/24357770">npm 是干什么的？（非教程）</a></p><p><a href="https://www.runoob.com/nodejs/nodejs-npm.html">NPM 使用介绍</a></p><p><a href="https://tw.alphacamp.co/blog/npm-node-package-manager">NPM是什么？了解Node Package Manager套件管理机制</a></p></blockquote><p><strong>NPM</strong>（<strong>N</strong>ode <strong>P</strong>ackage <strong>M</strong>anager），前端套件管理工具。除此之外还有类似的<strong>Yarn</strong>。</p><blockquote><p>Node.js：一种javascript的运行环境，能够使得javascript脱离浏览器运行。它是一种提供给后端服务器的技术。</p><blockquote><p><a href="https://www.zhihu.com/question/33578075/answer/57099264">Node.js是用来做什么的？ - Gavin的回答 - 知乎</a></p><p><a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1023025235359040">Node.js - 廖雪峰</a></p></blockquote></blockquote><h2 id="Package-json"><a href="#Package-json" class="headerlink" title="Package.json"></a><code>Package.json</code></h2><blockquote><p><a href="https://javascript.ruanyifeng.com/nodejs/packagejson.html">package.json文件— JavaScript 标准参考教程（alpha）</a></p></blockquote><ul><li><strong>name</strong> - 包名。</li><li><strong>version</strong> - 包的版本号。</li><li><strong>description</strong> - 包的描述。</li><li><strong>homepage</strong> - 包的官网 url 。</li><li><strong>author</strong> - 包的作者姓名。</li><li><strong>contributors</strong> - 包的其他贡献者姓名。</li><li><strong>scripts</strong> - 指定了运行脚本命令的npm命令行缩写。比如start指定了运行<code>npm run start</code>时，所要执行的命令。</li><li><strong>dependencies</strong> - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。</li><li><strong>repository</strong> - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。</li><li><strong>main</strong> - main 字段指定了程序的主入口文件，require(‘moduleName’) 就会加载这个文件。这个字段的默认值是模块根目录下面的 index.js。</li><li><strong>keywords</strong> - 关键字</li></ul><h2 id="npm-init"><a href="#npm-init" class="headerlink" title="npm init"></a><code>npm init</code></h2><p>NPM通过初始化项目来填写基本信息，并创建<code>Package.json</code>文件。</p><h2 id="npm-install"><a href="#npm-install" class="headerlink" title="npm install"></a><code>npm install</code></h2><blockquote><p><a href="http://www.ruanyifeng.com/blog/2016/01/npm-install.html">npm 模块安装机制简介</a></p></blockquote><p><code>npm install</code> 检查当前位置下的<code>package.json</code>，并根据该文件计算缺少的套件，自动更新相关的依赖。并且生成<code>node_modules</code>文件夹用于保存下载的依赖包。</p><p>安装指定模块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;Module Name&gt;</span><br></pre></td></tr></table></figure><p>安装并记录到<code>Package.json</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install express --save # 将该模块写入dependencies属性</span><br><span class="line">npm install express --save-dev # 将该模块写入devDependencies属性</span><br></pre></td></tr></table></figure><p>全局安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express -g   # 全局安装</span><br></pre></td></tr></table></figure><p>卸载：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall &lt;Module Name&gt;</span><br></pre></td></tr></table></figure><p>查看依赖树：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ls</span><br></pre></td></tr></table></figure><p>版本检查：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>升级：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install npm -g</span><br></pre></td></tr></table></figure><h2 id="npm-run-lt-scripts-gt"><a href="#npm-run-lt-scripts-gt" class="headerlink" title="npm run &lt;scripts&gt;"></a><code>npm run &lt;scripts&gt;</code></h2><p>运行<code>Package.json</code>中”scripts”属性所设置的脚本。比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run start</span><br></pre></td></tr></table></figure><h1 id="Qingqing-Share-前端"><a href="#Qingqing-Share-前端" class="headerlink" title="Qingqing Share 前端"></a>Qingqing Share 前端</h1><blockquote><p><a href="https://github.com/zouyansong/qingqingshare">https://github.com/zouyansong/qingqingshare</a> 清清共享</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zouyansong/qingqingshare</span><br></pre></td></tr></table></figure><h2 id="试运行"><a href="#试运行" class="headerlink" title="试运行"></a>试运行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install npm</span><br><span class="line"></span><br><span class="line">cd qingqingshare/</span><br><span class="line">git checkout dev</span><br><span class="line"></span><br><span class="line">cd qqshare/</span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://stackoverflow.com/questions/39311147/cannot-run-npm-commands">Cannot run NPM Commands</a></p><blockquote><p>将 <code>PATH=$(echo &quot;$PATH&quot; | sed -e &#39;s/:\/mnt.*//g&#39;) # strip out problematic Windows %PATH%</code> 添加到 <code>~/.bashrc</code>.</p></blockquote></blockquote><img data-src="/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20201213165255976.png" class="" title="try"><h1 id="Tracker服务器"><a href="#Tracker服务器" class="headerlink" title="Tracker服务器"></a>Tracker服务器</h1><blockquote><p><a href="https://lala.im/4049.html">使用OpenTracker自建高性能Tracker服务器</a></p><p><a href="http://erdgeist.org/arts/software/opentracker/">OpenTracker</a></p></blockquote><h1 id="资源服务器"><a href="#资源服务器" class="headerlink" title="资源服务器"></a>资源服务器</h1><blockquote><p><a href="https://zhuanlan.zhihu.com/p/35318041">Python实现简单的web服务器</a></p><p><a href="https://www.mkshell.com/how-to-build-web-server-python/"><strong>由浅入深 | 如何一步步地搭建一个Web服务器</strong></a></p></blockquote><h1 id="数据库服务器"><a href="#数据库服务器" class="headerlink" title="数据库服务器"></a>数据库服务器</h1><blockquote><p><a href="https://luoxin1992.github.io/2017/01/01/install-mysql-server/"><strong>搭建MySQL服务器</strong></a></p><p><a href="https://www.runoob.com/mysql/mysql-tutorial.html">MySQL 教程</a></p></blockquote><h2 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h2><p>检查本地环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br><span class="line"><span class="comment"># sudo apt install rpm</span></span><br></pre></td></tr></table></figure><p>获取Mysql：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget http://dev.mysql.com/get/mysql-apt-config_0.8.1-1_all.deb</span><br></pre></td></tr></table></figure><p>安装软件包：（<a href="https://man.linuxde.net/dpkg">dpkg « Linux命令大全</a>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i mysql-apt-config_0.8.1-1_all.deb</span><br></pre></td></tr></table></figure><blockquote><p>安装mysql-server，选择5.7的稳定版本</p></blockquote><p>更新软件源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>安装mysql-server：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mysql-server</span><br></pre></td></tr></table></figure><blockquote><p>设置数据库root用户的密码</p></blockquote><h2 id="MySQL服务管理"><a href="#MySQL服务管理" class="headerlink" title="MySQL服务管理"></a>MySQL服务管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动mysql服务</span></span><br><span class="line">service mysql start</span><br><span class="line"><span class="comment"># 停止mysql服务</span></span><br><span class="line">service mysql stop</span><br><span class="line"><span class="comment"># 查看mysql服务当前状态</span></span><br><span class="line">service mysql status</span><br></pre></td></tr></table></figure><img data-src="/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20201213212736992.png" class="" title="MySQL status"><blockquote><p>mysql默认监听3306端口</p></blockquote><h2 id="MySQL登录"><a href="#MySQL登录" class="headerlink" title="MySQL登录"></a>MySQL登录</h2><p>以root用户进行登录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><blockquote><p>然后输入密码</p></blockquote><p>查看用户列表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">User</span>, Host, plugin <span class="keyword">FROM</span> mysql.user;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost">https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost</a> 初次安装后无法登录的处理</p></blockquote><p>管理员强制登陆：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql -u root <span class="comment"># I had to use &quot;sudo&quot; since is new installation</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://stackoverflow.com/questions/50093144/mysql-8-0-client-does-not-support-authentication-protocol-requested-by-server">https://stackoverflow.com/questions/50093144/mysql-8-0-client-does-not-support-authentication-protocol-requested-by-server</a> JavaSccript mysql连接数据库失败的处理</p></blockquote><h3 id="用户生成"><a href="#用户生成" class="headerlink" title="用户生成"></a>用户生成</h3><blockquote><p><a href="https://www.runoob.com/mysql/mysql-administration.html">MySQL 管理 </a> 新版MySQL不再支持直接向user表中添加用户。需要使用<code>CREATE USER</code>声明。</p><p><a href="https://www.yiibai.com/mysql/create-user.html"><strong>MySQL中的用户帐户简介</strong></a></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> username<span class="variable">@hostname</span> IDENTIFIED <span class="keyword">BY</span> password;</span><br></pre></td></tr></table></figure><p>例如：下面这个用户只允许从<code>localhost</code>主机并使用密码为<code>guest233</code>连接到MySQL数据库服务器。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> guest<span class="variable">@localhost</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;guest233&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p><code>@localhost</code>相当于访问地址的约束。</p><p><a href="https://stackoverflow.com/questions/30692812/mysql-user-db-does-not-have-password-columns-installing-mysql-on-osx">MySQL user DB does not have password columns - Installing MySQL on OSX </a><code>mysql&gt; describe user;</code></p></blockquote><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><blockquote><p><a href="https://www.yiibai.com/mysql/grant.html">MySQL GRANT语句简介</a></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> privilege,[privilege],.. <span class="keyword">ON</span> privilege_level </span><br><span class="line"><span class="keyword">TO</span> <span class="keyword">user</span> [IDENTIFIED <span class="keyword">BY</span> password]</span><br><span class="line">[REQUIRE tsl_option]</span><br><span class="line">[<span class="keyword">WITH</span> [GRANT_OPTION <span class="operator">|</span> resource_option]];</span><br></pre></td></tr></table></figure><p>赋予<code>auditor</code>在某个数据库上的所有权限：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> somedb.<span class="operator">*</span> <span class="keyword">TO</span> auditor<span class="variable">@localhost</span>;</span><br></pre></td></tr></table></figure><h2 id="创建数据库和表单"><a href="#创建数据库和表单" class="headerlink" title="创建数据库和表单"></a>创建数据库和表单</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE qqshare;</span><br><span class="line">use qqshare;</span><br></pre></td></tr></table></figure><p>创建<code>qqshare_info</code>数据表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> qqshare_info(</span><br><span class="line">   filename <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   course <span class="type">VARCHAR</span>(<span class="number">60</span>),</span><br><span class="line">   teacher <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">   downloadtime <span class="type">INT</span>,</span><br><span class="line">   filesize <span class="type">INT</span>,</span><br><span class="line">   uploadtime <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">   fileformat <span class="type">VARCHAR</span>(<span class="number">25</span>),</span><br><span class="line">   magnetURI <span class="type">VARCHAR</span>(<span class="number">700</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   description <span class="type">VARCHAR</span>(<span class="number">200</span>),</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY ( magnetURI )</span><br><span class="line">) <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><p>创建<code>user_info</code>数据表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> user_info(</span><br><span class="line">   id <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   password <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;Anonymous&#x27;</span>,</span><br><span class="line">   downloadrecord <span class="type">VARCHAR</span>(<span class="number">10000</span>),</span><br><span class="line">   uploadrecord <span class="type">VARCHAR</span>(<span class="number">10000</span>),</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY ( id )</span><br><span class="line">) <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> qqshare_info;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> user_info;</span><br></pre></td></tr></table></figure><h3 id="查看数据表"><a href="#查看数据表" class="headerlink" title="查看数据表"></a>查看数据表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"></span><br><span class="line"><span class="keyword">desc</span> qqshare_info;</span><br><span class="line"><span class="keyword">desc</span> user_info;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+-------------------+</span><br><span class="line">| Tables_in_qqshare |</span><br><span class="line">+-------------------+</span><br><span class="line">| qqshare_info      |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( field1, field2,...fieldN )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( value1, value2,...valueN );</span><br></pre></td></tr></table></figure><p>清洗测试：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">use qqshare;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> qqshare_info;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> user_info;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> qqshare_info(</span><br><span class="line">   filename <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   course <span class="type">VARCHAR</span>(<span class="number">60</span>),</span><br><span class="line">   teacher <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">   downloadtime <span class="type">INT</span>,</span><br><span class="line">   filesize <span class="type">INT</span>,</span><br><span class="line">   uploadtime <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">   fileformat <span class="type">VARCHAR</span>(<span class="number">25</span>),</span><br><span class="line">   magnetURI <span class="type">VARCHAR</span>(<span class="number">700</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   description <span class="type">VARCHAR</span>(<span class="number">200</span>),</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY ( magnetURI )</span><br><span class="line">) <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> user_info(</span><br><span class="line">   id <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   password <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;Anonymous&#x27;</span>,</span><br><span class="line">   downloadrecord <span class="type">VARCHAR</span>(<span class="number">10000</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">   uploadrecord <span class="type">VARCHAR</span>(<span class="number">10000</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY ( id )</span><br><span class="line">) <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime,filesize)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;Sintel&quot;, &quot;组合数学&quot;, &quot;马昱春&quot;, &quot;.docx&quot;, &quot;magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&amp;dn=Sintel&amp;tr=udp%3A%2F%2Fexplodie.org%3A6969&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&amp;tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&amp;tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&amp;tr=wss%3A%2F%2Ftracker.btorrent.xyz&amp;tr=wss%3A%2F%2Ftracker.fastcast.nz&amp;tr=wss%3A%2F%2Ftracker.openwebtorrent.com&amp;ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&amp;xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent&quot;,<span class="number">3</span>,&quot;这课真的难&quot;,&quot;2020-12-01&quot;,<span class="number">124923</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime,filesize)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;组合数学2017期末A2我觉得很无聊&quot;, &quot;组合数学&quot;, &quot;马昱春&quot;, &quot;.pdf&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bba25559dc9f519b345aa7c1367a88a&quot;,<span class="number">10</span>,&quot;太难了~~&quot;,&quot;2020-10-01&quot;,<span class="number">845634</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;微积分A2020期末答案&quot;, &quot;微积分A&quot;, &quot;苏爷爷&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bba25559dc9f519b345aa7c1361288a&quot;,<span class="number">17</span>,&quot;平均分90分&quot;,&quot;2019-12-01&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;毛概展示PPT&quot;, &quot;毛概&quot;, &quot;Unknown&quot;, &quot;.ppt&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bba25559dc9f515a345aa7c1367a88a&quot;,<span class="number">103</span>,&quot;参考看看吧&quot;,&quot;2020-11-09&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;高等计算机网络项目3&quot;, &quot;高等计算机网络&quot;, &quot;徐恪&quot;, &quot;.pdf&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bba25559dc9f519b345aa7c1361188a&quot;,<span class="number">10</span>,&quot;zys永远滴神&quot;,&quot;2020-12-01&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;高等计算机网络项目1&quot;, &quot;高等计算机网络&quot;, &quot;徐恪&quot;, &quot;.pdf&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bba25559dc9f519b345aa7c1362188a&quot;,<span class="number">10</span>,&quot;wxh永远滴神&quot;,&quot;2020-12-03&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;高等计算机网络项目2&quot;, &quot;高等计算机网络&quot;, &quot;徐恪&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bga25559dc9f519b345aa7c1362180a&quot;,<span class="number">11</span>,&quot;tql&quot;,&quot;2020-12-02&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;复变函数期末总结&quot;, &quot;复变函数&quot;, &quot;YY&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bga25559dc9f519b345aa7c1362187a&quot;,<span class="number">111</span>,&quot;背出来你就不会挂了，拜杨幂是没用的&quot;,&quot;2020-12-04&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;硕士生英语Schedule&quot;, &quot;硕士生英语&quot;, &quot;Kam&quot;, &quot;.pdf&quot;, &quot;magnet:?xt=urn:btih:c12fe8c06bga25559dc9f519b345aa7c1362182a&quot;,<span class="number">1</span>,&quot;学英语~~&quot;,&quot;2020-12-02&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime,filesize)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;离散数学A课件&quot;, &quot;离散数学&quot;, &quot;ZYSyyds!&quot;, &quot;.ppt&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bga25559dc9f519b345aa1c1362182a&quot;,<span class="number">121</span>,&quot;数理逻辑与集合论&quot;,&quot;2020-12-09&quot;,<span class="number">3145134</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;操作系统2020年期中A卷&quot;, &quot;操作系统&quot;, &quot;ABC&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bga25559dc9f519b345aa7c1362982a&quot;,<span class="number">61</span>,&quot;送分题&quot;,&quot;2020-10-01&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;人工智能导论大作业&quot;, &quot;人工智能&quot;, &quot;马少平&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:a12fe1c06bga25553dc9f519b345aa7c1362182a&quot;,<span class="number">51</span>,&quot;四子棋的AI算法&quot;,&quot;2020-12-14&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;线性代数2018年秋&quot;, &quot;线性代数&quot;, &quot;XD&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:c32fe1c06bga25559dc9f519b345aa7c1362182a&quot;,<span class="number">81</span>,&quot;好多人挂科&quot;,&quot;2020-12-16&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;高等计算机网络项目5&quot;, &quot;高等计算机网络&quot;, &quot;徐恪&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:a12fe1c06bba2g559dc9f519b345aa7c1362180a&quot;,<span class="number">11</span>,&quot;永远滴神&quot;,&quot;2020-12-06&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;数电A4小抄&quot;, &quot;数字电路&quot;, &quot;XX&quot;, &quot;.pdf&quot;, &quot;magnet:?xt=urn:btih:cg2fe1c06bba25559dc9f519b345aa7c1362180a&quot;,<span class="number">71</span>,&quot;要带放大镜去看&quot;,&quot;2020-12-05&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;高等计算机网络课件&quot;, &quot;高等计算机网络&quot;, &quot;徐恪&quot;, &quot;.pptx&quot;, &quot;magnet:?xt=urn:btih:cg2fe1c06bba15559dc9f519b345aa7c1362180a&quot;,<span class="number">9</span>,&quot;看不懂又能怎么办呢QAQ&quot;,&quot;2020-12-11&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;自然辨证法作业&quot;, &quot;自然辨证法&quot;, &quot;XX&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:cg2fe1c06bba25559dc9f549b345aa7c1362180a&quot;,<span class="number">23</span>,&quot;4000字以上，太卷了吧&quot;,&quot;2020-11-05&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;高等计算机网络报告&quot;, &quot;高等计算机网络&quot;, &quot;徐恪&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:cg2fe1c06bba25559dd9f519b345aa7c1362180a&quot;,<span class="number">14</span>,&quot;做一个项目花挺多时间&quot;,&quot;2020-12-08&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;深入浅出统计学&quot;, &quot;统计学原理&quot;, &quot;Mr.H&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:cg2fe1c06bba25559dc9f619b345aa2c1362180a&quot;,<span class="number">7</span>,&quot;统计学是AI的基础啊&quot;,&quot;2020-12-09&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;疯狂学英语&quot;, &quot;大学英语&quot;, &quot;超神&quot;, &quot;.zip&quot;, &quot;magnet:?xt=urn:btih:cg2fe1c06bba255594c9f119b345aa7c1362190a&quot;,<span class="number">8</span>,&quot;英语咋学&quot;,&quot;2020-12-10&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;测试文件&quot;, &quot;测试&quot;, &quot;测&quot;, &quot;.test&quot;, &quot;magnet:?fake&quot;,<span class="number">7</span>,&quot;测试~~~&quot;,&quot;2020-12-01&quot; );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> qqshare_info ( filename,course,teacher,fileformat,magnetURI,downloadtime ,description,uploadtime)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;测试文件2&quot;, &quot;测试2&quot;, &quot;测2&quot;, &quot;.test2&quot;, &quot;magnet:?fake2&quot;,<span class="number">5</span>,&quot;测试2~~~&quot;,&quot;2020-12-02&quot; );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> user_info ( id,password,name )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;2020210942&quot;,&quot;123456&quot;,&quot;zouyansong&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> user_info ( id,password,name,downloadrecord )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;2020210041&quot;,&quot;654321&quot;,&quot;shenxi&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bga25559dc9f519b345aa7c1362180a&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> user_info ( id,password,name,downloadrecord,uploadrecord )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;2020000000&quot;,&quot;123456&quot;,&quot;robot&quot;, &quot;,magnet:?xt=urn:btih:c12fe1c06bga25559dc9f519b345aa7c1362180a,magnet:?xt=urn:btih:cg2fe1c06bba25559dc9f549b345aa7c1362180a,magnet:?xt=urn:btih:c32fe1c06bga25559dc9f519b345aa7c1362182a&quot;, &quot;magnet:?xt=urn:btih:c12fe1c06bba25559dc9f519b345aa7c1361288a&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> user_info ( id,password,name,downloadrecord,uploadrecord )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;123&quot;,&quot;123&quot;,&quot;test123&quot;,&quot;magnet:?xt=urn:btih:cg2fe1c06bba255594c9f119b345aa7c1362190a&quot;, &quot;,magnet:?xt=urn:btih:c12fe1c06bba25559dc9f519b345aa7c1367a88a,magnet:?xt=urn:btih:c12fe1c06bba25559dc9f519b335aa7c1367a88a&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> user_info ( id,password,name,downloadrecord,uploadrecord )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;321&quot;,&quot;321&quot;,&quot;test321&quot;,&quot;magnet:?fake,magnet:?fake2&quot;, &quot;&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> user_info ( id,password,name,downloadrecord,uploadrecord )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( &quot;912&quot;,&quot;912&quot;,&quot;test912&quot;,&quot;magnet:?fake2&quot;, &quot;magnet:?fake2,magnet:?fake&quot; );</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> user_info;</span><br></pre></td></tr></table></figure><h3 id="查看数据项"><a href="#查看数据项" class="headerlink" title="查看数据项"></a>查看数据项</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> qqshare_info;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> user_info;</span><br></pre></td></tr></table></figure><img data-src="/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20201213220909171.png" class="" title="查看数据项"><h1 id="搜索初探"><a href="#搜索初探" class="headerlink" title="搜索初探"></a>搜索初探</h1><blockquote><p><a href="https://blog.csdn.net/geerniya/article/details/79025405">django学习——如何实现简单的搜索功能</a></p></blockquote><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><p>用SQL查询代替搜索。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> qqshare_info</span><br><span class="line"><span class="keyword">WHERE</span> filename REGEXP &quot;组合数学&quot; <span class="keyword">OR</span> course REGEXP &quot;组合数学&quot; <span class="keyword">OR</span> teacher REGEXP &quot;马昱春&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> filename, course, teacher</span><br><span class="line"><span class="keyword">FROM</span> qqshare_info</span><br><span class="line"><span class="keyword">WHERE</span> filename REGEXP &quot;组合数学&quot; <span class="keyword">OR</span> course REGEXP &quot;组合数学&quot; <span class="keyword">OR</span> teacher REGEXP &quot;马昱春&quot;;</span><br></pre></td></tr></table></figure><h2 id="Local种子匹配"><a href="#Local种子匹配" class="headerlink" title="Local种子匹配"></a>Local种子匹配</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> torrent_parser</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    HOST, PORT = <span class="string">&#x27;&#x27;</span>, <span class="number">8888</span></span><br><span class="line"></span><br><span class="line">    listen_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    listen_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">    listen_socket.bind((HOST, PORT))</span><br><span class="line">    listen_socket.listen(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Serving HTTP on port %s ...&#x27;</span> % PORT)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        client_connection, client_address = listen_socket.accept()</span><br><span class="line">        request = client_connection.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="comment">#print(request.decode(&quot;utf-8&quot;))</span></span><br><span class="line"></span><br><span class="line">        http_response = <span class="string">&quot;&quot;&quot;\</span></span><br><span class="line"><span class="string">    HTTP/1.1 200 OK</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">        http_response += json_search_result_file</span><br><span class="line">        client_connection.sendall(http_response.encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">        client_connection.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">search</span>(<span class="params">keyword</span>):</span><br><span class="line">    torrent_path = <span class="string">&quot;./torrents/&quot;</span></span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line">    torrent_list = os.listdir(torrent_path)</span><br><span class="line">    <span class="keyword">for</span> torrent_file_name <span class="keyword">in</span> torrent_list:</span><br><span class="line">        torrent_parser.parse_torrent_file(torrent_file_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h1 id="Node-Express-后端"><a href="#Node-Express-后端" class="headerlink" title="Node Express 后端"></a>Node Express 后端</h1><blockquote><p><a href="https://www.runoob.com/nodejs/nodejs-express-framework.html">Node.js Express 框架</a></p><p><a href="https://www.npmjs.com/package/express">https://www.npmjs.com/package/express</a></p><p><a href="https://expressjs.com/en/5x/api.html#req">https://expressjs.com/en/5x/api.html#req</a></p></blockquote><h2 id="Node项目配置"><a href="#Node项目配置" class="headerlink" title="Node项目配置"></a>Node项目配置</h2><p>检查Node版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>测试JS程序<code>server.js</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"></span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">function</span> (<span class="params">request, response</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送 HTTP 头部 </span></span><br><span class="line">    <span class="comment">// HTTP 状态值: 200 : OK</span></span><br><span class="line">    <span class="comment">// 内容类型: text/plain</span></span><br><span class="line">    response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送响应数据 &quot;Hello World&quot;</span></span><br><span class="line">    response.<span class="title function_">end</span>(<span class="string">&#x27;Hello World\n&#x27;</span>);</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8880</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 终端打印如下信息</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Server running at http://localhost:8880/&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>运行测试程序</strong><code>server.js</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node server.js</span><br></pre></td></tr></table></figure><p>访问<code>http://localhost:8880/</code>即可得到结果。页面返回<code>&#39;Hello World\n&#39;</code>。</p><p>在测试完成之后按<code>Ctrl C</code>退出程序，<code>Ctrl Z</code>只是退出界面，会导致程序继续运行，端口号被占用。</p><blockquote><p><a href="http://nodejs.cn/learn/nodejs-accept-arguments-from-the-command-line">Node.js 从命令行接收参数</a></p></blockquote><h3 id="Express风格"><a href="#Express风格" class="headerlink" title="Express风格"></a>Express风格</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//express_demo.js 文件</span></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   res.<span class="title function_">send</span>(<span class="string">&#x27;Hello World&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">8081</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line"> </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;应用实例，访问地址为 http://%s:%s&quot;</span>, host, port)</span><br><span class="line"> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>访问<code>http://localhost:8081/</code>得到结果。页面返回<code>&#39;Hello World&#39;</code>。</p><h2 id="服务器设计"><a href="#服务器设计" class="headerlink" title="服务器设计"></a>服务器设计</h2><blockquote><p><a href="https://github.com/stellarkey/server_engine">https://github.com/stellarkey/server_engine</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试查询链接：</span></span><br><span class="line"><span class="comment">// http://localhost:8081/api/search?filename=%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6&amp;course=%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6&amp;teacher=%E9%A9%AC%E6%98%B1%E6%98%A5</span></span><br><span class="line"><span class="comment">// 测试插入链接：（自行）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 命令行：node server.js --port=8023  可自定义端口</span></span><br><span class="line"><span class="keyword">const</span> args = <span class="built_in">require</span>(<span class="string">&#x27;minimist&#x27;</span>)(process.<span class="property">argv</span>.<span class="title function_">slice</span>(<span class="number">2</span>));</span><br><span class="line"><span class="keyword">var</span> port_number= args[<span class="string">&#x27;port&#x27;</span>] ? args[<span class="string">&#x27;port&#x27;</span>] : <span class="number">8081</span>; <span class="comment">// 端口号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/api/uservalid&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;/api/uservalid&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> postData = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&quot;data&quot;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">    postData = postData + chunk;</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    postData = querystring.<span class="title function_">parse</span>(postData);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;postData:&#x27;</span>, postData);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> post_id = postData.<span class="property">id</span>;</span><br><span class="line">    <span class="keyword">var</span> post_pwd = postData.<span class="property">pwd</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> mysql      = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">      host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">      user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">      password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">      database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> SQL_query = <span class="string">&#x27;SELECT id,password,name FROM user_info WHERE id=\&#x27;&#x27;</span> + post_id + <span class="string">&#x27;\&#x27;;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">query</span>(SQL_query,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;----------------------SELECT------------------------&#x27;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SQL_query:&quot;</span>, SQL_query);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;result:&quot;</span>, result);</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span>(result.<span class="property">length</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;用户存在&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (result[<span class="number">0</span>][<span class="string">&#x27;password&#x27;</span>] == <span class="title class_">Number</span>(postData[<span class="string">&#x27;pwd&#x27;</span>]))&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;密码正确&quot;</span>);</span><br><span class="line">          resData = &#123;<span class="attr">flag</span>:<span class="number">1</span>,<span class="attr">name</span>:result[<span class="number">0</span>][<span class="string">&#x27;name&#x27;</span>]&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">          resData = &#123;<span class="attr">flag</span>:<span class="number">2</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;resData:&quot;</span>, resData);</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;用户不存在&quot;</span>);</span><br><span class="line">        resData = &#123;<span class="attr">flag</span>:<span class="number">3</span>&#125;;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    connection.<span class="title function_">end</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/hotfile&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;/api/hotfile&#x27;</span>);</span><br><span class="line">  <span class="comment">// 暂时设计为选择【所有时间中下载量最高的10个文件】</span></span><br><span class="line">  <span class="comment">// 如果需要获得近期的热门文件，可能需要维护一个定期更新的下载量数组，然后循环更新，暂时搁置</span></span><br><span class="line">  <span class="keyword">var</span> mysql      = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">    host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> SQL_query = <span class="string">&#x27;SELECT filename,description FROM qqshare_info ORDER BY downloadtime DESC LIMIT 10;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  connection.<span class="title function_">query</span>(SQL_query, <span class="keyword">function</span> (<span class="params">err, results, fields</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">      resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(results));</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(results));</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  connection.<span class="title function_">end</span>();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/search&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;/api/search&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;req.query: &quot;</span>, req.<span class="property">query</span>);</span><br><span class="line">  <span class="comment">//console.log(req.query.filename);</span></span><br><span class="line">  <span class="comment">//res.send(req.query.filename);</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> mysql      = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">    host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> filename_filter = req.<span class="property">query</span>.<span class="property">filename</span> ? req.<span class="property">query</span>.<span class="property">filename</span> : <span class="string">&quot; &quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> course_filter = req.<span class="property">query</span>.<span class="property">course</span> ? req.<span class="property">query</span>.<span class="property">course</span> : <span class="string">&quot; &quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> teacher_filter = req.<span class="property">query</span>.<span class="property">teacher</span> ? req.<span class="property">query</span>.<span class="property">teacher</span> : <span class="string">&quot; &quot;</span>;</span><br><span class="line">  <span class="comment">// if it&#x27;s empty, then use: &quot; &quot; (with a space)</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> SQL_query = <span class="string">&#x27;SELECT * FROM qqshare_info WHERE filename REGEXP &quot;&#x27;</span></span><br><span class="line">              + filename_filter </span><br><span class="line">              + <span class="string">&#x27;&quot; OR course REGEXP &quot;&#x27;</span> </span><br><span class="line">              + course_filter </span><br><span class="line">              + <span class="string">&#x27;&quot; OR teacher REGEXP &quot;&#x27;</span></span><br><span class="line">              + teacher_filter</span><br><span class="line">              + <span class="string">&#x27;&quot;;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  connection.<span class="title function_">query</span>(SQL_query, <span class="keyword">function</span> (<span class="params">err, results, fields</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">      resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//console.log(results);</span></span><br><span class="line">    <span class="comment">//console.log(&#x27;The solution is: &#x27;, results[0].filename);</span></span><br><span class="line">    </span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(results));</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(results));</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  connection.<span class="title function_">end</span>();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/api/upload&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;/api/upload&#x27;</span>);</span><br><span class="line">  <span class="comment">// magnetURI中有特殊字符，可能需要转义：</span></span><br><span class="line">  <span class="comment">// https://segmentfault.com/a/1190000009492789</span></span><br><span class="line">  <span class="keyword">var</span> postData = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&quot;data&quot;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">    postData = postData + chunk;</span><br><span class="line">  &#125;);</span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    postData = querystring.<span class="title function_">parse</span>(postData);</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;postData:&#x27;</span>,postData);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在文件数据表中加入该文件</span></span><br><span class="line">    <span class="keyword">var</span> filename = postData.<span class="property">filename</span>;</span><br><span class="line">    <span class="keyword">var</span> course = postData.<span class="property">course</span>;</span><br><span class="line">    <span class="keyword">var</span> teacher = postData.<span class="property">teacher</span>;</span><br><span class="line">    <span class="keyword">var</span> downloadtime = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> filesize = postData.<span class="property">filesize</span>;</span><br><span class="line">    <span class="keyword">var</span> uploadtime = <span class="title function_">getCurrDate</span>();</span><br><span class="line">    <span class="keyword">var</span> fileformat = postData.<span class="property">fileformat</span>;</span><br><span class="line">    <span class="keyword">var</span> description = postData.<span class="property">description</span>;</span><br><span class="line">    <span class="keyword">var</span> magnetURI = postData.<span class="property">magnetURI</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------------------&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;magnetURI.length&quot;</span>, magnetURI.<span class="property">length</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> mysql      = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">      host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">      user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">      password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">      database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> addSql = <span class="string">&#x27;INSERT INTO qqshare_info (filename,course,teacher,downloadtime,filesize,uploadtime,fileformat,description,magnetURI) VALUES(?,?,?,?,?,?,?,?,\&#x27;&#x27;</span></span><br><span class="line">            + magnetURI +<span class="string">&#x27;\&#x27;)&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> addSqlParams = [filename,course,teacher,downloadtime,filesize,uploadtime,fileformat,description];</span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">query</span>(addSql,addSqlParams,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[INSERT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------INSERT----------------&#x27;</span>);</span><br><span class="line">      <span class="comment">//console.log(&#x27;INSERT ID:&#x27;,result.insertId);        </span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;INSERT ID:&#x27;</span>,result);        </span><br><span class="line">      </span><br><span class="line">      <span class="comment">// resData = &#123;flag: 1&#125;;</span></span><br><span class="line">      <span class="comment">// res.setHeader(&quot;Content-Type&quot;, &quot;application/json&quot;);</span></span><br><span class="line">      <span class="comment">// res.end(JSON.stringify(resData));</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// connection.query(&quot;SELECT * FROM qqshare_info;&quot;,function (err, result) &#123;</span></span><br><span class="line">    <span class="comment">//   if(err)&#123;</span></span><br><span class="line">    <span class="comment">//     console.log(&#x27;[SELECT ERROR] - &#x27;,err.message);</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">//   &#125;</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在用户数据表中更新用户的历史上传记录</span></span><br><span class="line">    <span class="comment">// 为避免多次重传，这部分放在后，只有在成功插入文件数据库后才可能执行</span></span><br><span class="line">    <span class="keyword">var</span> id = postData.<span class="property">id</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// UPDATE user_info SET uploadrecord=concat(uploadrecord,&#x27;,magnet:?fake&#x27;) WHERE id=&#x27;123&#x27;;</span></span><br><span class="line">    <span class="keyword">var</span> SQL_query = <span class="string">&#x27;UPDATE user_info SET uploadrecord=concat(uploadrecord,\&#x27;,&#x27;</span></span><br><span class="line">              + magnetURI</span><br><span class="line">              + <span class="string">&#x27;\&#x27;) WHERE id=\&#x27;&#x27;</span></span><br><span class="line">              + id</span><br><span class="line">              + <span class="string">&#x27;\&#x27;;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;SQL:&#x27;</span>, SQL_query);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">query</span>(SQL_query,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[UPDATE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------UPDATE----------------------------&#x27;</span>);    </span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;SQL:&#x27;</span>, SQL_query);</span><br><span class="line">      resData = &#123;<span class="attr">flag</span>: <span class="number">1</span>&#125;;</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    connection.<span class="title function_">end</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/uploadrecord&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;/api/uploadrecord&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;req.query: &quot;</span>, req.<span class="property">query</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(req.<span class="property">query</span>.<span class="property">id</span> == <span class="string">&#x27;&#x27;</span>)&#123;   <span class="comment">// 空查询处理</span></span><br><span class="line">    resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;查询为空，失败。&quot;</span>);</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> mysql      = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> connection1 = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">    host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  connection1.<span class="title function_">connect</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> SQL_query1 = <span class="string">&#x27;SELECT uploadrecord FROM user_info WHERE id=\&#x27;&#x27;</span></span><br><span class="line">              + req.<span class="property">query</span>.<span class="property">id</span> + <span class="string">&#x27;\&#x27;;&#x27;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SQL_query1:&quot;</span>, SQL_query1);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> uploadrecord = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  connection1.<span class="title function_">query</span>(SQL_query1, <span class="keyword">function</span> (<span class="params">err, results, fields</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">      resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;results: &quot;</span>, results);</span><br><span class="line">    </span><br><span class="line">    uploadrecord = results[<span class="number">0</span>].<span class="property">uploadrecord</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;uploadrecord: &quot;</span>, uploadrecord);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(uploadrecord == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">      <span class="comment">// 当没有下载过文件时返回[]</span></span><br><span class="line">      resData = [];</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> connection2 = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">      host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">      user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">      password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">      database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    connection2.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> upload_magnet_list = uploadrecord.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">el</span>) &#123; <span class="keyword">return</span> el != <span class="string">&#x27;&#x27;</span>; &#125;);    <span class="comment">// 清洗</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;upload_magnet_list: &quot;</span>, upload_magnet_list);</span><br><span class="line"></span><br><span class="line">    upload_magnet_list = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(upload_magnet_list).<span class="title function_">replace</span>(<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;(&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;)&#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/\&quot;/g</span>,<span class="string">&#x27;\&#x27;&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;upload_magnet_list(after modify): &quot;</span>, upload_magnet_list);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> SQL_query2 = <span class="string">&#x27;SELECT filename,downloadtime,uploadtime FROM qqshare_info WHERE magnetURI IN &#x27;</span></span><br><span class="line">                    + upload_magnet_list + <span class="string">&#x27;;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SQL_query2:&quot;</span>, SQL_query2);</span><br><span class="line"></span><br><span class="line">    connection2.<span class="title function_">query</span>(SQL_query2, <span class="keyword">function</span> (<span class="params">err, results, fields</span>) &#123; </span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(results));</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(results));</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    connection2.<span class="title function_">end</span>();</span><br><span class="line">    </span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  connection1.<span class="title function_">end</span>();</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/api/download&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;/api/download&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> postData = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&quot;data&quot;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">    postData = postData + chunk;</span><br><span class="line">  &#125;);</span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    postData = querystring.<span class="title function_">parse</span>(postData);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;postData:&#x27;</span>, postData);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在文件数据表给该文件的downloadtime加一</span></span><br><span class="line">    <span class="keyword">var</span> magnetURI = postData.<span class="property">magnetURI</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;magnetURI:&quot;</span>, magnetURI);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> mysql      = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">      host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">      user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">      password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">      database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> SQL_query = <span class="string">&#x27;UPDATE qqshare_info SET downloadtime=downloadtime+1 WHERE magnetURI=\&#x27;&#x27;</span></span><br><span class="line">                + magnetURI + <span class="string">&#x27;\&#x27;;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;SQL:&#x27;</span>, SQL_query);</span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">query</span>(SQL_query,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[UPDATE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;----------------UPDATE1----------------&#x27;</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;SQL:&#x27;</span>, SQL_query);</span><br><span class="line">      <span class="comment">// resData = &#123;flag: 1&#125;;</span></span><br><span class="line">      <span class="comment">// res.setHeader(&quot;Content-Type&quot;, &quot;application/json&quot;);</span></span><br><span class="line">      <span class="comment">// res.end(JSON.stringify(resData));</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在用户数据表中把该文件的加入到用户的历史下载记录中</span></span><br><span class="line">    <span class="keyword">var</span> id = postData.<span class="property">id</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;id:&quot;</span>, id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// UPDATE user_info SET downloadrecord=concat(downloadrecord,&#x27;,magnet:?fake&#x27;) WHERE id=&#x27;123&#x27;;</span></span><br><span class="line">    <span class="keyword">var</span> SQL_query = <span class="string">&#x27;UPDATE user_info SET downloadrecord=concat(downloadrecord,\&#x27;,&#x27;</span></span><br><span class="line">              + magnetURI</span><br><span class="line">              + <span class="string">&#x27;\&#x27;) WHERE id=\&#x27;&#x27;</span></span><br><span class="line">              + id</span><br><span class="line">              + <span class="string">&#x27;\&#x27;;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;SQL:&#x27;</span>, SQL_query);</span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">query</span>(SQL_query,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[UPDATE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;----------------UPDATE2----------------&#x27;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;SQL:&#x27;</span>, SQL_query);</span><br><span class="line">      resData = &#123;<span class="attr">flag</span>: <span class="number">1</span>&#125;;</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">end</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/downloadrecord&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;/api/downloadrecord&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;req.query: &quot;</span>, req.<span class="property">query</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(req.<span class="property">query</span>.<span class="property">id</span> == <span class="string">&#x27;&#x27;</span>)&#123;   <span class="comment">// 空查询处理</span></span><br><span class="line">    resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;查询为空，失败。&quot;</span>);</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> mysql      = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> connection1 = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">    host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  connection1.<span class="title function_">connect</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> SQL_query1 = <span class="string">&#x27;SELECT downloadrecord FROM user_info WHERE id=\&#x27;&#x27;</span></span><br><span class="line">              + req.<span class="property">query</span>.<span class="property">id</span> + <span class="string">&#x27;\&#x27;;&#x27;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SQL_query1:&quot;</span>, SQL_query1);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> downloadrecord = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  connection1.<span class="title function_">query</span>(SQL_query1, <span class="keyword">function</span> (<span class="params">err, results, fields</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">      resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;results: &quot;</span>, results);</span><br><span class="line">    </span><br><span class="line">    downloadrecord = results[<span class="number">0</span>].<span class="property">downloadrecord</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;downloadrecord: &quot;</span>, downloadrecord);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(downloadrecord == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">      <span class="comment">// 当没有下载过文件时返回[]</span></span><br><span class="line">      resData = [];</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> connection2 = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">      host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">      user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">      password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">      database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    connection2.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> download_magnet_list = downloadrecord.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">el</span>) &#123; <span class="keyword">return</span> el != <span class="string">&#x27;&#x27;</span>; &#125;);    <span class="comment">// 清洗</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;download_magnet_list: &quot;</span>, download_magnet_list);</span><br><span class="line"></span><br><span class="line">    download_magnet_list = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(download_magnet_list).<span class="title function_">replace</span>(<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;(&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;)&#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/\&quot;/g</span>,<span class="string">&#x27;\&#x27;&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;download_magnet_list(after modify): &quot;</span>, download_magnet_list);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> SQL_query2 = <span class="string">&#x27;SELECT filename,downloadtime,uploadtime FROM qqshare_info WHERE magnetURI IN &#x27;</span></span><br><span class="line">                    + download_magnet_list + <span class="string">&#x27;;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SQL_query2:&quot;</span>, SQL_query2);</span><br><span class="line"></span><br><span class="line">    connection2.<span class="title function_">query</span>(SQL_query2, <span class="keyword">function</span> (<span class="params">err, results, fields</span>) &#123; </span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(results));</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(results));</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    connection2.<span class="title function_">end</span>();</span><br><span class="line">    </span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  connection1.<span class="title function_">end</span>();</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/api/changename&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;/api/changename&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> postData = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&quot;data&quot;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">    postData = postData + chunk;</span><br><span class="line">  &#125;);</span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    postData = querystring.<span class="title function_">parse</span>(postData);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> id = postData.<span class="property">id</span>;</span><br><span class="line">    <span class="keyword">var</span> newname = postData.<span class="property">newname</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> mysql      = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">      host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">      user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">      password : <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">      database : <span class="string">&#x27;qqshare&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> SQL_query = <span class="string">&#x27;UPDATE user_info SET name=\&#x27;&#x27;</span>+newname+<span class="string">&#x27;\&#x27; WHERE id=\&#x27;&#x27;</span>+id+<span class="string">&#x27;\&#x27;;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">query</span>(SQL_query,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[UPDATE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        resData = &#123;<span class="attr">flag</span>: <span class="number">0</span>&#125;;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------UPDATE----------------------------&#x27;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SQL_query:&quot;</span>, SQL_query);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;newname:&quot;</span>, postData.<span class="property">newname</span>);</span><br><span class="line">      </span><br><span class="line">      resData = &#123;<span class="attr">flag</span>: <span class="number">1</span>&#125;;</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">      res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(resData));</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    connection.<span class="title function_">end</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/test_getCurrDate&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;----------------------------------------&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;/api/test_getCurrDate&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getCurrDate</span>());</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="title function_">getCurrDate</span>());</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(port_number, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line"> </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;QQShare is running at http://%s:%s&quot;</span>, host, port)</span><br><span class="line"> </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://blog.csdn.net/itmyhome1990/article/details/89372292</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCurrDate</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="keyword">var</span> sep = <span class="string">&quot;-&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> year = date.<span class="title function_">getFullYear</span>(); <span class="comment">//获取完整的年份(4位)</span></span><br><span class="line"><span class="keyword">var</span> month = date.<span class="title function_">getMonth</span>() + <span class="number">1</span>; <span class="comment">//获取当前月份(0-11,0代表1月)</span></span><br><span class="line"><span class="keyword">var</span> day = date.<span class="title function_">getDate</span>(); <span class="comment">//获取当前日</span></span><br><span class="line"><span class="keyword">if</span> (month &lt;= <span class="number">9</span>) &#123;</span><br><span class="line">month = <span class="string">&quot;0&quot;</span> + month;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (day &lt;= <span class="number">9</span>) &#123;</span><br><span class="line">day = <span class="string">&quot;0&quot;</span> + day;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> currentdate = year + sep + month + sep + day;</span><br><span class="line"><span class="keyword">return</span> currentdate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="服务器持续运行"><a href="#服务器持续运行" class="headerlink" title="服务器持续运行"></a>服务器持续运行</h2><blockquote><p><a href="https://blog.csdn.net/zzpzheng/article/details/54427582">关闭shell后如何保持程序继续运行</a></p><blockquote><p>在执行的命令之前增加nohup，在命令后增加&amp;。然后点任意键退回到shell，再exit，node.js程序仍然会在后台运行。</p><p>如；nohup npm start &amp;</p></blockquote><p><a href="https://blog.csdn.net/calvinpaean/article/details/91349024">Linux下SSH远程连接断开后让程序继续运行解决办法、在后台运行</a></p><p><a href="https://www.zhihu.com/question/20709809">Linux ssh状态下如何后台运行程序？</a></p><p><a href="https://huanghailiang.github.io/2017/09/08/ssh%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD%E6%96%AD%EF%BC%8C%E5%A6%82%E4%BD%95%E8%AE%A9%E5%91%BD%E4%BB%A4%E7%BB%A7%E7%BB%AD%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%A7%E8%A1%8C/"><strong>ssh连接服务器中断，如何让命令继续在服务器执行</strong></a></p><p><a href="https://blog.csdn.net/gatieme/article/details/52777721">解决Linux关闭终端(关闭SSH等)后运行的程序自动停止</a></p></blockquote><h3 id="nohup命令"><a href="#nohup命令" class="headerlink" title="nohup命令"></a>nohup命令</h3><p>不挂断地运行命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> Command [ Arg … ] [　&amp; ]</span><br></pre></td></tr></table></figure><blockquote><p>nohup命令将当前指令的所有输出都输出到了当前文件夹下的nohup.out文件。加不加&amp;并不会影响这个命令。只是让程序前台或者后台运行而已。</p><p>使用 jobs 查看任务。<br>使用 fg %n　关闭。</p></blockquote><h3 id="screen命令"><a href="#screen命令" class="headerlink" title="screen命令"></a>screen命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen</span><br></pre></td></tr></table></figure><p>Screen将创建一个执行shell的全屏窗口。你可以执行任意shell程序，就像在ssh窗口中那样。在该窗口中键入exit退出该窗口，如果这是该screen会话的唯一窗口，该screen会话退出，否则screen自动切换到前一个窗口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen vi test.c</span><br></pre></td></tr></table></figure><p>Screen创建一个执行vi test.c的单窗口会话，退出vi将退出该窗口/会话。</p><h3 id="byobu命令"><a href="#byobu命令" class="headerlink" title="byobu命令"></a>byobu命令</h3><p>Unbuntu图形界面可以使用，更加集成化，且可以使用快捷键。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install byobu</span><br></pre></td></tr></table></figure><h3 id="【pm2】"><a href="#【pm2】" class="headerlink" title="【pm2】"></a>【pm2】</h3><blockquote><p><a href="https://blog.csdn.net/qq_36938617/article/details/95679412">pm2的基本使用</a></p></blockquote><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -y pm2 -g</span><br></pre></td></tr></table></figure><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p>如有必要，修改<code>Package.json</code>中的<code>start</code>接口：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node server.js&quot;</span></span><br></pre></td></tr></table></figure><p>通过pm2运行项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 start server.js</span><br></pre></td></tr></table></figure><blockquote><p>不要忘记添加项目启动脚本<code>server.js</code>。</p><p>这个可以用~</p></blockquote><h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h4><p>查看当前运行的项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 <span class="built_in">ls</span>  <span class="comment"># 或: sudo pm2 list</span></span><br></pre></td></tr></table></figure><h5 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h5><p>pm2生成的日志文件的默认路径在$ HOME /.pm2/logs /下面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.pm2/logs/</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p>查看历史日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 logs --lines 200         <span class="comment"># 查看历史日志</span></span><br></pre></td></tr></table></figure><p>查看实时日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 logs             <span class="comment"># 实时显示日志</span></span><br></pre></td></tr></table></figure><p>其他日志操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 logs --raw<span class="comment"># 显示流中的所有进程日志</span></span><br><span class="line">sudo pm2 flush<span class="comment"># 清空所有日志文件</span></span><br><span class="line">sudo pm2 reloadLogs<span class="comment"># 重新加载所有日志</span></span><br></pre></td></tr></table></figure><h5 id="仪表盘"><a href="#仪表盘" class="headerlink" title="仪表盘"></a>仪表盘</h5><p>仪表盘可以显示实时监控的动态数据，退出Ctrl+C</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 monit          <span class="comment"># 查看仪表盘</span></span><br></pre></td></tr></table></figure><img data-src="/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20201216192812552.png" class="" title="仪表盘"><h4 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h4><p>停止当前运行的项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 stop server       <span class="comment"># 停止项目名为server的应用程序</span></span><br><span class="line"></span><br><span class="line">sudo pm2 stop 0            <span class="comment"># 停止项目id为0的应用程序</span></span><br><span class="line"></span><br><span class="line">sudo pm2 stop all          <span class="comment"># 停止pm2管理的所有应用程序</span></span><br></pre></td></tr></table></figure><h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 restart all      <span class="comment"># 重启pm2管理的所有应用程序</span></span><br><span class="line"></span><br><span class="line">sudo pm2 reload all       <span class="comment"># 重载pm2管理的所有应用程序</span></span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 delete server     <span class="comment"># 删除项目名为sever的应用程序的进程</span></span><br><span class="line"></span><br><span class="line">sudo pm2 delete 0          <span class="comment"># 删除项目id为0的应用程序的进程</span></span><br><span class="line"></span><br><span class="line">sudo pm2 delete all        <span class="comment"># 删除pm2管理的所有应用程序的进程</span></span><br></pre></td></tr></table></figure><h4 id="自启动"><a href="#自启动" class="headerlink" title="自启动"></a>自启动</h4><p>服务器开机自启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pm2 startup</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;P2P系统设计项目 - 服务器后端。使用JavaScript + MySQL搭建后端接口，提供数据交互功能。&lt;/p&gt;
&lt;img data-src=&quot;/P2P%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20201216192812552.png&quot; class=&quot;&quot; title=&quot;仪表盘&quot;&gt;</summary>
    
    
    
    <category term="Work" scheme="https://stellarkey.github.io/categories/Work/"/>
    
    
    <category term="全栈" scheme="https://stellarkey.github.io/tags/%E5%85%A8%E6%A0%88/"/>
    
    <category term="后端" scheme="https://stellarkey.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://stellarkey.github.io/tags/JavaScript/"/>
    
    <category term="SQL" scheme="https://stellarkey.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>区块链课程实验</title>
    <link href="https://stellarkey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/"/>
    <id>https://stellarkey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/</id>
    <published>2020-11-25T13:28:25.000Z</published>
    <updated>2021-01-04T16:14:58.677Z</updated>
    
    <content type="html"><![CDATA[<p>区块链课程实验。<span id="more"></span></p><h1 id="数字货币交易"><a href="#数字货币交易" class="headerlink" title="数字货币交易"></a>数字货币交易</h1><p>利⽤以太坊体验数字货币转账功能，在以太坊测试链Ropsten上进⾏操作。可以利⽤Google插件Metamask⽣成以太坊地址和私钥（保存下来）。向⽔龙头领取测试代币<a href="https://faucet.metamask.io/">https://faucet.metamask.io/</a>，⼀次会发送1ETH，编写脚本（如python），向附件txt⽂件的100个地址每个地址转账⼀些eth（⽐如0.01eth）</p><hr><h2 id="创建钱包"><a href="#创建钱包" class="headerlink" title="创建钱包"></a>创建钱包</h2><p><strong>Ropsten</strong>：<a href="https://ropsten.etherscan.io/">https://ropsten.etherscan.io/</a></p><p><strong>Metamask</strong>：<a href="https://metamask.io/">https://metamask.io/</a>，Conflux钱包界面跟这个差不多</p><p>按照步骤创建钱包即可。</p><p>切换到测试网。</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201126150404761.png" class="" title="切换到测试网"><h2 id="注水"><a href="#注水" class="headerlink" title="注水"></a>注水</h2><p><strong>水管</strong>：<a href="https://faucet.ropsten.be/">https://faucet.ropsten.be/</a></p><p>在水管上输入自己钱包的地址，开始注水：<code>0x75a669A413Cc3640C52F5E3FBc82836f18497407</code></p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201126150556212.png" class="" title="注水成功"><blockquote><p><del>没有起到效果</del></p></blockquote><p>尝试直接从<strong>METAMASK</strong>水管上注水：<a href="https://faucet.metamask.io/">https://faucet.metamask.io/</a></p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201126150954032.png" class="" title="Buy相关界面"><p>注水成功：<a href="https://ropsten.etherscan.io/tx/0xa9c12ce15386998acd0e29bac842509b1a57793cac13a1320bbb537e05d116ad">0xa9c12ce15386998acd0e29bac842509b1a57793cac13a1320bbb537e05d116ad</a></p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201126151055801.png" class="" title="MetaMask Ether Faucet"><p>但是上述操作完成以后，并没有看到相应的ETH余额增长，点击transaction也是查无所获。</p><p>又提交了一个注水交易：<a href="https://ropsten.etherscan.io/tx/0x540c617e4df428f3175189902419f5ef58822c9cb84e3e7584fe90aa8030e1d0">0x540c617e4df428f3175189902419f5ef58822c9cb84e3e7584fe90aa8030e1d0</a></p><p>……全部都失败了。。最后找助教给我转了1个ETH~</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201126155355464.png" class="" title="transaction"><h2 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h2><blockquote><p><a href="https://learnblockchain.cn/docs/web3js-0.2x/index.html#"> Web3.js 中文文档</a></p></blockquote><p><a href="https://web3py.readthedocs.io/en/latest/"><strong>Web3.py</strong></a>：用于以太坊交互的Python库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install web3</span><br></pre></td></tr></table></figure><p>一开始安装的时候遇到一个棘手的BUG，是某个安装包找不到特特定版本的依赖。搞了好久，最后大概了解到可能是跟python版本有关，所以直接重装了python3.9。。这回安装web3就顺利多了。</p><h3 id="网络交互代理设置"><a href="#网络交互代理设置" class="headerlink" title="网络交互代理设置"></a>网络交互代理设置</h3><blockquote><p><a href="https://www.btcfans.com/article/31719">Web3.py教程：如何使用Python转账</a></p></blockquote><p>如果要跟以太网交互，必须连接到某个节点。（<a href="https://web3py.readthedocs.io/en/latest/node.html">Here</a>）</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201126170358786.png" class="" title="Why do I need to connect to a node?"><p><a href="https://infura.io/"><strong>Infura</strong></a>：一个以太网的代理节点服务。需要注册。</p><p>注册完成后，创建一个project，并获取项目ID。然后填入以下代码的<code>&lt;infura-project-id&gt;</code>处，即可建立代理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> web3 <span class="keyword">import</span> Web3</span><br><span class="line">w3 = Web3(Web3.HTTPProvider(<span class="string">&#x27;https://mainnet.infura.io/v3/&lt;infura-project-id&gt;&#x27;</span>))</span><br></pre></td></tr></table></figure><blockquote><p>你也可以把项目ID保存到环境变量<code>WEB3_INFURA_PROJECT_ID</code>中，从而避免硬编码。</p><p><code>mainnet</code>代表以太网主网。</p></blockquote><h3 id="基本功能测试"><a href="#基本功能测试" class="headerlink" title="基本功能测试"></a>基本功能测试</h3><p>我们试着运行一下接口：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(w3.isConnected())</span><br><span class="line"><span class="built_in">print</span>(w3.eth.blockNumber)</span><br><span class="line"><span class="comment"># True</span></span><br><span class="line"><span class="comment"># 11333063</span></span><br></pre></td></tr></table></figure><p>查看之前钱包账户的余额：<code>0x75a669A413Cc3640C52F5E3FBc82836f18497407</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">w3.eth.getBalance(<span class="string">&#x27;0x75a669A413Cc3640C52F5E3FBc82836f18497407&#x27;</span>)</span><br><span class="line"><span class="comment"># 0</span></span><br></pre></td></tr></table></figure><h3 id="修改连接到的网络"><a href="#修改连接到的网络" class="headerlink" title="修改连接到的网络"></a>修改连接到的网络</h3><p>余额为0是因为现在默认在主网上（Infura Mainnet）。我们先切换到Ropsten测试网。</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201126171254941.png" class="" title="切换测试网"><p>获得相应的链接，修改连接代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w3 = Web3(Web3.HTTPProvider(<span class="string">&#x27;https://ropsten.infura.io/v3/d3fb182b32bd49fe9eb36693d470ed88&#x27;</span>))</span><br></pre></td></tr></table></figure><p>再次查看钱包账户的余额：<code>0x75a669A413Cc3640C52F5E3FBc82836f18497407</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">w3.eth.getBalance(<span class="string">&#x27;0x75a669A413Cc3640C52F5E3FBc82836f18497407&#x27;</span>)</span><br><span class="line"><span class="comment"># 1000000000000000000</span></span><br></pre></td></tr></table></figure><p>成功。跟CFX的$10^{18}$单位转换一样，代表1ETH。</p><h2 id="转账实验"><a href="#转账实验" class="headerlink" title="转账实验"></a>转账实验</h2><h3 id="单次转账测试"><a href="#单次转账测试" class="headerlink" title="单次转账测试"></a>单次转账测试</h3><blockquote><p><a href="https://web3py.readthedocs.io/en/latest/web3.eth.html#web3.eth.Eth.sendTransaction"><code>Eth.sendTransaction</code>(<strong><em>transaction</em></strong>)</a></p><p><a href="https://blog.csdn.net/weixin_34413802/article/details/91910789">以太坊 web3.py 签名转账</a></p><p><a href="https://www.jianshu.com/p/5866a9432c93">web3.py 脚本转账</a></p><p><a href="https://web3py.readthedocs.io/en/latest/ethpm.html?highlight=Ropsten#registry-uris"><code>chain_id</code></a></p></blockquote><p>感觉相当棘手。报了一个错，似乎Infura在Ropsten测试网不支持eth_sendTransaction这些方法。在主网上则是报的余额不足的错。这样就不是很友好了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ValueError: &#123;&#x27;code&#x27;: -32601, &#x27;message&#x27;: &#x27;The method eth_sendTransaction does not exist/is not available&#x27;&#125;</span><br></pre></td></tr></table></figure><p>询问助教后发现是<strong>参数不匹配</strong>的问题，在增加了一些参数以后，成功执行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> web3 <span class="keyword">import</span> Web3</span><br><span class="line"></span><br><span class="line">sender_address = <span class="string">&#x27;0x75a669A413Cc3640C52F5E3FBc82836f18497407&#x27;</span></span><br><span class="line">private_key = <span class="built_in">open</span>(<span class="string">&#x27;private_key.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line">receiver_address = <span class="string">&#x27;0x2a9d0B6fd9fF3C854130Af05529B2e40FBADa38c&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># w3 = Web3(Web3.HTTPProvider(&#x27;https://mainnet.infura.io/v3/d3fb182b32bd49fe9eb36693d470ed88&#x27;))</span></span><br><span class="line">w3 = Web3(Web3.HTTPProvider(<span class="string">&#x27;https://ropsten.infura.io/v3/d3fb182b32bd49fe9eb36693d470ed88&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;isConnected:&quot;</span>, w3.isConnected())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;sender:&quot;</span>, w3.eth.getBalance(sender_address))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;receiver:&quot;</span>, w3.eth.getBalance(receiver_address))</span><br><span class="line"></span><br><span class="line">transaction = &#123;</span><br><span class="line">    <span class="string">&#x27;chainId&#x27;</span>: <span class="number">3</span>,    <span class="comment"># Ropsten的网络标识号</span></span><br><span class="line">    <span class="string">&#x27;from&#x27;</span>: sender_address,</span><br><span class="line">    <span class="string">&#x27;to&#x27;</span>: receiver_address,</span><br><span class="line">    <span class="string">&#x27;value&#x27;</span>: <span class="number">2333</span>,</span><br><span class="line">    <span class="string">&#x27;gas&#x27;</span>: <span class="number">90000</span>,</span><br><span class="line">    <span class="string">&#x27;gasPrice&#x27;</span>: w3.eth.gasPrice,</span><br><span class="line">    <span class="string">&#x27;nonce&#x27;</span>: w3.eth.getTransactionCount(sender_address)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">signed_txn = w3.eth.account.signTransaction(transaction, private_key=private_key)</span><br><span class="line"></span><br><span class="line">txn_hash = w3.eth.sendRawTransaction(signed_txn.rawTransaction)</span><br><span class="line"><span class="built_in">print</span>(txn_hash.<span class="built_in">hex</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">time.sleep(<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;sender:&quot;</span>, w3.eth.getBalance(sender_address))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;receiver:&quot;</span>, w3.eth.getBalance(receiver_address))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">isConnected: True</span><br><span class="line">sender: 999658962292322667</span><br><span class="line">receiver: 16331</span><br><span class="line">0x1e7785b8aca445c2e6c9880378ae4cea701c7113b23303c85e0cf76cec8b9e5e</span><br><span class="line">sender: 999616332562233334</span><br><span class="line">receiver: 18664</span><br><span class="line">[Finished <span class="keyword">in</span> 29.9s]</span><br></pre></td></tr></table></figure><p>以太网上查看：<a href="https://ropsten.etherscan.io/tx/0x1e7785b8aca445c2e6c9880378ae4cea701c7113b23303c85e0cf76cec8b9e5e"><code>0x1e7785b8aca445c2e6c9880378ae4cea701c7113b23303c85e0cf76cec8b9e5e</code></a></p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201127120127580.png" class="" title="Transaction Details"><h3 id="批量转账"><a href="#批量转账" class="headerlink" title="批量转账"></a>批量转账</h3><blockquote><p><a href="https://blog.csdn.net/xiaohaigary/article/details/88955667">python 读取txt列表到列表中</a></p><p><a href="https://blog.csdn.net/qq_37828488/article/details/100024924">python读取、写入txt文本内容</a></p><p><a href="https://blog.csdn.net/wahaha13168/article/details/82917911">解决replacement transaction underpriced以太坊交易异常</a></p><blockquote><p>简单来说就是以太网交易有时延，高频批量处理的时候，要<strong>自定义交易中的nonce标识</strong></p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> web3 <span class="keyword">import</span> Web3</span><br><span class="line"></span><br><span class="line">sender_address = <span class="string">&#x27;0x75a669A413Cc3640C52F5E3FBc82836f18497407&#x27;</span></span><br><span class="line">private_key = <span class="built_in">open</span>(<span class="string">&#x27;private_key.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line">receiver_address_list = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: Web3.toChecksumAddress(x.strip(<span class="string">&#x27;\n&#x27;</span>)), <span class="built_in">open</span>(<span class="string">&#x27;以太坊100个地址.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).readlines()))</span><br><span class="line">txn_hash_list = []</span><br><span class="line"></span><br><span class="line">w3 = Web3(Web3.HTTPProvider(<span class="string">&#x27;https://ropsten.infura.io/v3/d3fb182b32bd49fe9eb36693d470ed88&#x27;</span>))</span><br><span class="line">local_nonce = w3.eth.getTransactionCount(sender_address)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> receiver_address <span class="keyword">in</span> receiver_address_list:</span><br><span class="line">    <span class="built_in">print</span>(receiver_address)</span><br><span class="line">    transaction = &#123;</span><br><span class="line">        <span class="string">&#x27;chainId&#x27;</span>: <span class="number">3</span>,    <span class="comment"># Ropsten的网络标识号</span></span><br><span class="line">        <span class="string">&#x27;from&#x27;</span>: sender_address,</span><br><span class="line">        <span class="string">&#x27;to&#x27;</span>: receiver_address,</span><br><span class="line">        <span class="string">&#x27;value&#x27;</span>: <span class="number">2333</span>,</span><br><span class="line">        <span class="string">&#x27;gas&#x27;</span>: <span class="number">90000</span>,</span><br><span class="line">        <span class="string">&#x27;gasPrice&#x27;</span>: w3.eth.gasPrice*<span class="number">2</span>,</span><br><span class="line">        <span class="string">&#x27;nonce&#x27;</span>: local_nonce</span><br><span class="line">    &#125;</span><br><span class="line">    signed_txn = w3.eth.account.signTransaction(transaction, private_key=private_key)</span><br><span class="line">    txn_hash = w3.eth.sendRawTransaction(signed_txn.rawTransaction)</span><br><span class="line">    txn_hash_list.append(txn_hash.<span class="built_in">hex</span>())</span><br><span class="line"></span><br><span class="line">    local_nonce = local_nonce + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;txn_hash_list.txt&quot;</span>,<span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">&quot;receiver_address,transaction_hash\n&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(receiver_address_list)):</span><br><span class="line">        f.write(receiver_address_list[idx] + <span class="string">&#x27;,&#x27;</span> + txn_hash_list[idx] + <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果保存到<code>txn_hash_list.txt</code>：（100个转账交易的receiver地址和transaction地址）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">receiver_address,transaction_hash</span><br><span class="line"><span class="number">0xF5038fbAfbC0d08629EF7890D0437Ec135A05338</span>,<span class="number">0xce48d4c7daa046c413b6a13692bb41137f72a557fd3d723938ad868e127e3833</span></span><br><span class="line"><span class="number">0x2Ad318738C4b35547F60C20E884ed8279d74a1Be</span>,<span class="number">0x76540a97452352745afcd5ad9be9f16967753ddfcb999f5d7b43394f82253d67</span></span><br><span class="line"><span class="number">0xE63cAE40d63791467cb111DC8eAb32e55c27921C</span>,<span class="number">0x1eb25169dded0f811d5034632357ba7e7c678731c28d831b8f575bf3c3fa74a8</span></span><br><span class="line"><span class="number">0x7208DC3f8A279f0b3B287a7a253953cCA1A06db9</span>,<span class="number">0x1495b14b1f99f607c576a0aeeab1836454c2f81f0213e149b3a0312770d2307d</span></span><br><span class="line"><span class="number">0x743e6861AC9E3582DDCc5De3f8B893C9239AFb65</span>,<span class="number">0x916f252e912a8806a21dc152f8a6807419af75887c0549d3b980807b461faee6</span></span><br><span class="line"><span class="number">0xC6c4a7E78EEbE24EEEA0E306aAc14D0318B573Bf</span>,<span class="number">0xbfac50d11323b7e668b94c0c67c6d235b962d5dc84e26addda0cad1f5c1e57ec</span></span><br><span class="line"><span class="number">0xf0Ed2D4823617f4fefdcebBCDBe684Ef60556ff2</span>,<span class="number">0x952dfa6b23d7ac0f56e3213dc02600cefd368ecfa93f6129dfdece2a42b0deb7</span></span><br><span class="line"><span class="number">0x597C52bbe09991e6f39eb0da0393722C32b89536</span>,<span class="number">0x3bf586007fdaaec1334d57c45abea44729d87d2c589a69d46f2c03a4830c614a</span></span><br><span class="line"><span class="number">0x41aa8Fa01023B3eEf4176899f9Fd27952aEBcB37</span>,<span class="number">0x4b6b8444957549e8d9366e96a95b98d4162323cacf8d53e5e19973931e72c0f2</span></span><br><span class="line"><span class="number">0xF0A1959236D2A84bF0788deDE9D20c4897ef2082</span>,<span class="number">0x48fd0644e911e00e70812ca6dcef016ad6d04bb5b9f15c86ba3d345d2d580ec1</span></span><br><span class="line"><span class="number">0x6f4B8c46eB55E01f9076363Ce9A60D2c10D32465</span>,<span class="number">0x34e6f65c47123f501dab0a4be40fad231de11a85a8d01de631a50ee438b5ac0f</span></span><br><span class="line"><span class="number">0xFA3728689dBe43C1d2707AC486D426d6497C9F47</span>,<span class="number">0x779f3aecad25a480fafe02b67a5c7405e138870b77366ddaff7d1b8607f4b2ec</span></span><br><span class="line"><span class="number">0x74C112FB8B87586BF1315eD80a79227fF437bc4b</span>,<span class="number">0x0aafa84e36950c495da47e012fcdcaf2159f71e686c4b687a5e808c6d0031f79</span></span><br><span class="line"><span class="number">0x0be1f2Aa333Cec14AdeAbeBcB7Db22e4D8077b13</span>,<span class="number">0x26741d3a81727f39932dab3d5e75c0feed840d0b82bc6fe6185847b4ce8087e6</span></span><br><span class="line"><span class="number">0x17F3B9bDbB31FC96baf85Fe89B9f82d216449cA3</span>,<span class="number">0x8fce8d78dbfcbcf666ffa18c9a1595a667fdb6277eb6826ff3dcdf20c03be0d2</span></span><br><span class="line"><span class="number">0x3C37A1C6C817E9149751c9162Dda2D59Ad2D254e</span>,<span class="number">0x706073665fbb42d9dd4a664af999ee277c057494a864c3d0f5884582fa0157b2</span></span><br><span class="line"><span class="number">0x49755db1Ac06075E3e66270f05Fe32f02c1F5A2f</span>,<span class="number">0x9ed1dde26f27ec8f521a391674f780cb4130ae9a1fd047066b4d7ac778099020</span></span><br><span class="line"><span class="number">0x5f3bBfcA0561Aa4A66DCB5314aF1c05a35D9D0B1</span>,<span class="number">0x4eedbf34146a8032cfcf39b5538e471b59abed7b5c17623e6dbe9cd284ba20c0</span></span><br><span class="line"><span class="number">0x410b2bE29E217c617329627eB789318272f1f294</span>,<span class="number">0xf65c8ea23ff06dc69ce52e27e073e04bb84c920342a905e837aa2e4a1a0807fd</span></span><br><span class="line"><span class="number">0x6330F9bbe5c29Fa4ad7a786a3B399B5886DA2303</span>,<span class="number">0xe375e45801ecc1102a96e53d8f98e0fcd455bbc7b77612fec5d966e9a09d1658</span></span><br><span class="line"><span class="number">0xa97f63427599A4C7cE6D61347fAED4196c6B84A3</span>,<span class="number">0x012280a8ec9ac84645704de86785f1297349b55fd2f4ca315c6a164f5cba6062</span></span><br><span class="line"><span class="number">0x204628AC17c05c0F47FA1Aa991f2CD6aA76eA8Cf</span>,<span class="number">0x9ca958c32613ccff5f7a5c6a39aab3c5a08863e2e77662bd260ed98ddc73ca7e</span></span><br><span class="line"><span class="number">0x34221e0097e4F512F93FcC960247D95785524BaF</span>,<span class="number">0xd8f051b7f50c9a468a6a2d636693346d2247fe253446ae76dca67d4c087586cb</span></span><br><span class="line"><span class="number">0x6603680d11B601317A89E1B5c5F932D9066Bda6e</span>,<span class="number">0x13f22aca9be21e2db9e7ee6f8a22a8c0e84429a41e17a687f4bd027ae8b07bbe</span></span><br><span class="line"><span class="number">0x9956fBB19c3C9EaF2Ff66bE0817Cb1fa5b4E7fDc</span>,<span class="number">0xac83dd89b467d31a9b33b9362916eb8c196b9880e39606ff7aa6d5762f825ba0</span></span><br><span class="line"><span class="number">0x59533e7Bbe9d68826Ac4AF8a83cc1743637918DF</span>,<span class="number">0x62708dcd41ddf845c2a4121727c8bba18a63e2f453d3ce8691d383bf0b812ca7</span></span><br><span class="line"><span class="number">0x5A945352a53035546aC341887eB7C9e591E3D3af</span>,<span class="number">0xd4e6b2aa4426b3e14873c245dc0ff724d0c240ca4a7dc94ff6b602c5dbd0fd5d</span></span><br><span class="line"><span class="number">0xCb5e1Dc921d13B3db04853735477F4bFd730Abea</span>,<span class="number">0xbd5edb4b282587623745050edadd7ba58571235ad9e6b35b876cd86703c3a0ce</span></span><br><span class="line"><span class="number">0x2852CD4e1AB6924B57D2A073F04E02cC5AfF71E7</span>,<span class="number">0x48395332f448fb84ecd44a15f4a7615414bc489e2660f608c6da04fdbe8b3fbc</span></span><br><span class="line"><span class="number">0xBb411F489434BF96546DBB274f9fd3f5a1502a92</span>,<span class="number">0x379a4dab65f5ac83e009fa3efe418495e87b9aec29fd77c8ff108b0ad89d545b</span></span><br><span class="line"><span class="number">0x9d2a1c9217EA36137742FD7EAAEabe3fcB56AEF8</span>,<span class="number">0x3ae9bf355013e3acd939c890efd2061b49b6bb6d66c1c14b332596823315b21e</span></span><br><span class="line"><span class="number">0x43eB2A45f92558f2Ccce8BCa7717F1C4740FC5fA</span>,<span class="number">0x4a91ce10876f1d9c41fd0ed7f622b152dde339f39ecf429563f204e72c38dd90</span></span><br><span class="line"><span class="number">0xdf6FbfC8A5CF9B76716483b9f64bF0589931a5A5</span>,<span class="number">0xd5e2c3f2aad77ae6febc61e6299452ca6177287607f3e85fec700616ddb3c4b9</span></span><br><span class="line"><span class="number">0x906C650973991a08B9E2B2d202F82879Fd79F2Ef</span>,<span class="number">0x7f9fef0f49ba7ad6b3fd9f83f2f4696840a055ce59c45e080d8ad1be0b84dedc</span></span><br><span class="line"><span class="number">0xE9F3F08ae08FDf92acA5342280Fd133a893eE527</span>,<span class="number">0x972f8be9a8fb7f8ab654eac441dc1cd08f84c23b48e76982f901ab73d3cc7c3c</span></span><br><span class="line"><span class="number">0x258f82fFc5ebC019a70e6B589E125abF00Cf0C70</span>,<span class="number">0x073a97c76ede43e4defd0dd905e909e30e84e34a94521f067cee09c46ff138cb</span></span><br><span class="line"><span class="number">0x56c57c57e9d4553E0F69C8b0eb2c9080A29b4617</span>,<span class="number">0x98f1094f7827a84e0c17d7396689d71e94a9de5e7156122daa81d5deae314d8e</span></span><br><span class="line"><span class="number">0xA50B2ceab00703745d8105383f90537A3f6A6ea9</span>,<span class="number">0x9ea5224e7bf3d2c1137bf31f1d9c03e16dec4b8a08a1a553fe98039b1044d5d7</span></span><br><span class="line"><span class="number">0x0f5c60e699751B87f2b8e6E5C777A8B823Ed1e32</span>,<span class="number">0xcdadbc8c0a04f32321f744fcba02045fb6db59e9dc0b727d9f6ee470850b020e</span></span><br><span class="line"><span class="number">0x9AE7F9526D0ba93e8770c3C8F91ABE06E00C3546</span>,<span class="number">0x555b025736dbfac7bd4c5a0b5ccbcf4043465b4f3362a024607986e1cc7642ea</span></span><br><span class="line"><span class="number">0x33A93f0156BFC2EacfaB72581cC65D1c4aa4134d</span>,<span class="number">0x79f77e769b1bd02184dc76cc3068efb940b86ee30b4ac29bc6f1b1bbd0508887</span></span><br><span class="line"><span class="number">0x82647DbD911243318A98388274bD01e7722ac196</span>,<span class="number">0xe4e81645c6318fd5b6d88f1fe1139b15e96cf238a8d2c2a3c5885e9eac218016</span></span><br><span class="line"><span class="number">0xDB42179E665C74FDBDdDd358CaA13Ce2D2cBF8Ca</span>,<span class="number">0x2216b36eaf9c6b9b88f87cdf81f4470142e18fab833ffa5cd81a2556758c5182</span></span><br><span class="line"><span class="number">0x634F06362109c4c6909daFAeAeC54a7C48fED6b9</span>,<span class="number">0xe0b08c5e34f0fd230549af47d61d70b0907bc322626748f6fe62c4581cac986f</span></span><br><span class="line"><span class="number">0x18f36BD1ecd5129eEd69E8336A639A958a2c0B6c</span>,<span class="number">0xc96c30e6d2fc15f52a3bd4c6988e0c1a4084389c12dfafe42507358b7a2ba046</span></span><br><span class="line"><span class="number">0x48991e0107B60e59a10CF6ea4C98413bc8707965</span>,<span class="number">0x417b64ae3109cb805fcbc241702708e0a732fbaffb8d56c27022c5cbe83eb919</span></span><br><span class="line"><span class="number">0x5acCBB66f98C9dfE970923F4fF6BB78F4684DE5b</span>,<span class="number">0x6ef116bbad22452b39429876f69cc89651195367c3ce7dc8c70e84e4adc14b1e</span></span><br><span class="line"><span class="number">0x6C32130c0cbCc02D7209d7ddDF75AB686C8CAbD4</span>,<span class="number">0xab123626e8e0c6d240547fbeb73812cc3758e1efd40c102d7c5e4779ad84e263</span></span><br><span class="line"><span class="number">0xbC5436a2FE868f8156fC0E407889C8357A3786D9</span>,<span class="number">0xfbdc6f4e818b1666672f91d95e2646a2dd1e21e12a40c49c3e38b86ede4b681f</span></span><br><span class="line"><span class="number">0x0e6009CAD7972b81AB65c7A16051DF35197a440F</span>,<span class="number">0xd53ba8592f02ceaf749f110e531bd4256f719e3bc0806dcc8d464f592691c3fe</span></span><br><span class="line"><span class="number">0xE1A926A6F13CDfD963fCBE9Edf45A941DdFD029a</span>,<span class="number">0x11b744467f201db0a2537db39618ca192239ecc75cb2f05f8d213d05b7045281</span></span><br><span class="line"><span class="number">0x783Ef0F1ccbd9f2Db675499aF1695d5952AA8b15</span>,<span class="number">0xe75288128cd120be182c290f463cc3d46eeb0806cda430cd891e9f437b77a2a1</span></span><br><span class="line"><span class="number">0x0D09B0744b15988F55AC40a03E825E8A7B746305</span>,<span class="number">0x23eb6b82be46284cfa0ffccc8b1a85371fec6b085eaf0af61f61c3209d0d20f4</span></span><br><span class="line"><span class="number">0xb65a46cBC43D8dd08Cf79eDE6f4888FBF6c80838</span>,<span class="number">0xca80a5defe0e2472dc27ded1ca634e1b91008928d8b1e29878a0d09054771cf7</span></span><br><span class="line"><span class="number">0xEeDf45908eb260a928e23DcB8E29834bE114A51A</span>,<span class="number">0x21da569dfeded8769a229e7495821e5e3069f274f6a728d52cd996e0c1fc21f1</span></span><br><span class="line"><span class="number">0x277e20fDd65Cd475d0cCfEc4504e232a5Bb0Ae66</span>,<span class="number">0xc773ddb8217483689bcce8ac20fa58707227373831853995965d17e1067d4301</span></span><br><span class="line"><span class="number">0xA744729DcF3CABEA6D736C3Bf063603295A1A4A9</span>,<span class="number">0xd2876cd6471ae28a0c3c4294cc3c3554a0a9e06be42b04e7beb90ce47f909076</span></span><br><span class="line"><span class="number">0x26994067D27e956f37F977eac2fE558183083Eae</span>,<span class="number">0xa3b529a4cd52dec9abe6013bc164c256f60bccddebae8af4797456ae76471583</span></span><br><span class="line"><span class="number">0x34B1dCa251403C1E8e060E297D60E0b5b56eF2ca</span>,<span class="number">0x3d187a3443ee1523e9ddb99317440759d50a42a9d9bc05aa9143a4749013b22c</span></span><br><span class="line"><span class="number">0xb32392B690AC08cDFF63E9F825c6aa0085d32980</span>,<span class="number">0x942ab093895c55ac797a371b156a2df9f6221e5259bb7e4a26b0c0d73088b8ae</span></span><br><span class="line"><span class="number">0xF0248a6Dc89347B83AC538Ad8f9D21C7407526C8</span>,<span class="number">0xa1ff6c93ef65fec2a617bfbd6ded9740fed5b55a8849998c3120c7a12965db48</span></span><br><span class="line"><span class="number">0x6d1EE1Cc2a5035B7b027d17ae886b2dfd64ca9dF</span>,<span class="number">0xbb66205552e145b555663a02e7cf826d00d06cb246a7292cc362a6dee771714d</span></span><br><span class="line"><span class="number">0x5200e4896063265e30Cb1F003b0428242750D643</span>,<span class="number">0x90768a96826f36bf97c7db8583806dd31c94b3dae1c7ead617d24ef76d3a7d5d</span></span><br><span class="line"><span class="number">0xe7c62457fCFe75A162d4d39d75fb65c2bA81CB12</span>,<span class="number">0x78ac189e0dc13b73927750adf3bfdb9965301e4d4b11f80f1b036cd55d259fec</span></span><br><span class="line"><span class="number">0x854ED15dCB081a0EEbfA5Ec41e5e73b71108798B</span>,<span class="number">0x6d05198e107f9c91bcc95da379fe46ba8b626eac54bf50bc89399379f117b8a3</span></span><br><span class="line"><span class="number">0xfE3B05538d342dC6689f82f24eCC72eFfC5eb353</span>,<span class="number">0xa4c740b7374e5b624fb5b3866368f30e5d2487d24c380d9689cc07c741098d34</span></span><br><span class="line"><span class="number">0x81CBBF3e9B6821B9A418E890e6F685aD7F349d18</span>,<span class="number">0x2346d5850fbf5a0a88391ff3393f002590d1b2053a5e4d993fd4ee8c51cba1be</span></span><br><span class="line"><span class="number">0xEdD6225aF424470730789f9E8f6cB1F6855Bfb6e</span>,<span class="number">0xe1ec3affa7ae2da1a420fc7b6489013772429b038f274627193a11ff63ec505a</span></span><br><span class="line"><span class="number">0x1418abDdc3d3f323D126988D835367AB8c80fb4A</span>,<span class="number">0xf40021cf3ba6f23d0a308b15ab3eff9c8f0759251085efab493d1e89a3733770</span></span><br><span class="line"><span class="number">0x4dE0a71Ca317628B5F577da9d4f87517306F64B8</span>,<span class="number">0x2f9eaa0fea8722da5a427d4c8763ff1b8f4620bbe4ed2889647f669e928f01f6</span></span><br><span class="line"><span class="number">0x1DC21C3C7C953C8479f052BFb6a287a9c0AbDEFa</span>,<span class="number">0xe9bd3a30425b5ae1074ea35d750b6042c1866952c7e8763b5f1495b45361988f</span></span><br><span class="line"><span class="number">0xf666d19AD3a8E5fD1c1067a4afD64cA17140c49b</span>,<span class="number">0x47201b811198ccd5f0c38e6e9499eb646fe2a0dd515a1bdf258fb7e5a55bbd25</span></span><br><span class="line"><span class="number">0xA9EA631ebd06Ac20a92dBcbC5f0d9d5067BB6AFa</span>,<span class="number">0xe12dd92bef2282a3dbab63d04b60927bc143f13672ab47fecc0bce16b270bf13</span></span><br><span class="line"><span class="number">0xD19e1B8215fdfFa2BD14217A0d20484596b1EF3c</span>,<span class="number">0x4eecbc1bc2cac43d86a6aa7dba02c5c8dcba0d23f4242ab504e452db5320e117</span></span><br><span class="line"><span class="number">0x3036b9f146a7d107B17E506DA19a86bBB6BF4c14</span>,<span class="number">0xa453d0bd4d7adc6195f0568a00b2dc300b97fe2a3a7033db0ea7c4c2a3afffc6</span></span><br><span class="line"><span class="number">0xbAF0873DB0874717680298EedE4DcAb71829d24b</span>,<span class="number">0xe151cbb6ae808e3f17e584debc8d344a35620f2417e66ccca40d05f1b583b091</span></span><br><span class="line"><span class="number">0xB2AD5422767e003aE18D1C183Fc1f655c83f47be</span>,<span class="number">0x7a2345fa52828463f66225cbdc4ddd34a1da64b47b04d0f74174e0d34fa81632</span></span><br><span class="line"><span class="number">0x3875934878c9F3217235F4817a109d558dB86458</span>,<span class="number">0xfeea2993a9beee5f7ebf14831d91565b9ea293a785d60188ec7665f13c05107b</span></span><br><span class="line"><span class="number">0xb00aB9f855eCfF24f4ac25c8402AaC75affd14e4</span>,<span class="number">0x4154abc948e95f896e7da50addba4e417e27e910dfd25d5088d61990cf93427a</span></span><br><span class="line"><span class="number">0x832c405a14e364728401953f1A96652d481e4b54</span>,<span class="number">0xd5d6e7936db55bc120a548afc8f69c3fdcf6bd2956d1cc4891cd4401e19bad95</span></span><br><span class="line"><span class="number">0xD47dAf5047a3931A947762D34794d4D62fA024E3</span>,<span class="number">0xdb7066aa499d922febcbb07979fd8011e4ab9a184a3041560c1add5639b1c6b5</span></span><br><span class="line"><span class="number">0x14c0C3E5F6F6d8bd1030E161577f3A70563B3F5a</span>,<span class="number">0x18aa76b0e2adf5833514c62e9172adad36e0be9fd8d0cce4e6327f500e92b8a2</span></span><br><span class="line"><span class="number">0x14B786EfC953336A7DEEe955C0d7FDEBB668233F</span>,<span class="number">0x53fac254fd7f9deccff26aebd37748011af31300697662b000171c50bf180c05</span></span><br><span class="line"><span class="number">0x4184733688457eB0C06fB33C241d5c2Cabb1F332</span>,<span class="number">0x1d98543e8e36206a35e9e445e851ff4db5f32a5a18d79033aff6de7ea9078e95</span></span><br><span class="line"><span class="number">0xb5bbAE1742cC280dFB3b77F3Da4b9d5d6De0F206</span>,<span class="number">0x17155346756409e20f93ad9a044f2359ee3ace08bc7c0e73da3dc34d11ba0d4b</span></span><br><span class="line"><span class="number">0x16fc9087dAb4ABeCB154f1ADE296aDa287F4740e</span>,<span class="number">0x9ebb3bd060e1dc1a7979e1829f3d26979988e33d30a6c2b452cabc9cfffb0326</span></span><br><span class="line"><span class="number">0x7761A9072bfB49CfA629403AaBe1DD3881D2c37C</span>,<span class="number">0x2003ffd30af70c444cc69eec22f19b7a444bd95e6572404aeea56da368ebf0b4</span></span><br><span class="line"><span class="number">0x82788f0Ad056Fa7B2D960ed32D451D2F3B49555A</span>,<span class="number">0xa32008a0be2a5536c539faf4a9964e13714f6d5d4ce4ed5af5cb0bc2d0f8fd8f</span></span><br><span class="line"><span class="number">0x2e30924F89969675E168014FD957a5f5e782619d</span>,<span class="number">0xb212e2a507fbb169fadbf94812c77751e03c79086c6b7c52aae49fbc8e6aff3d</span></span><br><span class="line"><span class="number">0x921DBBDeb89d0b0aa70F34f94eb0f85FCB8adC42</span>,<span class="number">0x4905a8760571053cf074644919659d0bb0d914b366bc102e489065b23a99c4c5</span></span><br><span class="line"><span class="number">0x4dd86Ec972e34F0C75437fE7393d530F77054263</span>,<span class="number">0x3db0c74ec54f327e5f6ad70a42ca6ea6ff04c64ea5ef07b4b36ca28d8e0d3894</span></span><br><span class="line"><span class="number">0x9Af66A51f824FF6f3Bb748DccD85e39C7836d656</span>,<span class="number">0xf9498db48c3cf9cf81c3978c4351bb49e13cad56c0587bb1568b6798aa5b3458</span></span><br><span class="line"><span class="number">0x216F1562c6B74D90dDe7111BA64ed8C2259328aC</span>,<span class="number">0xf77e6a27e371876292c9ce2f5a391fbc32f889388c94034daaaf4c98b4b4f95c</span></span><br><span class="line"><span class="number">0x45EAb4237188fcD565882bb1d1995EdfA114F345</span>,<span class="number">0xcb54347277cf8d053ba9d8f84dd45ef1dfb43330d1af62cd93c99615167cc03b</span></span><br><span class="line"><span class="number">0xfBB451aA60D83C1E7b9606fD3Df774EE4D5d7133</span>,<span class="number">0x171a7e0786f43921b126398868f56193ae81fe10058d97999944c02479fbb294</span></span><br><span class="line"><span class="number">0xF3528dCbbb2006aDa8de5D094E84a6561aFE5f90</span>,<span class="number">0x86ad24d9104b1884e4a5d439418dbae58732c4746359a00009621881266488ea</span></span><br><span class="line"><span class="number">0x2898B60ab33F4d6985379B80FadF38FfEE4ec5C9</span>,<span class="number">0x502ea4563931fba029f4ece571085c553a80a480bab047add5a2389e2d42284a</span></span><br><span class="line"><span class="number">0x3868BCdb212e465936FEb1906C1bA8Ff66d21730</span>,<span class="number">0x2a0f22876c884fb1dd25fb27f188417a1496a2cec32933b2210df61a7dd0c5a5</span></span><br><span class="line"><span class="number">0x17075CEcA61CcCB1813203A66A8a8260a37A192b</span>,<span class="number">0x15e4372e115c66287cca0648aea7f5af4d359ec10b41ab35dd2d085496c21c1b</span></span><br><span class="line"><span class="number">0xd3fE6E3E6fA461A56366dF3FBC64f424995A1839</span>,<span class="number">0x1814e22abd31057df40685d34759c28a2c0aad100f5548ad2b521510d9679c8b</span></span><br></pre></td></tr></table></figure><p>在以太网上查看：<a href="https://ropsten.etherscan.io/address/0x75a669a413cc3640c52f5e3fbc82836f18497407"><code>0x75a669a413cc3640c52f5e3fbc82836f18497407</code></a></p><h1 id="智能合约实验"><a href="#智能合约实验" class="headerlink" title="智能合约实验"></a>智能合约实验</h1><p>编写⼀个简单的以太坊智能合约，⽤Solidity语⾔编写，实现⼀个简单的计算器功能，四个函数，能实现两个变量的加减乘除，并部署到以太坊测试⽹上和调⽤测试。</p><p><a href="https://remix.ethereum.org/#optimize=true&amp;version=soljson-v0.4.23+commit.124ca40d.js&amp;evmVersion=null&amp;appVersion=0.7.7">https://remix.ethereum.org/#optimize=true&amp;version=soljson-v0.4.23+commit.124ca40d.js&amp;evmVersion=null&amp;appVersion=0.7.7</a> 在线智能合约编辑器</p><hr><h2 id="编写四则运算器合约"><a href="#编写四则运算器合约" class="headerlink" title="编写四则运算器合约"></a>编写四则运算器合约</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.23</span>;</span><br><span class="line">import <span class="string">&quot;remix_tests.sol&quot;</span>; <span class="comment">// this import is automatically injected by Remix.</span></span><br><span class="line"></span><br><span class="line">contract calculator &#123;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">add</span> <span class="params">(uint256 a, uint256 b)</span> public pure <span class="title function_">returns</span> <span class="params">(uint256 ret)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">minus</span> <span class="params">(uint256 a, uint256 b)</span> public pure <span class="title function_">returns</span> <span class="params">(uint256 ret)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a - b;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">multiply</span> <span class="params">(uint256 a, uint256 b)</span> public pure <span class="title function_">returns</span> <span class="params">(uint256 ret)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a * b;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">divide</span> <span class="params">(uint256 a, uint256 b)</span> public pure <span class="title function_">returns</span> <span class="params">(uint256 ret)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a / b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="合约测试"><a href="#合约测试" class="headerlink" title="合约测试"></a>合约测试</h2><p>在虚拟的环境中进行合约测试，效果如常：</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201127122912427.png" class="" title="合约测试"><h2 id="部署合约"><a href="#部署合约" class="headerlink" title="部署合约"></a>部署合约</h2><p>把环境换成<code>Injected Web3</code>，部署到Ropsten network：</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201127123733568.png" class="" title="签署合约"><p>部署完成：<a href="https://ropsten.etherscan.io/address/0x081a95329b24CEE9661168440551D8bBa10B70Ff"><code>0x081a95329b24CEE9661168440551D8bBa10B70Ff</code></a></p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201127123939641.png" class="" title="部署完成"><p>部署后合约测试：</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201127124229893.png" class="" title="test"><h1 id="PoW共识体验"><a href="#PoW共识体验" class="headerlink" title="PoW共识体验"></a>PoW共识体验</h1><p>⾃⾏选择⼀个PoW币种（BTC、ETH、LTC、ZEC、DASH、Grin等），计算该PoW算法哈希，提交⼯作量证明，可以加⼊矿池。时间不需要太长，⼏分钟即可，体验“挖矿”过程。截图证明。</p><p>可以使⽤的参考⼯具：轻松矿⼯、AIminer等<br>可以加⼊的矿池参考：蚂蚁矿池、F2pool、币印矿池等</p><hr><p><strong>轻松矿工</strong>：<a href="http://www.qskg.top/">http://www.qskg.top/</a></p><p>挖矿界面：</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201127130236069.png" class="" title="轻松矿工"><p>矿池界面：</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201127130158832.png" class="" title="矿池界面"><h1 id="PoS节点搭建"><a href="#PoS节点搭建" class="headerlink" title="*PoS节点搭建"></a>*PoS节点搭建</h1><p>⾃⾏选择⼀个PoS项⽬（Eth2.0、Nebulas、Polkadot、Cosmos、Irisnet、Oasis、Nucypher、Algorand、Solana、Near等），运⾏其验证者测试节点。</p><p>参考⽂档：</p><ul><li><a href="https://wiki.nebulas.io/zh_CN/latest/go-nebulas/blockchain/testnet.html">https://wiki.nebulas.io/zh_CN/latest/go-nebulas/blockchain/testnet.html</a></li><li><a href="https://www.irisnet.org/docs/get-started/testnet.html">https://www.irisnet.org/docs/get-started/testnet.html</a></li></ul><hr><p><strong>Nebulas</strong>（星云）。</p><p>测试网：<a href="https://github.com/nebulasio/go-nebulas/tree/testnet">https://github.com/nebulasio/go-nebulas/tree/testnet</a></p><p><del>下载这个项目比我想象的要大很多。。。</del></p><p>算了暂时没空搞了。</p><h1 id="去中心化交易协议"><a href="#去中心化交易协议" class="headerlink" title="*去中心化交易协议"></a>*去中心化交易协议</h1><p>了解AMM (Automated Market Maker)和闪兑协议，统计⽬前区块链上去中⼼化交易协议上质押的不同交易对的资产总量，⽐如Uniswap和Balancer，分析其对中⼼化交易的冲击和影响。</p><p>参考⽂档：</p><ul><li><a href="https://app.uniswap.org/#/swaphttps://uniswap.info/home">https://app.uniswap.org/#/swaphttps://uniswap.info/home</a></li><li><a href="https://balancer.exchange/#/swap">https://balancer.exchange/#/swap</a></li></ul><hr><blockquote><p><a href="https://academy.binance.com/en/articles/what-is-an-automated-market-maker-amm">What Is an Automated Market Maker (AMM)?</a></p><p><a href="https://www.blocktempo.com/automated-market-maker-101/">DeFi 科普｜去中心化金融窜起，什么是「自动做市商AMM」？</a></p></blockquote><p><strong><font color=blue>自动做市商 AMM (Automated Market Maker)</font></strong>：去中心化的交易中心。用户登记数字资产，并提供兑换和赚取手续费。</p><p><strong><font color=blue>闪兑</font></strong>：闪兑就是快速的货币兑换。这里提到的<strong>闪兑协议</strong>助教说理解为uniswap就可以了。</p><blockquote><p><a href="https://www.cailu.net/article/12993269509803396.html">最近比较火热的Uniswap协议，听说过吗？</a></p><p><a href="https://learnblockchain.cn/article/274">新手指南 | Uniswap 是什么？</a></p></blockquote><p><strong>Uniswap</strong>：<a href="https://info.uniswap.org/pairs">https://info.uniswap.org/pairs</a></p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201127152504939.png" class="" title="Uniswap资产总量"><p><strong>Balancer</strong>：<a href="https://balancer.finance/">https://balancer.finance/</a></p><p>没有找到Balancer的资产界面。。（只找到了：<a href="https://pools.balancer.exchange/#/explore">https://pools.balancer.exchange/#/explore</a>）</p><img data-src="/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/image-20201127181420668.png" class="" title="pools liquidity"><p><del>去中心化交易市场当然会对中心化交易市场造成冲击辣</del>。目前的去中心化市场只是提供了数字资产的交易，实际资产的交易很难保真地数字化，也就很难通过密码学或者区块链的方式来保证去中心化以后的可信度。所以，在实体交易方面，中心化交易市场仍然是无法被取代的。</p><p>但是这对于中心化的数字货币交易所来说不是一个好消息，因为去中心化的AMM可以很容易地取代它们并且为用户提供更高的效率和更低的手续费。</p><div><hr><font size=5>相关文章</font><ul><li><a href="https://stellarkey.github.io/%E6%8C%96%E7%9F%BF%E5%85%A5%E9%97%A8/">挖矿入门</a></li><li><a href="https://stellarkey.github.io/%E8%AE%BA%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/">论学习方法</a></li><li><a href="https://stellarkey.github.io/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/">零知识证明简记</a></li><li><a href="https://stellarkey.github.io/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/">北斗UMA专项</a></li><li><a href="https://stellarkey.github.io/CS%E6%8C%91%E6%88%98%E8%90%A5/">CS挑战营</a></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;区块链课程实验。</summary>
    
    
    
    <category term="Work" scheme="https://stellarkey.github.io/categories/Work/"/>
    
    
    <category term="CS" scheme="https://stellarkey.github.io/tags/CS/"/>
    
    <category term="区块链" scheme="https://stellarkey.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="以太坊" scheme="https://stellarkey.github.io/tags/%E4%BB%A5%E5%A4%AA%E5%9D%8A/"/>
    
  </entry>
  
  <entry>
    <title>科技与人文浅讨</title>
    <link href="https://stellarkey.github.io/%E7%A7%91%E6%8A%80%E4%B8%8E%E4%BA%BA%E6%96%87%E6%B5%85%E8%AE%A8/"/>
    <id>https://stellarkey.github.io/%E7%A7%91%E6%8A%80%E4%B8%8E%E4%BA%BA%E6%96%87%E6%B5%85%E8%AE%A8/</id>
    <published>2020-11-17T10:16:40.000Z</published>
    <updated>2021-01-04T16:00:28.562Z</updated>
    
    <content type="html"><![CDATA[<p>科学技术与人文的简单讨论。<span id="more"></span></p><blockquote><p><em>《自然辩证法》小论文。</em></p></blockquote><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="http://mirrors.ibiblio.org/CTAN/macros/latex/contrib/thuthesis/thuthesis.pdf">THUThesis</a></p><h1 id="科学技术与人文的范畴问题"><a href="#科学技术与人文的范畴问题" class="headerlink" title="科学技术与人文的范畴问题"></a>科学技术与人文的范畴问题</h1><p>什么样的事物会让人觉得科技感十足，什么样的事物又会让人觉得人文情怀丰满？一种常见的方式是将科技和人文对应到理性和感性思维上，但是从内涵上说，科技不是绝对的理性，人文也不是绝对的感性；甚至，理性和感性本身的界限也是模糊的。科技与人文在范畴上的异同，也是讨论科学技术与人文的其他相关话题的基础。</p><p>不妨从游戏（或者精确地讲，电子游戏）说起。电子游戏可以说是现代科技的一个代表作，但同时电子游戏也有“第九艺术”的美誉——这并非空穴来风。电子游戏的底层技术的确十分发达，为了开发游戏，程序员设计了另一个庞然大物——游戏引擎，在游戏引擎中集成了计算机图形学、仿真物理、博弈论等很多很多的知识，它们都是开发游戏将要用到的技术。一个高度集成化的游戏引擎的体量是极其庞大的。</p><p>但是，电子游戏的人文、艺术性也是十分浓厚的，就拿最近的《荒野大镖客2》和《最后生还者2》来举例，两者的游戏的底层技术差异并不大，都是所谓的“3A游戏”。但是，玩家对于两者的评价却是两极分化。《荒野大镖客2》凭借精美的剧情设计，在玩家群体中获得了一致好评；《最后生还者2》却因为在剧情上的重大失误，尽管游戏画面和游戏技术无可挑剔，仍然获得非常低的评价。也就是说，在电子游戏领域，单纯的技术优势已经无法让消费者满意了。在近些年开始蓬勃发展的独立游戏浪潮，就是一种对个性化、创新这一类人文性的需求的具现。</p><p>再谈谈科幻。科幻算是科学技术和人文结合得最好最紧密的领域。现代的科幻已经不再是简简单单指代科学幻想文学，而是延伸到了电影、电视等新兴多媒体媒介上。几乎所有的知名的科幻作品其内核中一定会有经典的科技知识以及深入的人文话题的讨论。比如刘慈欣所著的《球状闪电》，它既涉及到对大气物理学、军事技术等相关科技的描写——整个故事情节也是被球状闪电这样一种尚未解决的科学问题所推进的，也涉及到各种各样的人文思考，包括科学家对未知事物的强烈好奇心，理想主义者为达目的不择手段、前苏联黑暗压抑的修正主义时代等人文精神。阿西莫夫作为划时代的科幻作家，在他的作品里通常充满了人与机器的人文思考，但是他也同时追逐着极度的理性和逻辑，比如阿西莫夫常常提到的机器人三定律，定律之间的相互关系和证明细节常常成为他的某个故事的核心。比如，缺少了第二定律或者第三定律的机器人会有什么的神奇表现？阿西莫夫通过一个个故事展现。</p><p>可以看到，科学技术和人文的结合在很多场景下，都表现为同一个事物的不同侧面。有言：“科学的终极通向数学，数学的终极通向哲学”。</p><h2 id="第三类"><a href="#第三类" class="headerlink" title="第三类"></a>第三类</h2><p>现代科技的确在与时俱进、日新月异，但是除了重大科技突破还能引起关注以外，更多的人把目光投射到了非技术的事物上。我们又不禁思考：非科技的，就一定是人文吗？似乎在主流的谈论中，都自然地讨论着科技和人文的或对立、或融合的命题，并引出无限的思辨；可是，除了科技和人文，这世上还有很多无法归类的朴素信息。</p><p>不妨称之为：“第三类”。</p><p>比如说，一块石头，一只苹果。因为缺少与人类社会的联系，我们很难判断它具有科技或人文的意义。但是，这些事物又常常是大千世界的主要组成部分，它们与社会脱离，不如称之为自然。</p><p>因为，我们必须意识到，我们所讨论的科技与人文的总范畴是十分有限的，只有与人类行为相关的事物才可以讨论科技、人文的相关话题。在这样的约束下，我的讨论不至于产生严重的歧义。</p><p>然而恩格斯在《自然辩证法》中也提到，科学技术源起自然科学，科学技术和自然有着不可分割的关系。那么我们要如何看待自然、科技、人文三者之间的关系呢？</p><h2 id="三足鼎立"><a href="#三足鼎立" class="headerlink" title="三足鼎立"></a>三足鼎立</h2><p>虽然我们一开始探讨的只是科技和人文之间的范畴问题，但是我们发现，科技和人文的背后是自然，而自然是广袤世界的原初角色。</p><p>我们大致可以得到如下的Venn图：</p><img data-src="/%E7%A7%91%E6%8A%80%E4%B8%8E%E4%BA%BA%E6%96%87%E6%B5%85%E8%AE%A8/image-20201124191203432.png" class="" title="三足鼎立"><p>科技和人文相互交织的同时，也都诞生于自然。除此之外，科技和人文向自然的交互也从未停止。科技与人文的交织我们在前文已经说明。</p><p>科技与自然的交互的表现，例如：物理学家从实验中探究物质的规律，人类用科技工具来改造自我的生存环境。恩格斯在《自然辩证法》一书中指出：“我们不要过分陶醉于对自然界的胜利。对于每一次这样的胜利，大自然都报复了我们。”可以看出，科技和自然的交互必须慎之又慎。</p><p>人文与自然的交互的表现，例如：诗人通过触景生情即兴赋诗，劳动人民用大众文化给枯燥的生活添加调剂。</p><p>理解科技、人文、自然的三足鼎立，是我们应该具有的认知。</p><h1 id="科学技术与人文的平衡问题"><a href="#科学技术与人文的平衡问题" class="headerlink" title="科学技术与人文的平衡问题"></a>科学技术与人文的平衡问题</h1><p>在有了范畴认知以后，我们会开始自然而然地思考科技与人文之间更细微的关系，这样的关系就是平衡问题。</p><p>在科技伦理中，最具代表性的算是生物医学。比如，对人类基因的实验与研究在现代社会（至少在21世纪初期）是受到严格约束的，包括对基因疾病的治疗也仅限于对体细胞DNA（不可遗传）的改造。除此之外，克隆（尤其是克隆人）、堕胎、整形等方面技术的研究和应用也受到严格的社会人文和法律环境的有力约束。许智宏在“科技伦理问题的思考”中提到：“……它的影响既有正面的，也有负面的。科学技术发展具有不确定性，这种不确定性的背后就是科技发展的风险。科技中的风险既有不确定性风险，也有争议性风险……”克隆人和母体的关系、胚胎有没有人权、克隆人是否可以具有和自然人一样的社会义务与权力……种种思考，体现了科技与人文在边界领域中广泛存在的冲突。随着时间演进，它们有的被解决，但从总体来说还在不断产生。</p><p>现代科学技术有着一些特点：知识总量剧增，大数据、碎片化时代正在来临；从研究到应用的周期越来越短；研究领域拓宽，研究程度愈加深入，学科交叉使传统学科之间的界限模糊化，前沿领域和新兴领域如雨后春笋般涌现；支撑现代科技发展，需要高的经费投入。</p><p>在科技对社会的影响力日益增大的同时，现代社会的发展对科学技术也表现出越来越强的依赖。发展科技的同时，平衡科技与社会人文的关系，成了一个越来越突出的矛盾……</p><p>我们应该通过唯物辩证法的方式来平衡科技与人文的关系。人文所代表的从精神层面出发的立场，从本质上来说仍然是因为科技发展而带来的。在三百年前，不会有人想到电灯电话、触屏手机，自然也就没有可能讨论信息社会、增强现实等深入的话题；新科技的出现推动着新思潮的出现。同样，人文精神的升华和激辩，使得人类社会对待科技的态度变得谨慎，在战争中规定使用特定形状的子弹、达成核不扩散条约、从模拟人脑的结构中寻求发展下一代人工智能，科研工作者从人文精神的传播中，获得了灵感和理性。</p><p>科技和人文的绝对平衡是不存在的，它们遵循的是辩证统一的关系。双方螺旋式上升，你追我赶，互相对抗的同时，又促进了对方的发展。因此，在人类文明的一小段时期内出现的科技和人文发展的不平衡问题，实际上并不是一个关键问题，甚至并不算一个问题。当人类社会把目光放得更长远，就能看到更为清晰的发展脉络。</p><h1 id="科学技术与人文的发展问题"><a href="#科学技术与人文的发展问题" class="headerlink" title="科学技术与人文的发展问题"></a>科学技术与人文的发展问题</h1><p>然而只有发展脉络，并不能直接得到人类社会以后发展的方向。这其中有太多尚未探知的自然因素在悄悄影响人类发展的上界和道路。</p><p>未来将会怎么样？这是一个永恒热门的话题。然而现代社会似乎一直在加速发展，无论是科技还是人文，都在日新月异，人们的生活环境和思想观念都在时刻发生着改变。</p><p>思考未来是科幻天生的使命。刘慈欣在他的科幻评论“关于人类未来的断想”中，写道，“没有永恒不变的人性，没有真正高尚的道德，一切的标准都有前提。我们如今所珍视的对于自由的向往，在中世纪被认为是一种病态。那时人们尊重的是’忠诚‘’勇敢‘，你要随时勇于赴死。在未来，道德也必将因为条件的改变而改变。”从中我们可以看到，未来社会不仅在科技上发生巨变，人文精神也会变得面目全非。在没有物质基础的情况下，我们很难直接想象未来社会的形态。</p><p>但是这并不妨碍我们去构想未来社会可能存在的形态，甚至去探讨未来社会可能拥有的那些不可名状的超现实科技。尽管我们的想象力有限，但在现有的知识框架下，我们还是能推导出一些有价值的东西的。</p><p>关于永生。科技对人类带来的可能最大的变化就生命的续航问题。我们已经在不断接近一个通向永生的阶梯，这一代人或者下一代人就很可能搭上通向永生的列车。科技并不需要一次性研究出永生技术，而只要及时地研制成增加寿命的技术，如冬眠、克隆器官、端粒修复……我们就能一步一步地通向永生的未来。而永生的出现，将会极大地改变人类社会的形态。这是亿万年来人类社会中从未出现的最大的差异——生命上的不平等。掌握永生密码的人，将改变对有限时间内社会和生活的认知，他们的视野将变得无比开阔；而没有抓住永生机会的人，在知道死亡并非不可避免以后，也会对很多原有的价值观产生致命的冲击。</p><p>关于虚拟现实。如果说永生是人类深藏在基因里的原始欲望，虚拟现实则是可以让他们甚至忘掉原始本能的技术。想象如果可以在虚拟现实中获得与真实毫无区别的全套幸福体验，那么追逐永生的欲望就会彻底地变成享受当下的强烈渴望。作为信息化技术的终极形态，我们甚至可以延伸思考“是否真实宇宙本身也是某种形式的虚拟现实”这样形而上的问题。然而这还只是环境的虚拟化，当人类自身也完成了虚拟化，情况则更加不同。思想、品质、经历，一切塑造你的信息都将变成网络信息海洋上的洋流，“……深刻的思想、完美的心理和性格、高雅的艺术审美能力等，都成了商品，可以出卖和购买……”。</p><p>在未来也许有无数条路，科技和人文的发展都会超乎想象。用我们当代的认知和伦理去感受未来人类的情感，是一件白费力气的事。我们只能描绘出有限的未来的轮廓，甚至连这个轮廓的精确程度也不确定。我们受限于我们身处的时代。</p><p>尽管如此，我们仍然可以得到一个启发：<strong>无论未来发展成什么样子，我们做出的准备都将是不充分的</strong>。持有这样的信条，我们便可以不给自己定下任何限制。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><code>恩格斯. 自然辩证法. 人民出版社</code></p><p><code>刘慈欣. 最糟的宇宙, 最好的地球: 刘慈欣科幻评论随笔集. 四川科学技术出版社</code></p><p><code>阿西莫夫. 机器人短篇全集. 江苏文艺出版社</code></p><p><code>许智宏,黄小茹. 科技伦理问题的思考. 科学与社会. 2012,2（2）:1-8</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;科学技术与人文的简单讨论。</summary>
    
    
    
    <category term="Think" scheme="https://stellarkey.github.io/categories/Think/"/>
    
    
  </entry>
  
  <entry>
    <title>零知识证明简记</title>
    <link href="https://stellarkey.github.io/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/"/>
    <id>https://stellarkey.github.io/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/</id>
    <published>2020-11-02T07:42:05.000Z</published>
    <updated>2021-01-04T16:14:16.631Z</updated>
    
    <content type="html"><![CDATA[<p>本文为《 赛博智能经济与区块链》的公众号文章撰写任务。<span id="more"></span></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://zhuanlan.zhihu.com/p/90711138">零知识证明学习资源汇总</a></p><p><a href="https://www2.kenyon.edu/Depts/Math/Aydin/Teach/Sp14/328/AliBabaCave.pdf">How to Explain Zero-Knowledge Protocols to Your Children</a></p><p><a href="https://zhuanlan.zhihu.com/p/31651393">区块链学习笔记 (1)：零知识证明的江湖</a></p><h1 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h1><p>什么是零知识证明？</p><p>零知识证明看上去字面上好像是“<strong>不用任何知识就证明了某件事情</strong>”的意思。。但是事情并非如此简单……</p><p>首先我们一定明白，零知识证明<strong><font  color=red>不可能等于</font></strong><strong><font color=blue>没有利用任何信息而完成证明</font></strong>。如果有人宣称他证明了哥德巴赫猜想，那么他也至少需要给各位发送这样一条“声明”：“兄弟们，快来看看！新鲜的哥德巴赫猜想证明。俺完成的。”这本身就是一种信息的传递。</p><p>事实上大家也注意到，证明是一个信息交互的过程。</p><p>那么，我们不由得疑惑：</p><blockquote><p><em>零知识证明，究竟“零知识”到什么程度？</em></p></blockquote><p>我们可以把缜密的逻辑推理看作是<strong>强证明</strong>。因为没有什么比详细的证明步骤更有说服力了。</p><p>但是，想像一下，现实生活里面，如果不通过缜密的逻辑推理（<del>To be fair，不是所有人都适合这个方式</del>），我们平时是怎么作证明？</p><p>古人云：“<strong>论迹不论心</strong>。”假如我们没有条件以理服人，那么用行动证明自己也是不错的选择。</p><blockquote><p>和缜密逻辑所代表的非交互式证明不同，行动代表了一类交互式证明的模式。</p></blockquote><h1 id="三色问题"><a href="#三色问题" class="headerlink" title="三色问题"></a>三色问题</h1><p>看来我们可以尝试认为<strong>足够数量的行为</strong>可以揭露事物背后隐藏的真实。所谓实践是检验真理的唯一标准。</p><p>想像我们要进行一项三种颜色的涂色问题（三色问题），同样保证相邻不同色：</p><img data-src="/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/0fef5f44a0e04f4ab3dc483a3ee09ffe.png" class="" title="三色问题"><p>一种可能的解决方案如下：</p><img data-src="/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/5d61c2e3ece8426286dd72849870b0ed.png" class="" title="解决方案"><p>三色问题实际上是一个NP完全问题，这意味着为了寻找一个有效的解，将花费巨额的时间成本。如果提问者给出了一个三色问题，回答者找到了相应的解，他肯定倾向于在得到报酬之前对解进行保密。那么，回答者要怎么证明他获得了这个解，并且不透露其它的任何多余信息呢？</p><p>首先我们把得到的解决方案上的涂色全部掩盖住：</p><img data-src="/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/24752ee4c4784447bef63b46d72fd8ea.png" class="" title="mask"><p>提问者每次可以揭示一组相邻节点的涂色，验证是否满足不同色条件：</p><img data-src="/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/9311e39bb1084bc5ac0bb33dc9cdac51.png" class="" title="reveal"><blockquote><p>为了揭示时不透露方案真正的涂色，这里应该引入一种随机化的动态映射，每次揭示前，将图中的颜色按随机生成的置换群映射成另外的某种颜色。这样，尽管提问者知道解的性质，但无法推测出具体的解。</p></blockquote><p>这样的揭示次数足够多，那么回答者拥有正确解的概率就会急剧增加。</p><p>当这个概率足够大以后，提问者将可以信任回答者——他确实找到了一个合法的涂色方案。</p><p>尽管三色问题只是一个案例，但是作为一个NP完全问题，任何其他的NP问题都可以转化为三色问题的实例。</p><h1 id="零知识"><a href="#零知识" class="headerlink" title="零知识"></a>零知识</h1><p>Goldwasser, Micali 和 Rackoff 提出三个零知识证明的特性，任何零知识都必须满足。简单来说：</p><ol><li>完整性(<em>Completeness</em>)。如果证明方和验证方都是诚实的，并遵循证明过程的每一步，进行正确的计算，那么这个证明一定是成功的，验证方一定能够接受证明方。</li><li>安全性(<em>Soundness</em>)。没有人能够假冒证明方，使这个证明成功。</li><li><font color=red>零知识性</font>(<em>Zero-knowledgeness</em>)。证明过程执行完之后，验证方只获得了“证明方拥有这个知识”这条信息，而没有获得关于这个知识本身的任何一点信息。</li></ol><p>零知识，指的就是具有第三条特性的信息。其实，这个术语更适合称之为<strong>零额外知识</strong>。</p><p>如果这个信息还同时具有完整、安全性，则称之为零知识证明。</p><p>零知识，本质上是<strong><font color=blue>对解的一无所知</font></strong>。</p><p>这种一无所知表现在：尽管你获得了零知识，但是你求解这个问题的难度不变，你想要获得问题的解的期望计算量不变。</p><blockquote><p><em><strong><font color=deepskyblue>你看到了梦中的海市蜃楼，但却无人指出通向彼岸的路。</font></strong></em></p></blockquote><h1 id="图灵测试"><a href="#图灵测试" class="headerlink" title="图灵测试"></a>图灵测试</h1><p>你甚至可以把三色问题的一连串揭示看成该领域内的“图灵测试”。</p><p>通过足够的测试，那么一个黑箱模型可以被认为具有人类智能；通过足够多的揭示，那么一个黑箱涂色方案可以被认为是给定三色问题的解。</p><img data-src="/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/image-20201111192128550.png" class="" title="图灵测试"><p>但是，我们知道，在图灵测试中你再怎么测试黑箱是否具有人类智能，也无法从中得知任何构造这样一个具有人类智能的机器的信息——如果可以得到的话，那么人们早就造出强人工智能了。因为用一个真人也是可以在黑箱中假装一个人工智能的。</p><p>这意味着图灵测试本身只能提供一个可信的判断，但是黑箱内部的机制究竟是什么样的？</p><p>事实是，你完全可以伪造。</p><h1 id="时光倒流"><a href="#时光倒流" class="headerlink" title="时光倒流"></a>时光倒流</h1><p>想像我们有一台时光机。这台时光机允许你每次测试失败后，回到过去一段时间，针对每一个特定的测试设计一个伪造的信息，从而重新通过该测试。</p><img data-src="/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/image-20201111194210629.png" class="" title="时光机"><p>这意味着一个伪造者可以在不知道任何解的信息的情况下，通过所有的测试。其代价无非是在他自己的时间线<strong>多花一点时间而已</strong>。</p><p>看到这里你可能会想：时光机这东西真的存在吗？你说了这么多有什么实际意义？</p><p>事实上，时间只不过是一种虚拟的概念，时间的本质是一种有序的链。（<del>是不是想到了区块链？</del>）</p><p>在计算机的程序运行过程中，“时光倒流”是司空见惯的，程序回滚、回退并不是遥不可及的手段。比如，某大型程序员线上交友网站所使用的git快照管理技术，就是典型支持时间意义上的版本管理的工具。</p><p>任何的验证者计算机(Verifier)程序都可以构造一棵如下图所示的伪造者决策树：</p><img data-src="/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/image-20201111200941691.png" class="" title="伪造者决策树"><p>每一次测试都是一个分支点，只需要在分支点处进行有限次的回滚，就一定能够通过测试。</p><hr><p>既然一个对解一无所知的伪造者都能通过测试，那么提问者想要从测试中获得关于解的有用信息，看上去就不太可能了……在这种情况下，这样的测试就完成了零知识级的信息传递。</p><h2 id="永不坍缩的观测"><a href="#永不坍缩的观测" class="headerlink" title="永不坍缩的观测"></a>永不坍缩的观测</h2><p>时光机作弊的特点在于，无论观察多少次，提问者永远无法区分一个有解和另一个对解一无所知的人的区别。</p><blockquote><p>想想，时光倒流，你可以预知你的一切已有经历，但是除此之外你仍然一无所知，从前你不知道的东西现在你依然不知道。</p></blockquote><p>这和量子效应正好相反：只要观测，立刻坍缩。</p><p>时光机作弊，达成了永不坍缩的观测。</p><h1 id="零知识证明"><a href="#零知识证明" class="headerlink" title="零知识证明"></a>零知识证明</h1><p>如果我们要完成一个证明，如果不能区分到底有没有解，那么证明就没有意义了。所以，要形成零知识证明，除了给出了一个满足零知识性的交互方法以外，我们还需要加上一些其它的约束。</p><p>即，把时光倒流这种超能力<strong>ban</strong>掉。</p><p>如果限制了时光倒流，强迫整个证明过程在线完成，那么便形成了真正的零知识证明。</p><p>但是，交互式的证明是一对一的，在一个区块链里面，发交易的人要向所有矿工证明交易是合法的，双方需要实时交互，交流信息。一个一个证明效率太低太低了。</p><blockquote><p>我们还可以看到，要实现零知识，一个解必须要存在一种与解的结构无关的特征，这种特征是解空间内其它元素所不具有的。我们在测试中，实际测试的就是黑箱是否具有这些特征。</p></blockquote><p>因此，零知识证明协议经历了一段长时期的发展，直到它可以真正被应用到实际工程中去。零知识证明协议变成了一个大家族，这些协议之间具有不同的特点，它们所采用的底层密码学技术也有极大差别。</p><div class="table-container"><table><thead><tr><th style="text-align:center">协议特点</th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">通用性</td><td style="text-align:center">全能型</td><td style="text-align:center">专用型<br />（只能证明某些特定的事）</td></tr><tr><td style="text-align:center">交互性</td><td style="text-align:center">非交互式</td><td style="text-align:center">交互式</td></tr><tr><td style="text-align:center">证明规模</td><td style="text-align:center">$O(1)$</td><td style="text-align:center">$O(n)$</td></tr></tbody></table></div><p>为了获得非交互式的证明，计算机科学家尝试<strong>把原始问题映射到NP问题</strong>。NP问题天然存在验证、求解两个子问题，验证通常十分简单，而求解通常十分繁琐。对于验证者来说，消耗自然很小；对于掌握秘密的人，求解NP问题只需要将秘密映射到相应的NP问题空间；而对于没有掌握秘密的人来说，绕过原始问题直接暴力求解NP问题，是计算上不可行的。</p><p>当然，为了保证非交互证明的公平性，通常系统会给出一个公共中立的随机序列（第三方），在证明时加入随机因子。我们考虑“两人分粥”问题，一种常用的公平策略是 Cut and Choose，即一个人分粥，另一个人选粥。这样便避免了证明者自身的偏好。但是，还有一种方法是，引入一个随机选择器，在一个人分粥完成以后，两个人随机地获取其中一份——这样在统计意义上便实现了公平。只不过，这需要一个可信、中立的第三方。</p><blockquote><p>你可以认为非交互式证明是把交互过程打包给了第三方。</p></blockquote><hr><p>2010年，Groth实现了基于椭圆曲线双线性映射的首个全能、非交互、常数大小的零知识证明协议；基于此又发展出了SNARKs协议，并经过不断优化后最终被应用到Zcash数字货币中。Zcash 使用的 NP 问题是 <strong>QAP</strong>（Quadratic Arithmetic Program），Zcash亦引入了可信的第三方。</p><p>对于Zcash数字货币的转账交易而来，零知识证明只需要证明三件事：</p><ol><li>发送的钱属于发送交易的人</li><li>发送者发送的金额等于接收者收到金额</li><li>发送者的钱确实被销毁了</li></ol><p>整个过程中矿工并不关心具体花了多少钱，以及参与交易的双方是谁；矿工只关心整个系统的货币是否守恒。</p><h1 id="延伸思考1-零知识证明的隐藏前提"><a href="#延伸思考1-零知识证明的隐藏前提" class="headerlink" title="延伸思考1-零知识证明的隐藏前提"></a>延伸思考1-零知识证明的隐藏前提</h1><blockquote><p>零知识的正式内容介绍已经结束了。这一部分的正确性无法保证，只是一种简单的思考。</p></blockquote><p>我的观点是，零知识证明需要一个问题是离线可解的。也就是在获得的相关信息不变的约束下，某个问题单纯通过计算就可以获得解答。</p><blockquote><p>在幻想学中这对应着想界不变。</p><p>如果一个问题是想界内不可解的，那么它无法变成一个零知识证明。</p></blockquote><p>如果一个问题，是无法单纯通过计算就可以获得解答，那么在不给出新的信息时，就无法构造出零知识证明。</p><p>从另一个角度，零知识证明的前提，应该是对于验证者来说：</p><ul><li>问题的解是藏在他已知的一个解空间之中的（<strong>可知性</strong>）</li><li>对于任意一个解空间中的位置，都可以进行离线的验证（<strong>可解性</strong>）</li></ul><p>也就是说，不是所有的问题和场景都可以构造零知识证明。</p><h1 id="延伸思考2-模拟器-时光机佯谬"><a href="#延伸思考2-模拟器-时光机佯谬" class="headerlink" title="延伸思考2-模拟器/时光机佯谬"></a>延伸思考2-模拟器/时光机佯谬</h1><blockquote><p><em>以下是对证明模拟器/时光机零知识的一个反驳。</em></p></blockquote><p>虽然我无法区分究竟是在哪个世界、哪个角色，或者有没有使用时光机作弊。</p><p>但是，simulator的确从真实世界获得了所有的必要的交互验证信息。</p><p>也就是说，如果simulator可以一直保持这样的超能力——那么无论simulator知不知道证明，它对我来说都具有有效的证明力。</p><p>也就是，当模拟器具有证明力的时候，它必须与真实世界有连接。一旦它失去连接，它就失去了证明力。也就是说，模拟器相当于真实世界的一个<strong>接口</strong> / <strong>Interface</strong>（<strong>它们是一体的不可分的</strong>）。模拟器不知道，但是模拟器和真实世界的联合体是知道证明的。</p><blockquote><p>说模拟器不知道证明，就好像在说，<strong>我的手不知道我脑袋的想法</strong>一样。</p><blockquote><p>就算对于真实世界来说，也不是真实角色的所有的“部分”都拥有零知识证明的信息。</p></blockquote></blockquote><p>也就是这样的证明方法是不足的。</p><p>应该用多重宇宙的方法，在无穷多的平行空间中，存在一个随机宇宙，它不能作弊，但是它也能做出跟真实世界一样的证明。这时，双方就没有连接了。</p><div><hr><font size=5>相关文章</font><ul><li><a href="https://stellarkey.github.io/%E6%8C%96%E7%9F%BF%E5%85%A5%E9%97%A8/">挖矿入门</a></li><li><a href="https://stellarkey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/">区块链课程实验</a></li><li><a href="https://stellarkey.github.io/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/">北斗UMA专项</a></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文为《 赛博智能经济与区块链》的公众号文章撰写任务。</summary>
    
    
    
    <category term="Think" scheme="https://stellarkey.github.io/categories/Think/"/>
    
    
    <category term="区块链" scheme="https://stellarkey.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>追逐星星</title>
    <link href="https://stellarkey.github.io/%E8%BF%BD%E9%80%90%E6%98%9F%E6%98%9F/"/>
    <id>https://stellarkey.github.io/%E8%BF%BD%E9%80%90%E6%98%9F%E6%98%9F/</id>
    <published>2020-10-17T14:17:41.000Z</published>
    <updated>2021-01-04T15:23:22.813Z</updated>
    
    <content type="html"><![CDATA[<p>那天我看到一颗星星，我想把它摘下。</p><p>而我只有我的百尺危楼。</p><hr><p>我在地面奔跑，我追逐晨昏线的移动。</p><p>在奔跑的过程中，我的血液开始沸腾起来。</p><p>在奔跑的过程中，我从黑暗的森林中穿过。</p><p>在奔跑的过程中，我始终抬头看着那颗星。</p><p>我有时会跨过极点，看到天空中曼妙的七彩极光。在这虚幻寒冷的自然幻象中，只有我的心还是滚烫。</p><p>流动的空气，星星闪动。</p><p>我看到了璀璨的星海，可我只注意到那颗特别的星星。</p><p>风很大。淹没了一切声响。</p><p>我跑过平原和山川，我似乎感到远方那颗星，隐隐的势。<span id="more"></span></p><p>我拼命地奔跑啊！</p><p>我的眼泪也悄悄地流淌。</p><p>我看着那若即若离的星光。忽然心中一动。</p><p>我心中一痛。</p><hr><p>时间流走了。</p><p>我的年岁流走了。</p><p>啊，我也什么也不剩下。</p><p>我看着模糊的星光。终于从中看到我逝去的影子。</p><p>是什么时候？</p><p>追逐星星成为了一种让我畏惧的行为。</p><p>是什么时候?</p><p>理性战胜了我。</p><p>那时我便知晓，我已不再是可以追逐星星的人。</p><p>啊，这恒久远的深空。</p><p>啊，这恒久远的寂静。</p><hr><p>我停下了脚步。</p><p>我感到久违的惯性，我感到一层又一层上涌的虚脱。</p><p>我累了。</p><p>我再也不要追逐星星。</p><p>在这星海里面，我早已迷失。</p><p>山顶的风好冷。</p><p>我遥看向无限延伸的地表。</p><p>终于有一天我明白，我脚上踩着的，才是唯一属于我的星星。</p><p>在我奔跑的过程中，我已将足迹遍撒星星的表面。</p><hr><p>嗯。</p><p>我将这颗星星上闭关。</p><p>也许有一天，当我理解了我的星星。</p><p>它也会变成一颗。</p><p>无比炙热。</p><p>无比闪亮的。</p><p>恒星。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;那天我看到一颗星星，我想把它摘下。&lt;/p&gt;
&lt;p&gt;而我只有我的百尺危楼。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我在地面奔跑，我追逐晨昏线的移动。&lt;/p&gt;
&lt;p&gt;在奔跑的过程中，我的血液开始沸腾起来。&lt;/p&gt;
&lt;p&gt;在奔跑的过程中，我从黑暗的森林中穿过。&lt;/p&gt;
&lt;p&gt;在奔跑的过程中，我始终抬头看着那颗星。&lt;/p&gt;
&lt;p&gt;我有时会跨过极点，看到天空中曼妙的七彩极光。在这虚幻寒冷的自然幻象中，只有我的心还是滚烫。&lt;/p&gt;
&lt;p&gt;流动的空气，星星闪动。&lt;/p&gt;
&lt;p&gt;我看到了璀璨的星海，可我只注意到那颗特别的星星。&lt;/p&gt;
&lt;p&gt;风很大。淹没了一切声响。&lt;/p&gt;
&lt;p&gt;我跑过平原和山川，我似乎感到远方那颗星，隐隐的势。</summary>
    
    
    
    <category term="Think" scheme="https://stellarkey.github.io/categories/Think/"/>
    
    
  </entry>
  
  <entry>
    <title>吉他进阶</title>
    <link href="https://stellarkey.github.io/%E5%90%89%E4%BB%96%E8%BF%9B%E9%98%B6%E7%AC%94%E8%AE%B0/"/>
    <id>https://stellarkey.github.io/%E5%90%89%E4%BB%96%E8%BF%9B%E9%98%B6%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-10T02:44:09.000Z</published>
    <updated>2021-01-04T15:24:56.047Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章主要是记录学习吉他技术的一些笔记。</p><p>上次上吉他课还是大一。高中就因为某些神奇的原因入了吉他的坑，不过一直停留在5325和天空之城前两小节的地步。是的，我还是不想放弃，荒废得太久，有时会感觉到目标和自我的位移。相去甚远。所以我又开了一个巨坑……<strong>音乐确实可以使我安静，使我什么也不想，它也可以使我更稳定地想，更感性地想。</strong>无论如何，都是极好的。<span id="more"></span>希望我可以有时间和足够的精力不致让一切付之东流。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.bilibili.com/video/BV1hb411G7Pf">元子弹吉他 - 指弹教程</a></p><p>吉他协会中级班，陈正扬</p><p>LOFTER博客：《吉他手和弦编配法则》 Lucifer_Koo</p><p>知乎专栏：《吉他实用手册》 子青</p><p>视频：《Nice Chord》 官大为，《You and me》 潇潇指弹</p><hr><p>一些简要的笔记：</p><blockquote><p>伴奏和旋律分开<br>熟悉之后要跟着节拍器练<br>拍泛音的位置<br>和弦切换的时候先确定主音（中指/食指）<br>知足（弹唱）<br>大鱼（指弹）<br>a hundred miles of home（弹唱）<br>西班牙吉他指弹曲</p></blockquote><h1 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h1><h2 id="十二平均律"><a href="#十二平均律" class="headerlink" title="十二平均律"></a>十二平均律</h2><h2 id="音名-amp-唱名"><a href="#音名-amp-唱名" class="headerlink" title="音名 &amp; 唱名"></a>音名 &amp; 唱名</h2><h2 id="吉他标准定弦"><a href="#吉他标准定弦" class="headerlink" title="吉他标准定弦"></a>吉他标准定弦</h2><h2 id="节奏"><a href="#节奏" class="headerlink" title="节奏"></a>节奏</h2><h2 id="圆滑音"><a href="#圆滑音" class="headerlink" title="圆滑音"></a>圆滑音</h2><h3 id="击弦"><a href="#击弦" class="headerlink" title="击弦"></a>击弦</h3><h3 id="勾弦"><a href="#勾弦" class="headerlink" title="勾弦"></a>勾弦</h3><h3 id="滑弦"><a href="#滑弦" class="headerlink" title="滑弦"></a>滑弦</h3><h2 id="扫弦强化"><a href="#扫弦强化" class="headerlink" title="扫弦强化"></a>扫弦强化</h2><h3 id="闷音"><a href="#闷音" class="headerlink" title="闷音"></a>闷音</h3><h3 id="制音"><a href="#制音" class="headerlink" title="制音"></a>制音</h3><p>Funky</p><h3 id="切音"><a href="#切音" class="headerlink" title="切音"></a>切音</h3><h1 id="和弦及其走向"><a href="#和弦及其走向" class="headerlink" title="和弦及其走向"></a>和弦及其走向</h1><h2 id="三和弦、七和弦"><a href="#三和弦、七和弦" class="headerlink" title="三和弦、七和弦"></a>三和弦、七和弦</h2><h2 id="封闭和弦"><a href="#封闭和弦" class="headerlink" title="封闭和弦"></a>封闭和弦</h2><h2 id="调式和弦"><a href="#调式和弦" class="headerlink" title="调式和弦"></a>调式和弦</h2><h2 id="所有和弦"><a href="#所有和弦" class="headerlink" title="所有和弦"></a>所有和弦</h2><h2 id="常用和弦"><a href="#常用和弦" class="headerlink" title="常用和弦"></a>常用和弦</h2><h1 id="和弦与音阶"><a href="#和弦与音阶" class="headerlink" title="和弦与音阶"></a>和弦与音阶</h1><h2 id="CAGED系统"><a href="#CAGED系统" class="headerlink" title="CAGED系统"></a>CAGED系统</h2><h2 id="五声音阶"><a href="#五声音阶" class="headerlink" title="五声音阶"></a>五声音阶</h2><h2 id="自然音阶"><a href="#自然音阶" class="headerlink" title="自然音阶"></a>自然音阶</h2><h2 id="教会调式"><a href="#教会调式" class="headerlink" title="教会调式"></a>教会调式</h2><h1 id="和弦改编"><a href="#和弦改编" class="headerlink" title="和弦改编"></a>和弦改编</h1><h2 id="Jingle-Bell"><a href="#Jingle-Bell" class="headerlink" title="Jingle Bell"></a>Jingle Bell</h2><h1 id="开放和弦"><a href="#开放和弦" class="headerlink" title="开放和弦"></a>开放和弦</h1><h2 id="A调"><a href="#A调" class="headerlink" title="A调"></a>A调</h2><h2 id="E调"><a href="#E调" class="headerlink" title="E调"></a>E调</h2><h1 id="【指弹曲目】"><a href="#【指弹曲目】" class="headerlink" title="【指弹曲目】"></a>【指弹曲目】</h1><h2 id="斯卡布罗集市"><a href="#斯卡布罗集市" class="headerlink" title="斯卡布罗集市"></a>斯卡布罗集市</h2><h2 id="夜的钢琴曲"><a href="#夜的钢琴曲" class="headerlink" title="夜的钢琴曲"></a>夜的钢琴曲</h2><h2 id="天空之城"><a href="#天空之城" class="headerlink" title="天空之城"></a>天空之城</h2><h2 id="少年的梦"><a href="#少年的梦" class="headerlink" title="少年的梦"></a>少年的梦</h2><blockquote><p>岸部真明</p></blockquote><h2 id="梦中的婚礼"><a href="#梦中的婚礼" class="headerlink" title="梦中的婚礼"></a>梦中的婚礼</h2><h2 id="Kiss-the-Rain"><a href="#Kiss-the-Rain" class="headerlink" title="Kiss the Rain"></a>Kiss the Rain</h2><h2 id="手纸（信）"><a href="#手纸（信）" class="headerlink" title="手纸（信）"></a>手纸（信）</h2><h2 id="千本樱"><a href="#千本樱" class="headerlink" title="千本樱"></a>千本樱</h2><blockquote><p>武士桑</p></blockquote><h2 id="鲸"><a href="#鲸" class="headerlink" title="鲸"></a>鲸</h2><blockquote><p>小松原俊</p></blockquote><h2 id="Unravel"><a href="#Unravel" class="headerlink" title="Unravel"></a>Unravel</h2><blockquote><p>武士桑</p></blockquote><h2 id="Merry-Christmas-Mr-Lawrence"><a href="#Merry-Christmas-Mr-Lawrence" class="headerlink" title="Merry Christmas Mr. Lawrence"></a>Merry Christmas Mr. Lawrence</h2><h1 id="【弹唱曲目】"><a href="#【弹唱曲目】" class="headerlink" title="【弹唱曲目】"></a>【弹唱曲目】</h1><h2 id="蒲公英的约定"><a href="#蒲公英的约定" class="headerlink" title="蒲公英的约定"></a>蒲公英的约定</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;这篇文章主要是记录学习吉他技术的一些笔记。&lt;/p&gt;
&lt;p&gt;上次上吉他课还是大一。高中就因为某些神奇的原因入了吉他的坑，不过一直停留在5325和天空之城前两小节的地步。是的，我还是不想放弃，荒废得太久，有时会感觉到目标和自我的位移。相去甚远。所以我又开了一个巨坑……&lt;strong&gt;音乐确实可以使我安静，使我什么也不想，它也可以使我更稳定地想，更感性地想。&lt;/strong&gt;无论如何，都是极好的。</summary>
    
    
    
    <category term="Learn" scheme="https://stellarkey.github.io/categories/Learn/"/>
    
    
    <category term="吉他" scheme="https://stellarkey.github.io/tags/%E5%90%89%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>北斗UMA专项</title>
    <link href="https://stellarkey.github.io/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/"/>
    <id>https://stellarkey.github.io/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/</id>
    <published>2020-10-07T10:39:06.000Z</published>
    <updated>2022-05-21T19:39:27.534Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.edu.confluxnetwork.org/"><strong>北斗计划 - 天枢</strong></a>。A little bit of recordings during the UMA session.<span id="more"></span></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://confluxnetwork.org/">Conflux</a></p><blockquote><p><a href="https://www.edu.confluxnetwork.org/%E8%AF%BE%E7%A8%8B">Conflux课程视频</a></p><p><a href="https://forum.conflux.fun">forum.conflux.fun</a> Conflux Forum，Homework &amp; Resources</p></blockquote><h1 id="Lecture-1-Introduction-Of-Blockchain"><a href="#Lecture-1-Introduction-Of-Blockchain" class="headerlink" title="Lecture 1 - Introduction Of Blockchain"></a>Lecture 1 - Introduction Of Blockchain</h1><blockquote><p>This part is the same as <a href="https://stellarkey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE/">https://stellarkey.github.io/区块链</a>.</p></blockquote><h1 id="Lecture-2-Cryptoeconomics-加密经济学"><a href="#Lecture-2-Cryptoeconomics-加密经济学" class="headerlink" title="Lecture 2 - Cryptoeconomics 加密经济学"></a>Lecture 2 - Cryptoeconomics 加密经济学</h1><blockquote><p><em>winner takes all</em></p></blockquote><p>Blockchains and cryptocurrency will generate a new and better internet.</p><h2 id="Token-通证"><a href="#Token-通证" class="headerlink" title="Token 通证"></a>Token 通证</h2><blockquote><p>SoV: Store of Value; MoE: Media of Exchange.</p><p>NFTs: non-fungible tokens（非同质化通证），代表特定数字资产的特殊通证</p><p>DeFi: 一类携带投票权的token</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008155242161.png" class="" title="Types of Tokens"><h3 id="Token-Design"><a href="#Token-Design" class="headerlink" title="Token Design"></a>Token Design</h3><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008160811087.png" class="" title="Multi Disciplinary Approach"><h3 id="3-D’s-of-Token-Design"><a href="#3-D’s-of-Token-Design" class="headerlink" title="3 D’s of Token Design"></a>3 D’s of Token Design</h3><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008160954105.png" class="" width="3" title="D" alt="s of Token Design"><h2 id="Conflux-Token-Economy-通证经济"><a href="#Conflux-Token-Economy-通证经济" class="headerlink" title="Conflux Token Economy 通证经济"></a>Conflux Token Economy 通证经济</h2><p>The cryptoeconomic goals for Conflux were to:<br>● Attract users to actively use the network for value add services, and global ventures.<br>● Remove any barriers to entry for those making meaningful contributions<br>● Support security, stability, and predictability of the network</p><h3 id="Key-problem"><a href="#Key-problem" class="headerlink" title="Key problem"></a>Key problem</h3><ul><li><strong>Inefficient On-Chain Storage</strong><br>● Ethereum users pay a one time fee at the time of including the code on chain, but the community bears the cost of keeping the contract in storage - much of the state-tree space on Ethereum is occupied by inactive smart contracts.</li><li><strong>Wasted Computation</strong><br>● BTC and ETH process blocks strictly one-by-one, creating a winner takes all characteristic for mining these chains, increasing the chance of forks.</li><li><strong>Low Throughput</strong><br>● Many PoW chains have a low TPS, and not suitable for payments.</li></ul><h3 id="Conflux-Token-CFX"><a href="#Conflux-Token-CFX" class="headerlink" title="Conflux Token (CFX)"></a>Conflux Token (CFX)</h3><p>Conflux’s unique native token is called CFX which is used for economic value transfers and payments for the cost of usage.</p><p>CFX was designed to serve as a:</p><ul><li>Medium of Exchange (<strong>MoE</strong>)</li><li>Store of Value (<strong>SoV</strong>)</li><li>A unit of account for blockchain based data</li><li>Miner Incentives (compensation for processing new blocks)</li></ul><p>CFX exists in two forms: <strong>Liquid</strong> and <strong>illiquid</strong>.</p><ul><li><strong>Liquid</strong>: they can be immediately transferred/used on Conflux<br>Network.</li><li><strong>Illiquid</strong>: Tokens are locked up (via staking) in three different forms:<br>1) Staked to earn the user interest<br>2) Bonded storage to purchase space on the network<br>3) Locked up to purchase votes in network governance</li></ul><h3 id="Staking-权益制"><a href="#Staking-权益制" class="headerlink" title="Staking 权益制"></a>Staking 权益制</h3><h4 id="Staking-for-Interest-利息"><a href="#Staking-for-Interest-利息" class="headerlink" title="Staking for Interest 利息"></a>Staking for Interest 利息</h4><p>Conflux Network distributes interest on all tokens at a rate of 4% per year.</p><h4 id="Staking-for-Storage-Space-存储"><a href="#Staking-for-Storage-Space-存储" class="headerlink" title="Staking for Storage Space 存储"></a>Staking for Storage Space 存储</h4><p>A user who wants to use Conflux Network for smart contract execution needs to place a pre-defined number of tokens into a bonded storage.</p><script type="math/tex; mode=display">1\; \text{CFX} = 1\; \text{kb}</script><h4 id="Staking-for-Voting-Rights-投票权"><a href="#Staking-for-Voting-Rights-投票权" class="headerlink" title="Staking for Voting Rights 投票权"></a>Staking for Voting Rights 投票权</h4><p>Conflux Network’s ecosystem fund in the future will transform into a DAO where Conflux stakeholders vote on operations using voting rights.</p><p>To cast a vote, users must lock up their tokens, where the time locked up determines the number of votes. Voting rights awarded according to:</p><script type="math/tex; mode=display">\text{Votes} = \text{Number of quarters} \times \text{number of tokens} \times 0.25</script><h3 id="Mining-Rewards-挖矿奖励"><a href="#Mining-Rewards-挖矿奖励" class="headerlink" title="Mining Rewards 挖矿奖励"></a>Mining Rewards 挖矿奖励</h3><p>Miners receive income from three sources:</p><ul><li><strong>Transaction User Fees</strong>: In the long term user fees will make the majority of miner income</li><li><strong>Block Rewards</strong>: In the short term, block rewards will make the majority of miner income.</li><li><strong>Interest Income</strong>: Interest on bonded storage tokens are given to miners.</li></ul><h3 id="Economy-System"><a href="#Economy-System" class="headerlink" title="Economy System"></a>Economy System</h3><blockquote><p>Adjust Miner revenue as function of adoption.</p></blockquote><p>Real application is not living in a vacuum, but a complex and random world. That means we have to introduce some random mechanisms into the model.</p><h1 id="Lecture-3-Fundamental-Concepts-amp-Tools"><a href="#Lecture-3-Fundamental-Concepts-amp-Tools" class="headerlink" title="Lecture 3 - Fundamental Concepts &amp; Tools"></a>Lecture 3 - Fundamental Concepts &amp; Tools</h1><blockquote><p><em>从用户的角度理解区块链。</em></p></blockquote><h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul><li>Conflux Portal (wallet)  ▸ <a href="https://portal.conflux-chain.org">portal.conflux-chain.org</a></li><li>Conflux Scan (block chain explorer)  ▸ <a href="https://confluxscan.io">confluxscan.io</a></li><li>Conflux Studio (IDE)  ▸ <a href="https://github.com/ObsidianLabs/ConfluxStudio">github.com/ObsidianLabs/ConfluxStudio</a></li><li>js-conflux-sdk (Node.js SDK)  ▸ <a href="https://npmjs.com/package/js-conflux-sdk">npmjs.com/package/js-conflux-sdk</a></li><li>Discord  ▸ <a href="https://discord.com/invite/aCZkf2C">discord.com/invite/aCZkf2C</a></li><li>Conflux Forum  ▸ <a href="https://forum.conflux.fun">forum.conflux.fun</a></li></ul><h2 id="Accounts-amp-Transactions-账户和交易"><a href="#Accounts-amp-Transactions-账户和交易" class="headerlink" title="Accounts &amp; Transactions 账户和交易"></a>Accounts &amp; Transactions 账户和交易</h2><h3 id="Digital-signatures-数字签名"><a href="#Digital-signatures-数字签名" class="headerlink" title="Digital signatures 数字签名"></a>Digital signatures 数字签名</h3><p><strong>digital signatures</strong> are cryptographic tools and algorithms used to prove message authenticity and integrity</p><ul><li><strong><font color=blue>authenticity</font></strong>（真实性）: the sender is who they claim to be</li><li><strong><font color=blue>integrity</font></strong>（完整性）: the message has not been modified</li></ul><blockquote><p>大多数区块链系统使用椭圆曲线密码学，即<strong>椭圆曲线数字签名算法</strong>（<strong><font color=red>ECDSA</font></strong>）。【非对称加密】</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/ds_subpage_diagram2.svg" class="" title="https:&#x2F;&#x2F;www.docusign.com&#x2F;how-it-works&#x2F;electronic-signature&#x2F;digital-signature&#x2F;digital-signature-faq"><h4 id="Wallets"><a href="#Wallets" class="headerlink" title="Wallets"></a>Wallets</h4><p>Your <strong><font color=red>identity</font></strong> is: your <strong><font color=red>private-public keypair</font></strong></p><blockquote><p>钱包就是一个存储 identity 的容器。</p></blockquote><h3 id="js-conflux-sdk"><a href="#js-conflux-sdk" class="headerlink" title="js-conflux-sdk"></a><code>js-conflux-sdk</code></h3><blockquote><p>read and run the full example</p><ul><li><a href="https://gist.github.com/Thegaram/0652c8e359f73b1772311c8ed34a32c0">https://gist.github.com/Thegaram/0652c8e359f73b1772311c8ed34a32c0</a></li></ul><p>js-conflux-sdk documentation</p><ul><li><a href="https://www.npmjs.com/package/js-conflux-sdk/v/1.0.0-alpha.4">https://www.npmjs.com/package/js-conflux-sdk/v/1.0.0-alpha.4</a></li></ul></blockquote><p>Using the upfront 3 lines to install <code>js-conflux-sdk@1.0.0-alpha.4</code>（注意版本）。</p><blockquote><p>Or if you have installed a WSL like me…</p><blockquote><p>Newer version might have different actions.</p></blockquote></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> conflux-playground</span><br><span class="line">$ <span class="built_in">cd</span> conflux-playground</span><br><span class="line">$ npm install js-conflux-sdk@1.0.0-alpha.4</span><br><span class="line">$ node   <span class="comment"># enter coding mode</span></span><br></pre></td></tr></table></figure><h3 id="Key-amp-Address-Coding-practice"><a href="#Key-amp-Address-Coding-practice" class="headerlink" title="Key &amp; Address - Coding practice"></a>Key &amp; Address - Coding practice</h3><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007193146928.png" class="" title="the process"><blockquote><p>This process is nearly impossible to do it backwards.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import &quot;js-conflux-sdk&quot;</span></span><br><span class="line"><span class="keyword">const</span> util = <span class="built_in">require</span>(<span class="string">&#x27;js-conflux-sdk/src/util&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// generate a random private key</span></span><br><span class="line"><span class="keyword">const</span> privkey = util.<span class="property">sign</span>.<span class="title function_">randomPrivateKey</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;private key:&#x27;</span>, util.<span class="property">format</span>.<span class="title function_">hex</span>(privkey));</span><br><span class="line"></span><br><span class="line"><span class="comment">// derive public key from private key</span></span><br><span class="line"><span class="keyword">const</span> pubkey = util.<span class="property">sign</span>.<span class="title function_">privateKeyToPublicKey</span>(privkey);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;public key:&#x27;</span>, util.<span class="property">format</span>.<span class="title function_">hex</span>(pubkey));</span><br><span class="line"></span><br><span class="line"><span class="comment">// derive address from public key</span></span><br><span class="line"><span class="keyword">const</span> address = util.<span class="property">sign</span>.<span class="title function_">publicKeyToAddress</span>(pubkey);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;address:&#x27;</span>, util.<span class="property">format</span>.<span class="title function_">hex</span>(address));</span><br></pre></td></tr></table></figure><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007193507875.png" class="" title="coding reproduction"><h4 id="sign-a-message-using-our-private-key"><a href="#sign-a-message-using-our-private-key" class="headerlink" title="sign a message using our private key"></a>sign a message using our private key</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Message</span> = <span class="built_in">require</span>(<span class="string">&#x27;js-conflux-sdk/src/message&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> msg = <span class="keyword">new</span> <span class="title class_">Message</span>(<span class="string">&quot;Hello! Sincerely, Vel&quot;</span>);</span><br><span class="line">msg.<span class="title function_">sign</span>(privkey);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;signed message:&#x27;</span>, msg)</span><br></pre></td></tr></table></figure><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007194413669.png" class="" title="coding reproduction"><h4 id="check-message-authenticity"><a href="#check-message-authenticity" class="headerlink" title="check message authenticity"></a>check message authenticity</h4><blockquote><p>检查信息是否被修改。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// const Message = require(&#x27;js-conflux-sdk/src/message&#x27;);</span></span><br><span class="line"><span class="keyword">const</span> assert = <span class="built_in">require</span>(<span class="string">&#x27;assert&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> recovered = <span class="title class_">Message</span>.<span class="title function_">recover</span>(msg.<span class="property">signature</span>, msg.<span class="property">hash</span>)</span><br><span class="line">assert.<span class="title function_">equal</span>(recovered, util.<span class="property">format</span>.<span class="title function_">hex</span>(pubkey))</span><br></pre></td></tr></table></figure><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007195754366.png" class="" title="coding reproduction"><h4 id="tamper-with-message"><a href="#tamper-with-message" class="headerlink" title="tamper with message"></a>tamper with message</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;message:&#x27;</span>, msg.<span class="property">message</span>);</span><br><span class="line">msg.<span class="property">message</span> = <span class="string">&quot;Hello! Sincerely, ----- Hacker&quot;</span>;</span><br><span class="line">recovered = <span class="title class_">Message</span>.<span class="title function_">recover</span>(msg.<span class="property">signature</span>, msg.<span class="property">hash</span>)</span><br><span class="line">assert.<span class="title function_">notEqual</span>(recovered, util.<span class="property">format</span>.<span class="title function_">hex</span>(pubkey))</span><br></pre></td></tr></table></figure><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007195720862.png" class="" title="coding reproduction"><h4 id="full-example"><a href="#full-example" class="headerlink" title="full example"></a>full example</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Account</span> = <span class="built_in">require</span>(<span class="string">&#x27;js-conflux-sdk/src/account&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> assert = <span class="built_in">require</span>(<span class="string">&#x27;assert&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Conflux</span>, <span class="title class_">Drip</span>, <span class="title class_">Message</span>, util &#125; = <span class="built_in">require</span>(<span class="string">&#x27;js-conflux-sdk&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// ---- generate random private key ----</span></span><br><span class="line">    <span class="keyword">const</span> privkey = util.<span class="property">sign</span>.<span class="title function_">randomPrivateKey</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;private key:&#x27;</span>, util.<span class="property">format</span>.<span class="title function_">hex</span>(privkey));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---- derive public key ----</span></span><br><span class="line">    <span class="keyword">const</span> pubkey = util.<span class="property">sign</span>.<span class="title function_">privateKeyToPublicKey</span>(privkey);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;public key:&#x27;</span>, util.<span class="property">format</span>.<span class="title function_">hex</span>(pubkey));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---- derive address ----</span></span><br><span class="line">    <span class="keyword">const</span> address = util.<span class="property">sign</span>.<span class="title function_">publicKeyToAddress</span>(pubkey);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;address:&#x27;</span>, util.<span class="property">format</span>.<span class="title function_">hex</span>(address));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---- sign message ----</span></span><br><span class="line">    <span class="keyword">const</span> msg = <span class="keyword">new</span> <span class="title class_">Message</span>(<span class="string">&#x27;Hello! Sincerely, Peter&#x27;</span>);</span><br><span class="line">    msg.<span class="title function_">sign</span>(privkey);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;signed message:&#x27;</span>, msg)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---- check signature ----</span></span><br><span class="line">    <span class="keyword">let</span> recovered = <span class="title class_">Message</span>.<span class="title function_">recover</span>(msg.<span class="property">signature</span>, msg.<span class="property">hash</span>)</span><br><span class="line">    assert.<span class="title function_">strictEqual</span>(recovered, util.<span class="property">format</span>.<span class="title function_">hex</span>(pubkey))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---- detect tampering using signature ----</span></span><br><span class="line">    msg.<span class="property">message</span> = <span class="string">&#x27;Hello! Sincerely, ----- Hacker&#x27;</span>;</span><br><span class="line">    recovered = <span class="title class_">Message</span>.<span class="title function_">recover</span>(msg.<span class="property">signature</span>, msg.<span class="property">hash</span>)</span><br><span class="line">    assert.<span class="title function_">notStrictEqual</span>(recovered, util.<span class="property">format</span>.<span class="title function_">hex</span>(pubkey))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---- create and sign transaction ----</span></span><br><span class="line">    <span class="keyword">const</span> local_account = <span class="keyword">new</span> <span class="title class_">Account</span>(&#123; <span class="attr">privateKey</span>: util.<span class="property">format</span>.<span class="title function_">hex</span>(privkey) &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> tx = local_account.<span class="title function_">signTransaction</span>(&#123;</span><br><span class="line">        <span class="attr">from</span>: util.<span class="property">format</span>.<span class="title function_">hex</span>(address),</span><br><span class="line">        <span class="attr">to</span>: util.<span class="property">format</span>.<span class="title function_">hex</span>(address),</span><br><span class="line">        <span class="attr">value</span>: <span class="title class_">Drip</span>.<span class="title function_">fromCFX</span>(<span class="number">10</span>).<span class="title function_">toDrip</span>(),</span><br><span class="line">        <span class="attr">nonce</span>: <span class="string">&#x27;0x00&#x27;</span>,</span><br><span class="line">        <span class="attr">gasPrice</span>: <span class="string">&#x27;0x00&#x27;</span>,</span><br><span class="line">        <span class="attr">gas</span>: <span class="string">&#x27;0x00&#x27;</span>,</span><br><span class="line">        <span class="attr">storageLimit</span>: <span class="string">&#x27;0x00&#x27;</span>,</span><br><span class="line">        <span class="attr">epochHeight</span>: <span class="string">&#x27;0x00&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;transaction:&#x27;</span>, tx);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;transaction hash:&#x27;</span>, tx.<span class="property">hash</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---- send transaction ----</span></span><br><span class="line">    <span class="keyword">const</span> conflux = <span class="keyword">new</span> <span class="title class_">Conflux</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://mainnet-jsonrpc.conflux-chain.org:12537&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> import your Conflux Portal wallet</span></span><br><span class="line">    <span class="comment">// follow: Account Details, Export Private Key</span></span><br><span class="line">    <span class="comment">// make sure to add a &#x27;0x&#x27; prefix to your private key</span></span><br><span class="line">    <span class="comment">// make sure your account has sufficient balance</span></span><br><span class="line">    <span class="keyword">const</span> account = conflux.<span class="title class_">Account</span>(&#123; <span class="attr">privateKey</span>: util.<span class="property">format</span>.<span class="title function_">hex</span>(privkey) &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set recipient</span></span><br><span class="line">    <span class="keyword">const</span> to = <span class="string">&#x27;0x145834072064DcD9B931237B5aEe217c241e3644&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set value to send</span></span><br><span class="line">    <span class="keyword">const</span> value = <span class="title class_">Drip</span>.<span class="title function_">fromCFX</span>(<span class="number">10</span>).<span class="title function_">toDrip</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> epochHeight = <span class="keyword">await</span> conflux.<span class="title function_">getEpochNumber</span>();</span><br><span class="line">    <span class="keyword">const</span> estimate = <span class="keyword">await</span> conflux.<span class="title function_">estimateGasAndCollateral</span>(&#123; to, value &#125;);</span><br><span class="line">    <span class="keyword">const</span> gasPrice = <span class="keyword">await</span> conflux.<span class="title function_">getGasPrice</span>();</span><br><span class="line">    <span class="keyword">const</span> nonce = <span class="keyword">await</span> conflux.<span class="title function_">getNextNonce</span>(account.<span class="property">address</span>);</span><br><span class="line">    <span class="keyword">const</span> status = <span class="keyword">await</span> conflux.<span class="title function_">getStatus</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> txHash = <span class="keyword">await</span> account.<span class="title function_">sendTransaction</span>(&#123;</span><br><span class="line">        to,</span><br><span class="line">        value,</span><br><span class="line">        nonce,</span><br><span class="line">        gasPrice,</span><br><span class="line">        <span class="attr">gas</span>: estimate.<span class="property">gasUsed</span>,</span><br><span class="line">        <span class="attr">storageLimit</span>: estimate.<span class="property">storageCollateralized</span>,</span><br><span class="line">        <span class="attr">chainId</span>: status.<span class="property">chainId</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">        epochHeight,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;sending transaction, hash:&#x27;</span>, txHash);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// wait 10 seconds</span></span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">10</span> * <span class="number">1000</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get transaction</span></span><br><span class="line">    <span class="keyword">const</span> transaction = <span class="keyword">await</span> conflux.<span class="title function_">getTransactionByHash</span>(txHash);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;transaction:&#x27;</span>, transaction);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// wait 10 seconds</span></span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">10</span> * <span class="number">1000</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get receipt</span></span><br><span class="line">    <span class="keyword">const</span> receipt = <span class="keyword">await</span> conflux.<span class="title function_">getTransactionReceipt</span>(txHash);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;receipt&#x27;</span>, receipt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">main</span>()</span><br></pre></td></tr></table></figure><h3 id="Account"><a href="#Account" class="headerlink" title="Account"></a>Account</h3><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007200959708.png" class="" title="Account"><p>▸for each <strong>identity</strong>, there is a <strong>corresponding account</strong> maintained on the blockchain<br>▸the account <strong>captures a state at a given time</strong>: the current balance, the number of transactions sent, code, …<br>▸your <strong>address</strong> will not change (though you might have multiple addresses)<br>▸the <strong>account state</strong> associated to your address will change as you send and receive transactions</p><hr><p><strong><font color=blue>JSON-representation of a new account</font></strong>:</p><blockquote><p>see: <a href="https://developer.conflux-chain.org/docs/conflux-doc/docs/json_rpc/#cfx_getaccount">https://developer.conflux-chain.org/docs/conflux-doc/docs/json_rpc/#cfx_getaccount</a></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;accumulatedInterestReturn&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;admin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x0000000000000000000000000000000000000000&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;codeHash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82...&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;collateralForStorage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nonce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;stakingBalance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x0&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>each account has a <strong><font color=red>balance</font></strong>(CFX余额) associated with it.</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007202822926.png" class="" title="balance denominations"><p><strong><font color=red>nonce</font></strong>(交易数): number of accepted transactions from this account</p><blockquote><p>SIMPLE PAYMENT TRANSACTIONS:</p><ul><li>simply sending a number of <strong>coins</strong> (tokens) from one address to another</li><li>the sender <strong>signs</strong> the transaction using their private key</li><li>if you do not have my private key, you cannot send on my behalf</li></ul></blockquote><h3 id="Transaction"><a href="#Transaction" class="headerlink" title="Transaction"></a>Transaction</h3><p><strong><font color=blue>JSON-representation of a transaction</font></strong>:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x1dBDA5dD2e952914bC74a802510D0FA59F9d7636&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x145834072064DcD9B931237B5aEe217c241e3644&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x3635c9adc5dea00000&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;gas&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x5208&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;gasPrice&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x174876e800&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nonce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;v&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;r&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x27e5cb110dd198b8fc963d4741ec0840400a6351d9e0c458eed...&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;s&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x2c486d8e26da3c867fbcf4ab242af1265a5036c5e23ea42c8ab...&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong><font color=red>from</font></strong> / <strong><font color=red>to</font></strong>: payment transactions specify a <strong>sender</strong> and a <strong>receiver</strong></p><p><strong><font color=red>value</font></strong>: you also need to specify <strong>how much you want to send</strong>（转账金额）</p><p><strong><font color=red>gas</font></strong> / <strong><font color=red>gasPrice</font></strong>: you might need to <strong>pay for transaction</strong>（交易费）</p><p><strong><font color=red>nonce</font></strong>: nonce is the number of the transaction（交易号）</p><p><strong><font color=red>data</font></strong>: data is used for <strong>smart contract calls</strong>（用于智能合约）</p><p><strong><font color=red>SIGNATURE{v, r, s}</font></strong>:  a transaction needs to be <strong>signed by the sender</strong>（签名）</p><p>transactions are identified by the transaction hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x53fe995edeec7d241791ff32635244e94ecfd722c9fe90f34ddf59082d814514</span><br></pre></td></tr></table></figure><blockquote><p>You can do queries like these:<br>▸ Check if transaction 0x53fe995 succeeded<br>▸ Find the sender address of transaction 0x53fe995<br>▸ Get the execution results of transaction 0x53fe995</p></blockquote><h2 id="Distributed-ledger-分布式账本"><a href="#Distributed-ledger-分布式账本" class="headerlink" title="Distributed ledger 分布式账本"></a>Distributed ledger 分布式账本</h2><h3 id="Block-区块"><a href="#Block-区块" class="headerlink" title="Block 区块"></a>Block 区块</h3><blockquote><p>a block is just a list of transactions (<strong>block body</strong>)<br>… plus some metadata (<strong>block header</strong>)</p></blockquote><p><strong><font color=blue>JSON-representation of a block</font></strong>:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0xc8f5310402330767adb624f436fa579ca3a6e28bb33f09ec...&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;miner&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x1905c5723adf66f14f9a33d6d99263cb00c2992c&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nonce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x30176787e0290260&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;parentHash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0xb11d32edb8e8f09941000c898269f665d275342694...&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;epochNumber&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x4bad97&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;refereeHashes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> ... <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;transactions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;0x0b5b3d8f542a3c830ec57b83c07d1282241712478edab3ba8e1a05...&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;0x96b46d10999cda47c4fda1dab7e8e29ce68f5b9ae2d707fde008c7...&quot;</span><span class="punctuation">,</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong><font color=red>hash</font></strong>: just like txs, blocks are uniquely identified by their hashes</p><p><strong><font color=red>miner</font></strong> &amp; <strong><font color=red>nonce</font></strong>: some information about the creator of the block (see PoW)</p><p><strong><font color=red>parentHash</font></strong> / <strong><font color=red>epochNumber</font></strong> / <strong><font color=red>refereeHashes</font></strong>: information about the blocks position on our ledger</p><h3 id="Blockchain"><a href="#Blockchain" class="headerlink" title="Blockchain"></a>Blockchain</h3><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007210215805.png" class="" title="structure of the blockchain"><h3 id="Tree-graph"><a href="#Tree-graph" class="headerlink" title="Tree-graph"></a>Tree-graph</h3><p>Conflux uses a Tree-Graph ledger instead of a single chain</p><blockquote><p>… this way, if two blocks are created simultaneously, the system can use both, thus increasing throughput and security</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007210512219.png" class="" title="structure of the tree-graph"><h3 id="THE-LEDGER-OF-CONFLUX-—-FURTHER-READING"><a href="#THE-LEDGER-OF-CONFLUX-—-FURTHER-READING" class="headerlink" title="THE LEDGER OF CONFLUX — FURTHER READING"></a>THE LEDGER OF CONFLUX — FURTHER READING</h3><ul><li>Conflux 101 Webinar<ul><li><a href="https://youtube.com/playlist?list=PLoO0tXb18JZ8atJW5bU-GCiykL9yfc3xR">youtube.com/playlist?list=PLoO0tXb18JZ8atJW5bU-GCiykL9yfc3xR</a></li></ul></li><li>whitepaper<ul><li><a href="https://usenix.org/conference/atc20/presentation/li-chenxing">usenix.org/conference/atc20/presentation/li-chenxing</a></li></ul></li><li>technical presentation<ul><li><a href="https://confluxnetwork.org/static/Conflux_Technical_Presentation_20200309.pdf">confluxnetwork.org/static/Conflux_Technical_Presentation_20200309.pdf</a></li></ul></li></ul><h2 id="Smart-contracts-智能合约"><a href="#Smart-contracts-智能合约" class="headerlink" title="Smart contracts 智能合约"></a>Smart contracts 智能合约</h2><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007210854052.png" class="" title="smart contract"><p>imagine that your mailbox has <strong>a machine inside</strong> that decides what to do with the coins</p><p>moreover, you can also <strong>pass it notes with instructions, not just coins</strong></p><p>this machine can be unique to each box, built by its owner</p><hr><p><strong><font color=blue>JSON-representation of a smart contract transaction</font></strong>:</p><p>智能合约的两个特征：</p><ul><li><strong><font color=red>to</font></strong> starts with an <code>8</code>（normal contract starts with a  <code>1</code>）</li><li><strong><font color=red>data</font></strong> field is <strong>not empty</strong>（某种方法签名）</li></ul><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007211228922.png" class="" title="JSON-representation of a smart contract transaction"><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x1dBDA5dD2e952914bC74a802510D0FA59F9d7636&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x8b017126d2fede908a86b36b43969f17d25f3770&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x3635c9adc5dea00000&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;gas&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x5208&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;gasPrice&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x174876e800&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nonce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0xa6f2ae3a&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;v&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;r&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x27e5cb110dd198b8fc963d4741ec0840400a6351d9e0c458eed...&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;s&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x2c486d8e26da3c867fbcf4ab242af1265a5036c5e23ea42c8ab...&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><hr><h3 id="transaction-receipt-交易收据"><a href="#transaction-receipt-交易收据" class="headerlink" title="transaction receipt 交易收据"></a>transaction receipt 交易收据</h3><p><strong><font color=blue>JSON-representation of a receipt</font></strong>(收据):</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0xb2988210c05a43ebd76575f5421ef84b120ebf80&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0xb2988210c05a43ebd76575f5421ef84b120ebf80&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;transactionHash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x53fe995edeec7d241791ff32635244e94ecfd7...&quot;</span></span><br><span class="line">    <span class="attr">&quot;epochNumber&quot;</span><span class="punctuation">:</span> <span class="number">451990</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;blockHash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0xbb1eea3c8a574dc19f7d8311a2096e23a39f12e649a...&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outcomeStatus&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span>   <span class="comment">// 0 means succeed</span></span><br><span class="line">    <span class="attr">&quot;contractCreated&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span>   <span class="comment">// created successfully</span></span><br><span class="line">    <span class="attr">&quot;gasUsed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x5208&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;logs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;logsBloom&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x0000000000000000000000000000000000000000000...&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong><font color=red>from</font></strong> / <strong><font color=red>to</font></strong> / <strong><font color=red>transactionHash</font></strong>: transaction info</p><p><strong><font color=red>epochNumber</font></strong> / <strong><font color=red>blockHash</font></strong> / <strong><font color=red>index</font></strong>: location on the ledger（对某些应用程序有用）</p><p><strong><font color=red>outcomeStatus</font></strong> / <strong><font color=red>contractCreated</font></strong> / <strong><font color=red>gasUsed</font></strong> / <strong><font color=red>logs</font></strong> / <strong><font color=red>logsBloom</font></strong>: execution results</p><h2 id="Inspect-data-on-the-ledger"><a href="#Inspect-data-on-the-ledger" class="headerlink" title="Inspect data on the ledger"></a>Inspect data on the ledger</h2><h3 id="Conflux-Scan-Blockchain-Explorers"><a href="#Conflux-Scan-Blockchain-Explorers" class="headerlink" title="Conflux Scan(Blockchain Explorers)"></a>Conflux Scan(Blockchain Explorers)</h3><p>blockchain explorers are data aggregators that you can use to <strong>query accounts, transactions, blocks</strong>, etc.</p><p>for Conflux, the official blockchain explorer is called <strong>Conflux Scan</strong>（<a href="https://confluxscan.io">confluxscan.io</a>）</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201007234130612.png" class="" title="Conflux Scan"><h2 id="Set-up-wallet-amp-Send-transactions"><a href="#Set-up-wallet-amp-Send-transactions" class="headerlink" title="Set up wallet &amp; Send transactions"></a>Set up wallet &amp; Send transactions</h2><h3 id="wallet’s-usage"><a href="#wallet’s-usage" class="headerlink" title="wallet’s usage"></a>wallet’s usage</h3><p>a keypair represents an identity on the blockchain</p><ul><li><strong>public key / address</strong>: your public identity</li><li><strong>private key</strong>: your authorization to act on behalf of this identity</li></ul><p>if you know an account’s private key, you can sign transactions from that account</p><ul><li><strong>storing keys securely is challenging</strong> even for experts</li></ul><hr><ul><li><strong><font color=blue>store private keys, create and sign transactions</font></strong></li><li><strong><font color=blue>connect to a blockchain node</font></strong></li><li><strong><font color=blue>send transactions into the system</font></strong></li><li><strong><font color=blue>monitor transaction and account state</font></strong></li></ul><hr><h3 id="Conflux-Portal-Wallet"><a href="#Conflux-Portal-Wallet" class="headerlink" title="Conflux Portal(Wallet)"></a>Conflux Portal(Wallet)</h3><p>Conflux Portal（<a href="https://portal.conflux-chain.org">portal.conflux-chain.org</a>） is the wallet we will use for this course</p><blockquote><p>it is a <strong>browser extension</strong>(浏览器扩展) available for all major browsers</p><p>it allows you to send simple transactions or even interact with smart contracts and dapps</p><p>Conflux Portal is based on <strong>MetaMask</strong> (Ethereum)</p></blockquote><h4 id="Create-a-wallet"><a href="#Create-a-wallet" class="headerlink" title="Create a wallet"></a>Create a wallet</h4><ul><li>first, we need to install the extension</li><li>during onboarding, we can choose whether we want to import and existing wallet or create a new one</li><li>the wallet will generate a private key and store it encrypted using a password you choose</li><li>instead of a hex string, you’ll see the private key as a mnemonic phrase — 12 English words</li></ul><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008002548277.png" class="" title="Created a wallet"><p>我们可以通过“存入”（Deposit）按钮来获取一些没有任何价值的免费代币。</p><p>完成后，截取message的tx字段（交易哈希值），将可以在Conflux Scan上搜索到相应的交易：</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008002946068.png" class="" title="Conflux Scan搜索交易"><p>执行一笔转账交易：</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008003136978.png" class="" title="执行一笔转账交易"><h3 id="Wallet-Security-101"><a href="#Wallet-Security-101" class="headerlink" title="Wallet Security 101"></a>Wallet Security 101</h3><ul><li>remember: if you lose your private key (seed phrase), no one will be able to recover your funds</li><li>remember: if someone gains access to your private key, they can (and will) steal your funds</li><li>best to backup seed phrase on a piece of paper or using a password manager</li><li>for higher security, use a hardware wallet</li></ul><h3 id="How-to-acquire-tokens"><a href="#How-to-acquire-tokens" class="headerlink" title="How to acquire tokens?"></a>How to acquire tokens?</h3><p>▸ get free test CFX on testnet or Oceanus through faucet</p><p>▸ earn CFX through mining (<a href="https://mining.confluxnetwork.org">mining.confluxnetwork.org</a>)</p><p>▸ earn FC through bounty (<a href="https://bounty.conflux-chain.org">bounty.conflux-chain.org</a>)</p><p>▸ earn FC through grants (<a href="https://grants.confluxnetwork.org">grants.confluxnetwork.org</a>)</p><p>▸ buy FC on <a href="https://moondex.io">moondex.io</a> or other exchanges（if you have another digital currency like bitcoin）</p><blockquote><p>Interactive map of Conflux nodes (<a href="http://confluxmap.com/">confluxmap.com 5</a>)</p></blockquote><h2 id="Interact-with-dapps-去中心化应用"><a href="#Interact-with-dapps-去中心化应用" class="headerlink" title="Interact with dapps(去中心化应用)"></a>Interact with dapps(去中心化应用)</h2><p>Demo：<a href="http://167.172.160.61">http://167.172.160.61</a></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008004353768.png" class="" title="买一张ticket"><p>查询相应的智能合约交易记录：</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008004514650.png" class="" title="transaction"><h1 id="Homework-of-Lecture-3"><a href="#Homework-of-Lecture-3" class="headerlink" title="Homework of Lecture 3"></a>Homework of Lecture 3</h1><blockquote><p><a href="https://forum.conflux.fun/t/topic/2910">Lecture 3 - Homework &amp; Resources</a></p><blockquote><p>Homework is done by a group.</p></blockquote></blockquote><h2 id="transaction-classification"><a href="#transaction-classification" class="headerlink" title="transaction classification"></a>transaction classification</h2><p>1)On which network is this transaction? <code>0xb97e091e42252571072ae9c605bda16c8f2568cb6a4ff8fd717d384123074b55</code></p><blockquote><p>Conflux now have a test network(<strong>Conflux Testnet</strong>) , and a pre-mainnet network(<strong>Conflux Oceanus</strong>).</p><p>But none of those networks have the requested transaction.</p></blockquote><h2 id="block-match-search"><a href="#block-match-search" class="headerlink" title="block match search"></a>block match search</h2><p>2)Find a block with 20 or more transactions and send us the block hash.</p><blockquote><p>0x618f924e1f6c7eab371551d8a5e407aeecd9a192bdd130204dc1ccc42566360f</p><blockquote><p>note: this block is from the <strong>Conflux Testnet</strong>,and contains <strong>280</strong> transactions.</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008022034530.png" class="" title="block"><p>And there is a JS code to automatically find a block with 20 or more transactions:</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Conflux</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;js-conflux-sdk&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// initalize a Conflux object</span></span><br><span class="line">  <span class="keyword">const</span> cfx = <span class="keyword">new</span> <span class="title class_">Conflux</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://mainnet-jsonrpc.conflux-chain.org:12537&#x27;</span>,</span><br><span class="line">    <span class="attr">defaultGasPrice</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">defaultGas</span>: <span class="number">1000000</span>,</span><br><span class="line">    <span class="attr">logger</span>: <span class="variable language_">console</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> epochStart = <span class="number">7742635</span></span><br><span class="line">  <span class="keyword">let</span> answer = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = epochStart; i&gt; <span class="number">0</span>; i--)&#123;</span><br><span class="line">    <span class="keyword">const</span> blockArray = <span class="keyword">await</span> cfx.<span class="title function_">getBlocksByEpochNumber</span>(i)</span><br><span class="line">    <span class="keyword">for</span> (block <span class="keyword">in</span> blockArray) &#123;</span><br><span class="line">        <span class="keyword">let</span> result = <span class="keyword">await</span> cfx.<span class="title function_">getBlockByHash</span>(blockArray[block])</span><br><span class="line">        <span class="keyword">if</span> (result[<span class="string">&#x27;transactions&#x27;</span>].<span class="property">length</span> &gt;=<span class="number">20</span> ) &#123;</span><br><span class="line">            answer = result[<span class="string">&#x27;hash&#x27;</span>]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (answer) <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;result is &#x27;</span> + answer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">main</span>();</span><br></pre></td></tr></table></figure><blockquote><p>By running it, we can find the results: <code>0x273d13668462ae7cbb14f25fea0eb8bdbac2dfcd4571a3c5139f08a864d160ba</code></p><blockquote><p>note: this block is from the <strong>Conflux Oceanus</strong>,and contains <strong>22</strong> transactions.</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008110908510.png" class="" title="0x273d13668462ae7cbb14f25fea0eb8bdbac2dfcd4571a3c5139f08a864d160ba"><p>Here is the running test:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008114435446.png" class="" title="running test"></blockquote><h2 id="failed-transaction"><a href="#failed-transaction" class="headerlink" title="failed transaction"></a>failed transaction</h2><p>3)Try to find a failed transaction. Did the sender retry?</p><blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008014307350.png" class="" title="failed transactions"><blockquote><p><em>Failed First try:**</em>0x6151cf6ceb0d2156e6f35c258d94e27ebc299d149ee664544db343c8e5d29520**</p><p><em>Failed Second try:</em> <strong>0x7635749799dafce791bb952d7a83859c1c4faca8f6cb3d2652fabb073a992241</strong></p><p><em>Successful Third try:</em></p><p><strong>0x6151cf6ceb0d2156e6f35c258d94e27ebc299d149ee664544db343c8e5d29520</strong></p></blockquote><p>Doing smart contract actually also has failed several transactions…</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008013717131.png" class="" title="failed transaction"></blockquote><h2 id="CFX-faucet-test"><a href="#CFX-faucet-test" class="headerlink" title="CFX faucet test"></a>CFX faucet test</h2><p>4)Create a wallet, get some CFX <strong>through the faucet</strong> and send us the corresponding transactions hash.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;code&quot;:0,&quot;message&quot;:&#123;&quot;tx&quot;:&quot;0x0163755fe87b34053d2f949ba757b23f3fdbff47ac73b3b0af3e8fb2cabba2d4&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Use “Deposit” button to get free CFX~~</p><p>0x0163755fe87b34053d2f949ba757b23f3fdbff47ac73b3b0af3e8fb2cabba2d4</p></blockquote><h2 id="buy-a-ticket"><a href="#buy-a-ticket" class="headerlink" title="buy a ticket"></a>buy a ticket</h2><p>5)Buy a ticket on 167.172.160.61 and send us the corresponding transaction hash.<br>5.1)What happens if you lower the gas limit before sending the transaction?<br>5.2)What happens if you try to buy a second ticket for the same address?</p><blockquote><p>5）0xbc6e65773ce248c40743c4cbad6472284f3b2a2ab9ef6b86e1a2734b049c0248</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008004632381.png" class="" title="buy a ticket"><p>5.1）there is a minimal gas limit:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008004932339.png" class="" title="gas limit is at least 21000"><p>When I lower the gas limit, I get a failed transaction: (<strong>Out of gas</strong>)</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008005312172.png" class="" title="a failed transaction"><p>5.2）When I try to buy a second ticket for the same address, I get a failed transaction: (<strong>Execution error</strong>, maybe the smart contract constraints that <strong>one address can only buy one ticket</strong>)</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008005449147.png" class="" title="buy a second ticket"><p>On the contrary, if I choose to buy a second ticket from another account(address):（first, need unauthorize the website, and reconnect to choose another account）</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008010009472.png" class="" title="buy a second ticket from another account"></blockquote><h3 id="query-ticket-purchases"><a href="#query-ticket-purchases" class="headerlink" title="query ticket purchases"></a>query ticket purchases</h3><p>6)Try querying recent ticket purchases. Has there been any?</p><blockquote><p>Yes. Use the <code>Purchase</code> method: (And that <code>&quot;0x1e51d..</code> address is one of my account)</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008010347232.png" class="" title="query recent ticket purchases"></blockquote><h3 id="creator-of-the-Tickets-contract"><a href="#creator-of-the-Tickets-contract" class="headerlink" title="creator of the Tickets contract"></a>creator of the Tickets contract</h3><p>7)Who is the creator of the Tickets contract?</p><blockquote><p>First, use <code>owner</code> method to get an address:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008011005416.png" class="" title="owner"><p>Then search for the address:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008011130430.png" class="" title="search for the address"><p>This seems not what we want, so I track which account all the tokens are transferred into:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008011846655.png" class="" title="find an account"><p>And…search, with two-step validation, I think I’ve found the creator of this contract:</p><ul><li>most definitely <code>0x1dbda5dd2e952914bc74a802510d0fa59f9d7636</code></li></ul><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201008012202607.png" class="" title="search the account"><p>And I think <code>0x8B017126d2FEDe908a86B36b43969F17d25F3770</code> is the address of this contract. But I couldn’t be able to find any source code of the contract using Conflux Scan.</p></blockquote><h4 id="balance-of-this-account"><a href="#balance-of-this-account" class="headerlink" title="balance of this account"></a>balance of this account</h4><p>8)What is the balance of this account? How do you think this account acquired these tokens?</p><blockquote><p>The creator’s address <code>0x1dbda5dd2e952914bc74a802510d0fa59f9d7636</code>:</p><ul><li><p><strong>31682.677136697254853623 CFX</strong></p><p>▸ earn CFX through mining (<a href="https://mining.confluxnetwork.org">mining.confluxnetwork.org</a>) mining is reasonable for this address</p><p>▸ earn FC through bounty (<a href="https://bounty.conflux-chain.org">bounty.conflux-chain.org</a>) design a smart contract might get this</p></li></ul><p>The contract’s address <code>0x8b017126d2fede908a86b36b43969f17d25f3770</code>:</p><ul><li><p><strong>330 CFX</strong></p><p>▸people buy tickets from this address and send it 33 * 10 CFX (which means there are 33 tickets been sold)</p></li></ul></blockquote><h2 id="the-most-FC-tokens-address"><a href="#the-most-FC-tokens-address" class="headerlink" title="the most FC tokens address"></a>the most FC tokens address</h2><p>9)Which address holds the most FC tokens?</p><blockquote><ol><li>the conflux system address<ol><li>System is responsible for 1:1 exchange of FC/CFX transactions<ol><li>In this scenario, the contract creator’s address <code>0x144aa8f554d2ffbc81e0aa0f533f76f5220db09c</code> might have had the most FC tokens because this address is currently holding an enormous amount of CFX roughly about 999999996999988 CFX. That’s really something.</li></ol></li><li>System delivers FC tokens to all other users</li><li>So in theory it should hold the most FC tokens</li></ol></li><li><code>0x1878e9b8d2fec316a2e666485b927e92a3b4f43e</code><ol><li>This address holds 55999 FC tokens, and was involved in the first FC contract transaction</li><li>Considering the total amount of FC tokens is about 4484424 FC tokens, this could also have a great chance to be the address that holds the most FC tokens</li></ol></li></ol></blockquote><h1 id="Lecture-4-Introduction-to-Smart-Contracts"><a href="#Lecture-4-Introduction-to-Smart-Contracts" class="headerlink" title="Lecture 4 - Introduction to Smart Contracts"></a>Lecture 4 - Introduction to Smart Contracts</h1><h2 id="Decentralized-Applications-Architecture"><a href="#Decentralized-Applications-Architecture" class="headerlink" title="Decentralized Applications Architecture"></a>Decentralized Applications Architecture</h2><h3 id="Traditional-Web-Applications-Web-2-0"><a href="#Traditional-Web-Applications-Web-2-0" class="headerlink" title="Traditional Web Applications (Web 2.0)"></a>Traditional Web Applications (Web 2.0)</h3><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201015193226448.png" class="" title="Web 2.0"><p><strong>Web 2.0</strong> uses the C/S model.</p><ul><li>Enter domian, retrieve frontend through HTTP(S)</li><li>User interacts with the frontend which might send additional requests to the backend (dynamic content)</li><li>The backend could be a server cluster or a cloud, but the main logic remains the same</li></ul><h3 id="Decentalized-Applications-Web-3-0"><a href="#Decentalized-Applications-Web-3-0" class="headerlink" title="Decentalized Applications (Web 3.0)"></a>Decentalized Applications (Web 3.0)</h3><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201015200907786.png" class="" title="Web 3.0"><p><strong>Web 3.0</strong> uses the P2P model (partly):</p><ul><li>Get frontend from server</li><li>Frontend initiates transaction</li><li>User approves transaction</li><li>There might still be dynamic content</li><li>Backend can also query the blockchain</li></ul><hr><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201015212005851.png" class="" title="Web 2.0 vs. Web 3.0"><p>IPFS（星际文件系统）：一个去中心化的文件存储系统。</p><h2 id="Conflux-Studio-Overview"><a href="#Conflux-Studio-Overview" class="headerlink" title="Conflux Studio Overview"></a>Conflux Studio Overview</h2><blockquote><p><strong>a 3rd-party IDE</strong> called Conflux Studio</p></blockquote><h3 id="Toolchain"><a href="#Toolchain" class="headerlink" title="Toolchain"></a>Toolchain</h3><p>we will use these tools<br>▸ Conflux Studio (v0.4.1) <a href="https://github.com/ObsidianLabs/ConfluxStudio/blob/master/README.md">https://github.com/ObsidianLabs/ConfluxStudio/blob/master/README.md</a><br>▸ Docker (latest) <a href="https://www.docker.com/products/docker-desktop">https://www.docker.com/products/docker-desktop</a><br>▸ Solidity 7.1, solc (v0.7.1)<br>▸ Conflux Truffle (v.0.0.8)<br>▸ conflux-rust (v.0.6.3</p><h3 id="Basic-Usage"><a href="#Basic-Usage" class="headerlink" title="Basic Usage"></a>Basic Usage</h3><p>Docker的原理是在本地运行一个conflux节点，实际上整个网络都在本地，但只包含一个节点，所以非常适合本地开发。</p><p>下载课程的智能合约示例：<a href="https://github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-4-tickets.zip">https://github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-4-tickets.zip</a></p><blockquote><p>在studio中打开上述项目，注意路径名不要有中文。</p></blockquote><h2 id="Writing-Smart-Contracts"><a href="#Writing-Smart-Contracts" class="headerlink" title="Writing Smart Contracts"></a>Writing Smart Contracts</h2><p>The code that is executed is called <strong><font color=red>EVM bytecode</font></strong>. We write contracts in higher-level languages, the most popular language used on Ethereum and Conflux is <strong><font color=red>Solidity</font></strong>.</p><blockquote><p>为智能合约专门设计的高级语言。</p><p><strong>EVM bytecode</strong>：Ethereum Virtual Machine bytcode 以太坊虚拟机字节码</p><p>CVM：Conflux Virtual Machine（和EVM基本一致，智能合约的编写是兼容的）</p></blockquote><p><code>example.sol</code> :</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: GPL-3.0</span></span><br><span class="line"></span><br><span class="line">pragma solidity ^<span class="number">0.7</span><span class="number">.1</span>;</span><br><span class="line"></span><br><span class="line">contract <span class="title class_">ContractName</span> &#123;</span><br><span class="line">    uint256 number;</span><br><span class="line">    address owner;</span><br><span class="line">    mapping (<span class="function"><span class="params">address</span> =&gt;</span> uint256) counts;  <span class="comment">// 字典</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">uint256 value</span>) public &#123;</span><br><span class="line">    counts[owner] = value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>abi.json</code> :</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;foo&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;function&quot;</span></span><br><span class="line">        <span class="attr">&quot;inputs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;internalType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;uint256&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;val&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;uint256&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;stateMutability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nonpayable&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="Tockets-sol"><a href="#Tockets-sol" class="headerlink" title="Tockets.sol"></a>Tockets.sol</h2><p>讲了讲怎么使用。。</p><hr><p>introduction to dapps<br><a href="https://ethereum.org/en/developers/docs/dapps">ethereum.org/en/developers/docs/dapps</a></p><p>built on Ethereum — dapp examples<br><a href="https://docs.ethhub.io/built-on-ethereum/built-on-ethereum">docs.ethhub.io/built-on-ethereum/built-on-ethereum</a></p><p>official Solidity 7.1 documentation<br><a href="https://solidity.readthedocs.io/en/v0.7.1">solidity.readthedocs.io/en/v0.7.1</a></p><p>learn X in Y minutes (where X=Solidity) warning! earlier Solidity version<br><a href="https://learnxinyminutes.com/docs/solidity">learnxinyminutes.com/docs/solidity</a></p><p>Solidity by example warning! earlier Solidity version<br><a href="https://solidity-by-example.org/0.6">solidity-by-example.org/0.6</a></p><p>CryptoZombies<br><a href="https://cryptozombies.io">cryptozombies.io</a></p><hr><p>Conflux Studio overview<br><a href="https://github.com/ObsidianLabs/ConfluxStudio/blob/master/README.md">github.com/ObsidianLabs/ConfluxStudio/blob/master/README.md</a></p><p>dapp tutorial<br><a href="https://github.com/ObsidianLabs/conflux-dapp-tutorial">github.com/ObsidianLabs/conflux-dapp-tutorial</a></p><p>Conflux frontend example project<br><a href="https://github.com/ObsidianLabs/conflux-frontend-react">github.com/ObsidianLabs/conflux-frontend-react</a></p><hr><p>Solidity Security: Comprehensive list of known attack vectors and common anti-patterns<br><a href="https://blog.sigmaprime.io/solidity-security.html">blog.sigmaprime.io/solidity-security.html</a><br><a href="https://github.com/zxhubo/Knowledge-Base">github.com/zxhubo/Knowledge-Base</a></p><p>the Ethernaut (by OpenZeppelin)<br><a href="https://ethernaut.openzeppelin.com">ethernaut.openzeppelin.com</a></p><h1 id="Homework-of-Lecture-4"><a href="#Homework-of-Lecture-4" class="headerlink" title="Homework of Lecture 4"></a>Homework of Lecture 4</h1><blockquote><p><a href="https://forum.conflux.fun/t/topic/3390">Lecture 4 - Homework &amp; Resources</a></p><blockquote><p>Homework is done by a group.</p></blockquote></blockquote><h2 id="Conflux-Studio"><a href="#Conflux-Studio" class="headerlink" title="Conflux Studio"></a>Conflux Studio</h2><p><strong>3.1 Basic usage of Conflux Studio</strong></p><p>Download and install Conflux Studio and all the components required.</p><ul><li>Docker: <a href="https://docs.docker.com/get-docker">https://docs.docker.com/get-docker 12</a></li><li>Conflux Studio: <a href="https://github.com/ObsidianLabs/ConfluxStudio/releases/tag/v0.4.1">https://github.com/ObsidianLabs/ConfluxStudio/releases/tag/v0.4.1 12</a></li><li>Conflux Truffle, conflux-rust, solc: Install through Conflux Studio</li></ul><blockquote><p>Done.</p></blockquote><p>Download the Tickets project from the lecture (<a href="https://github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-4-tickets.zip">https://github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-4-tickets.zip</a>) and import it into Conflux Studio.</p><blockquote><p>Done.</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201015235330134.png" class="" title="the Tickets project"></blockquote><p>Deploy an instance of the contract on Conflux Oceanus (hint: you can send CFX from your Conflux Portal account to your Conflux Studio account).</p><blockquote><p>get CFX from faucet: wallet.confluxscan.io/faucet/dev/ask?address={address}</p><blockquote><p>To <strong>make sure the deploying account has enough CFXs to pay transaction fees</strong>.</p><p>Or (send CFX from your Conflux Portal account to your Conflux Studio account)</p></blockquote><p>And Deploy~</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016000956618.png" class="" title="Deploy an instance of the contract"></blockquote><p>Buy a ticket from another account. Validate the ticket with the owner. Withdraw the profits.</p><blockquote><p>First, find the contract we deployed, which leads us to the contract method’s panal:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016001705433.png" class="" title="contract method" alt="s panal"><p>And we just buy, validate, and withdraw.</p></blockquote><p>Send us the address of the contract, the 4 transaction hashes (deploy, buy(), validate(), withdraw()), and screenshots of how you sent them from Conflux Studio.</p><blockquote><p><strong>deploy</strong>: <code>0x1c5d87cbc299df5f2d5f07d989e2df83ebca253838edb0836b86d24587b72878</code></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016001609824.png" class="" title="contract"><p><strong>buy</strong>: <code>0xcfbdf3ae39291ea42c85142e18514d4d7329a88057fa8811f043a7869619bcb6</code></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016002315094.png" class="" title="buy"><p><strong>validate</strong>: <code>0xe4e4dbbc708a7e5e5272e8323d124052297ed4dd6ae772da8b2bc9a416b0f2d7</code></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016002453805.png" class="" title="validate"><p><strong>withdraw</strong>: <code>0x367034b42d8cce63f19cf585b3644587e084f8456fd3a562f223dfdd7341c3f9</code></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016002721904.png" class="" title="withdraw"></blockquote><h2 id="Tickets-sol"><a href="#Tickets-sol" class="headerlink" title="Tickets.sol"></a>Tickets.sol</h2><p><strong>3.2 Customizing Tickets.sol</strong></p><p>Update Ticket.sol so that it becomes possible to <strong>set the number of tickets and the price per ticket</strong> <font color=red>when you deploy a contract</font>.</p><p>For instance, for event A, I want to sell 10 tickets of 100 CFX each. For event B, I want to sell 1000 tickets for 2 CFX each.</p><p>Test your solution on a local development network.</p><p>Send us the source code and a screenshot of deploying a contract with 33 tickets for 44 CFX each.</p><blockquote><p>Just set a few constructor’s parameters and all is OK.</p></blockquote><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">constructor</span>(uint256 tickets, uint256 price) &#123;</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">    num_tickets = tickets;</span><br><span class="line">    price_drips = price * <span class="number">1e18</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Then we get a panal with adjustable number of tickets and price for each.</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016120636955.png" class="" title="Deploy"><blockquote><p>Send the transaction, and check:</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016120734072.png" class="" title="check the parameters"><h3 id="Buy-tickets"><a href="#Buy-tickets" class="headerlink" title="Buy tickets"></a>Buy tickets</h3><p><strong>+1. Buying multiple tickets from one address [OPTIONAL]</strong></p><p>Update Tickets.sol so that <strong>one user can buy multiple tickets</strong>. For instance, Bob might want to buy 2 tickets, one for himself and one for his girlfriend.</p><p>Test your solution on a local development network.</p><p>Send us the source code and some screenshots of buying 2 or more tickets from an address and then validating them.</p><blockquote><p>Source code:</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: GPL-3.0</span></span><br><span class="line"></span><br><span class="line">pragma solidity ^<span class="number">0.7</span><span class="number">.1</span>;</span><br><span class="line"></span><br><span class="line">contract Tickets &#123;</span><br><span class="line">    address <span class="keyword">public</span> owner;</span><br><span class="line"></span><br><span class="line">    uint256 <span class="keyword">public</span> num_tickets = <span class="number">100</span>;</span><br><span class="line">    uint256 <span class="keyword">public</span> price_drips = <span class="number">10</span> * <span class="number">1e18</span>; <span class="comment">// 10 CFX</span></span><br><span class="line">    <span class="built_in">mapping</span> (address =&gt; uint256) <span class="keyword">public</span> has_ticket;</span><br><span class="line"></span><br><span class="line">    <span class="function">event <span class="title">Validated</span><span class="params">(address visitor, uint256 tickets)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">constructor</span>(uint256 tickets, uint256 price) &#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">        num_tickets = tickets;</span><br><span class="line">        price_drips = price * <span class="number">1e18</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// buy ticket</span></span><br><span class="line">    <span class="function">function <span class="title">buy</span><span class="params">(uint256 tickets)</span> <span class="keyword">public</span> payable </span>&#123;</span><br><span class="line">        <span class="comment">// check tickets</span></span><br><span class="line">        <span class="built_in">require</span>(num_tickets &gt; <span class="number">0</span> &amp;&amp; tickets &lt;= num_tickets &amp;&amp; tickets &gt; <span class="number">0</span>, <span class="string">&quot;TICKETS: illegal operation&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// check if the buying price is correct</span></span><br><span class="line">        <span class="built_in">require</span>(msg.value == tickets * price_drips, <span class="string">&quot;TICKETS: incorrect amount&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// successful buy</span></span><br><span class="line">        <span class="keyword">if</span>( has_ticket[msg.sender] != <span class="number">0</span> )</span><br><span class="line">            has_ticket[msg.sender] += tickets;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            has_ticket[msg.sender] = tickets;</span><br><span class="line">        num_tickets -= tickets;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// validate ticket</span></span><br><span class="line">    <span class="function">function <span class="title">validate</span><span class="params">(address visitor)</span> <span class="keyword">public</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(msg.sender == owner, <span class="string">&quot;TICKETS: unauthorized&quot;</span>);</span><br><span class="line">        <span class="built_in">require</span>(has_ticket[visitor] &gt; <span class="number">0</span>, <span class="string">&quot;TICKETS: visitor has no ticket&quot;</span>);</span><br><span class="line"></span><br><span class="line">        uint256 tickets = has_ticket[visitor];</span><br><span class="line">        has_ticket[visitor] = <span class="number">0</span>;</span><br><span class="line">        <span class="function">emit <span class="title">Validated</span><span class="params">(visitor, tickets)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// withdraw profit</span></span><br><span class="line">    <span class="function">function <span class="title">withdraw</span><span class="params">()</span> <span class="keyword">public</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(msg.sender == owner, <span class="string">&quot;TICKETS: unauthorized&quot;</span>);</span><br><span class="line">        uint256 profit = <span class="built_in">address</span>(<span class="keyword">this</span>).balance;</span><br><span class="line">        msg.sender.<span class="built_in">transfer</span>(profit);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>We set tickets_num to <code>2333</code>, and price to <code>1</code> CFX. (And buy 5 tickets.)</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016122836503.png" class="" title="num_tickets"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016122857302.png" class="" title="price_drips"><blockquote><p>buying 2 or more tickets from an address:</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016122729183.png" class="" title="buy 5 tickets for Calvin"><blockquote><p>validating them:</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016123108333.png" class="" title="validate"><h3 id="Time-of-the-event"><a href="#Time-of-the-event" class="headerlink" title="Time of the event"></a>Time of the event</h3><p>+<strong>1. Time of the event [OPTIONAL]</strong></p><p>Update Tickets.sol so that the organizer can set the time of the event.</p><p>Allow users to <strong>buy tickets up to 2 hours before the event</strong>. E.g. if the event is on 2020.12.01 19:00, you cannot buy tickets after 2020.12.01 17:00.</p><p>Allow the organizer to <strong>withdraw the profits 1 day after the event</strong>. E.g. if the event is on 2020.12.01 19:00, the organizer cannot withdraw the profits before 2020.12.02 19:00.</p><p><strong>Hints:</strong></p><ul><li><a href="https://solidity.readthedocs.io/en/v0.7.1/units-and-global-variables.html#block-and-transaction-properties">https://solidity.readthedocs.io/en/v0.7.1/units-and-global-variables.html#block-and-transaction-properties 6</a></li><li><a href="https://solidity.readthedocs.io/en/v0.7.1/units-and-global-variables.html#time-units">https://solidity.readthedocs.io/en/v0.7.1/units-and-global-variables.html#time-units 6</a></li></ul><blockquote><p>Source code:</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: GPL-3.0</span></span><br><span class="line"></span><br><span class="line">pragma solidity ^<span class="number">0.7</span><span class="number">.1</span>;</span><br><span class="line"></span><br><span class="line">contract Tickets &#123;</span><br><span class="line">    address <span class="keyword">public</span> owner;</span><br><span class="line"></span><br><span class="line">    uint256 <span class="keyword">public</span> num_tickets = <span class="number">100</span>;</span><br><span class="line">    uint256 <span class="keyword">public</span> price_drips = <span class="number">10</span> * <span class="number">1e18</span>; <span class="comment">// 10 CFX</span></span><br><span class="line">    uint256 <span class="keyword">public</span> start;</span><br><span class="line">    <span class="built_in">mapping</span> (address =&gt; uint256) <span class="keyword">public</span> has_ticket;</span><br><span class="line"></span><br><span class="line">    <span class="function">event <span class="title">Validated</span><span class="params">(address visitor, uint256 tickets)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">constructor</span>(uint256 tickets, uint256 price, uint256 upcoming_days_of_the_event) &#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">        num_tickets = tickets;</span><br><span class="line">        price_drips = price * <span class="number">1e18</span>;</span><br><span class="line">        start = upcoming_days_of_the_event * <span class="number">1</span> days + block.timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// buy ticket</span></span><br><span class="line">    <span class="function">function <span class="title">buy</span><span class="params">(uint256 tickets)</span> <span class="keyword">public</span> payable </span>&#123;</span><br><span class="line">        <span class="comment">// check time</span></span><br><span class="line">        <span class="built_in">require</span>(block.timestamp &lt;= start - <span class="number">2</span> hours, <span class="string">&quot;TICKETS: can&#x27;t but due to time reasons&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// check tickets</span></span><br><span class="line">        <span class="built_in">require</span>(num_tickets &gt; <span class="number">0</span> &amp;&amp; tickets &lt;= num_tickets &amp;&amp; tickets &gt; <span class="number">0</span>, <span class="string">&quot;TICKETS: illegal operation&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// check if the buying price is correct</span></span><br><span class="line">        <span class="built_in">require</span>(msg.value == tickets * price_drips, <span class="string">&quot;TICKETS: incorrect amount&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// successful buy</span></span><br><span class="line">        <span class="keyword">if</span>( has_ticket[msg.sender] != <span class="number">0</span> )</span><br><span class="line">            has_ticket[msg.sender] += tickets;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            has_ticket[msg.sender] = tickets;</span><br><span class="line">        num_tickets -= tickets;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// validate ticket</span></span><br><span class="line">    <span class="function">function <span class="title">validate</span><span class="params">(address visitor)</span> <span class="keyword">public</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(msg.sender == owner, <span class="string">&quot;TICKETS: unauthorized&quot;</span>);</span><br><span class="line">        <span class="built_in">require</span>(has_ticket[visitor] &gt; <span class="number">0</span>, <span class="string">&quot;TICKETS: visitor has no ticket&quot;</span>);</span><br><span class="line"></span><br><span class="line">        uint256 tickets = has_ticket[visitor];</span><br><span class="line">        has_ticket[visitor] = <span class="number">0</span>;</span><br><span class="line">        <span class="function">emit <span class="title">Validated</span><span class="params">(visitor, tickets)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// withdraw profit</span></span><br><span class="line">    <span class="function">function <span class="title">withdraw</span><span class="params">()</span> <span class="keyword">public</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(msg.sender == owner, <span class="string">&quot;TICKETS: unauthorized&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">require</span>(block.timestamp &gt;= start + <span class="number">1</span> days, <span class="string">&quot;TICKETS: can&#x27;t withdraw due to time reasons&quot;</span>);</span><br><span class="line"></span><br><span class="line">        uint256 profit = <span class="built_in">address</span>(<span class="keyword">this</span>).balance;</span><br><span class="line">        msg.sender.<span class="built_in">transfer</span>(profit);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Set the start time as 3 days later:</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016133242321.png" class="" title="deploy"><blockquote><p>Let’s buy some tickets and test if we can withdraw the money ahead of schdule:</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016133717044.png" class="" title="withdraw test"><blockquote><p>Now we can see:</p><blockquote><p>Transaction reverted</p><p><strong>data</strong> TICKETS: can’t withdraw due to time reasons</p></blockquote></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201016133747376.png" class="" title="failed"><h1 id="Lecture-5-Introduction-to-Smart-Contracts-II"><a href="#Lecture-5-Introduction-to-Smart-Contracts-II" class="headerlink" title="Lecture 5 - Introduction to Smart Contracts II"></a>Lecture 5 - Introduction to Smart Contracts II</h1><blockquote><p><em>No slides, only demos.</em></p></blockquote><h2 id="minting-burning-logic"><a href="#minting-burning-logic" class="headerlink" title="minting / burning logic"></a>minting / burning logic</h2><p>minting即铸币，burning即销毁。这部分的逻辑控制代币的产生和消失。</p><p>minting ~ token issuance(发行):</p><ul><li>fixed-supply token</li><li>set of addresses to mint, e.g. stablecoin<ul><li>管理者有权超发货币</li></ul></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: GPL-3.0-or-later</span></span><br><span class="line"></span><br><span class="line">pragma solidity ^<span class="number">0.7</span><span class="number">.1</span>;</span><br><span class="line"></span><br><span class="line">import <span class="string">&quot;./IStandardCoin.sol&quot;</span>;</span><br><span class="line"></span><br><span class="line">contract CourseCoin is IStandardCoin &#123; <span class="comment">// inheritance / implementing an interface</span></span><br><span class="line">    <span class="built_in">string</span> _name;</span><br><span class="line">    <span class="built_in">string</span> _symbol; <span class="comment">// ~ CFX</span></span><br><span class="line">    uint256 _totalSupply;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// keep track of account balances</span></span><br><span class="line">    mapping (address =&gt; uint256) _balances;</span><br><span class="line"></span><br><span class="line">    event <span class="title function_">Transfer</span><span class="params">(address from, address to, uint256 amount)</span>;</span><br><span class="line"></span><br><span class="line">    constructor(uint256 totalSupply) &#123;</span><br><span class="line">        _name = <span class="string">&quot;Conflux UMA Token&quot;</span>;</span><br><span class="line">        _symbol = <span class="string">&quot;UMA&quot;</span>;</span><br><span class="line">        _totalSupply = totalSupply;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// add all tokens to creator</span></span><br><span class="line">        _balances[msg.sender] = totalSupply;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getters</span></span><br><span class="line">    function <span class="title function_">name</span><span class="params">()</span> external view <span class="title function_">returns</span> <span class="params">(<span class="built_in">string</span> memory)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> _name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">symbol</span><span class="params">()</span> external view <span class="title function_">returns</span> <span class="params">(<span class="built_in">string</span> memory)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> _symbol;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">balanceOf</span><span class="params">(address addr)</span> external view override <span class="title function_">returns</span> <span class="params">(uint256)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> _balances[addr];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">totalSupply</span><span class="params">()</span> external view override <span class="title function_">returns</span> <span class="params">(uint256)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> _totalSupply;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// transfer between accounts</span></span><br><span class="line">    function <span class="title function_">transfer</span><span class="params">(address receiver, uint256 amount)</span> external override &#123;</span><br><span class="line">        require(_balances[msg.sender] &gt;= amount, <span class="string">&quot;CourseCoin: Insufficient balance&quot;</span>);</span><br><span class="line">        _balances[msg.sender] -= amount;</span><br><span class="line">        _balances[receiver] += amount;</span><br><span class="line">        emit <span class="title function_">Transfer</span><span class="params">(msg.sender, receiver, amount)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TimeLockedTransfer"><a href="#TimeLockedTransfer" class="headerlink" title="TimeLockedTransfer"></a>TimeLockedTransfer</h2><p>转账交易执行后，receiver只能在截至时间以后才能提取代币。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: GPL-3.0-or-later</span></span><br><span class="line"></span><br><span class="line">pragma solidity ^<span class="number">0.7</span><span class="number">.1</span>;</span><br><span class="line"></span><br><span class="line">import <span class="string">&quot;./IStandardCoin.sol&quot;</span>;</span><br><span class="line"></span><br><span class="line">contract TimeLockedTransfer &#123;</span><br><span class="line">    address _sender;</span><br><span class="line">    address _receiver;</span><br><span class="line">    uint256 _unlockAfter; <span class="comment">// point in time</span></span><br><span class="line"></span><br><span class="line">    event <span class="title function_">CFXDeposit</span><span class="params">(uint256 amount)</span>;</span><br><span class="line">    event <span class="title function_">CFXWithdraw</span><span class="params">(uint256 amount)</span>;</span><br><span class="line">    event <span class="title function_">CoinDeposit</span><span class="params">(uint256 amount)</span>;</span><br><span class="line">    event <span class="title function_">CoinWithdraw</span><span class="params">(uint256 amount)</span>;</span><br><span class="line"></span><br><span class="line">    constructor(address sender, address receiver, uint256 lockTimeSec) &#123;</span><br><span class="line">        _sender = sender;</span><br><span class="line">        _receiver = receiver;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// current time: `block.timestamp` (`now` in older versions)</span></span><br><span class="line">        _unlockAfter = block.timestamp + lockTimeSec;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">balance</span><span class="params">()</span> external view <span class="title function_">returns</span> <span class="params">(uint256)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address(this).balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">depositCFX</span><span class="params">()</span> external payable &#123;</span><br><span class="line">        require(msg.sender == _sender, <span class="string">&quot;TLT: Unauthorized&quot;</span>);</span><br><span class="line">        uint256 amount = msg.value;</span><br><span class="line">        emit <span class="title function_">CFXDeposit</span><span class="params">(amount)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">withdrawCFX</span><span class="params">()</span> external &#123;</span><br><span class="line">        require(msg.sender == _receiver, <span class="string">&quot;TLT: Unauthorized&quot;</span>);</span><br><span class="line">        require(block.timestamp &gt;= _unlockAfter, <span class="string">&quot;TLT: Timelock still active&quot;</span>);</span><br><span class="line">        uint256 amount = address(this).balance;</span><br><span class="line">        msg.sender.transfer(amount);</span><br><span class="line">        emit <span class="title function_">CFXWithdraw</span><span class="params">(amount)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//function depositCoin(address coinContract) external payable &#123;</span></span><br><span class="line">    <span class="comment">//    require(msg.sender == _sender, &quot;TLT: Unauthorized&quot;);</span></span><br><span class="line">    <span class="comment">//    </span></span><br><span class="line">    <span class="comment">//    IStandardCoin coin = IStandardCoin(coinContract);</span></span><br><span class="line">    <span class="comment">//    uint256 amount = msg.value;</span></span><br><span class="line">    <span class="comment">//    coin.transfer(address(this), amount);</span></span><br><span class="line">    <span class="comment">//    emit CoinDeposit(amount);</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    function <span class="title function_">withdrawCoin</span><span class="params">(address coinContract)</span> external &#123;</span><br><span class="line">        <span class="comment">// Alice will deposit coins to this contract through the contract</span></span><br><span class="line">        <span class="comment">// Bob can withdraw after the deadline by passing the coin contract address</span></span><br><span class="line">        require(msg.sender == _receiver, <span class="string">&quot;TLT: Unauthorized&quot;</span>);</span><br><span class="line">        require(block.timestamp &gt;= _unlockAfter, <span class="string">&quot;TLT: Timelock still active&quot;</span>);</span><br><span class="line"></span><br><span class="line">        IStandardCoin coin = IStandardCoin(coinContract);</span><br><span class="line">        uint256 amount = coin.balanceOf(address(this));</span><br><span class="line">        coin.transfer(_receiver, amount);</span><br><span class="line">        emit <span class="title function_">CoinWithdraw</span><span class="params">(amount)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Homework-of-Lecture-5"><a href="#Homework-of-Lecture-5" class="headerlink" title="Homework of Lecture 5"></a>Homework of Lecture 5</h1><blockquote><p><a href="https://forum.conflux.fun/t/topic/3456">Lecture 5 - Homework &amp; Resources</a></p><blockquote><p>Homework is done by a group.</p></blockquote></blockquote><h2 id="3-1-Understanding-the-lecture"><a href="#3-1-Understanding-the-lecture" class="headerlink" title="3.1 Understanding the lecture"></a>3.1 Understanding the lecture</h2><p>1.a) Describe some advantages of conforming to a token standard like ERC-20 or IStandardToken in a few sentences.</p><blockquote><p><i>Conforming to a token standard ensures <strong>interoperability</strong> between our token and other tokens in the token standard network. This makes buying and trading our tokens easier for end users as well as investors, increasing the appeal of our token.</i></p><p><i>We can also benefit from <strong>unified efforts at improving the security</strong> of our token standard. The more networks that share the same token standard, the more stakeholders concerned with the token security, the more research is done to improve the token standard security.</i></p></blockquote><p>1.b) Describe the purpose of the TimeLockedTransfer contract in a few sentences.</p><blockquote><p><i>The TimeLockedTransfer contract allows us to <strong>set a time for the contract execution</strong>. This means that even if all conditions are already fulfilled by a certain time, the contract will not, or cannot, be executed until the prescribed time arrives.It can be used for <strong>scheduled transfers</strong> or <strong>limiting contract accessibility</strong>.</i></p><p><i>If one can not withdraw his profit immediately, one might wanna make sure that his customers won’t come back asking for a refund, which allows the sender to <strong>cancel the transfer before the specified deadline</strong>.</i></p></blockquote><h2 id="3-2-Trying-the-lecture-code"><a href="#3-2-Trying-the-lecture-code" class="headerlink" title="3.2 Trying the lecture code"></a>3.2 Trying the lecture code</h2><p>Download the project (<a href="http://github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-5.zip">github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-5.zip 15</a>) and import it into Conflux Studio.</p><p>In this problem, you will have to deploy three smart contracts on your <strong>local development network</strong>.</p><p>First, deploy a <strong>fixed-supply</strong> standard coin with the name “CoinA”. Then, deploy a second instance with the name “CoinB”.</p><blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106231734404.png" class="" title="contracts"><p>CoinA: 0x8ad093411fb99e82d35c6adfe494821e3d478a70</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106221649667.png" class="" title="CoinA"><p>CoinB: 0x824eebd198b057a4638842247b0a788e8888ef49</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106223136829.png" class="" title="CoinB"></blockquote><p>Next, deploy an instance of the TimeLockedTransfer contract. Set the unlock time to something greater than 5 minutes.</p><blockquote><p>TimeLockedTransfer: (time = 301 s &gt; 5 min)</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106231645734.png" class="" title="TimeLockedTransfer"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234806332.png" class="" title="detail"></blockquote><p>Send 17 CFX, 22 CoinA, and 12 CoinB to the transfer contract.</p><blockquote><p>Send 17 CFX:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106231922911.png" class="" title="Send 17 CFX"><p>Send 22 CoinA: (Through contract “CoinA”)</p><blockquote><p>send it to the TimeLockedTransfer contract address.</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106233822291.png" class="" title="Send 22 CoinA"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234706086.png" class="" title="detail"><p>Send 12 CoinB: (Through contract “CoinB”)</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106233800792.png" class="" title="Send 12 CoinB"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234728598.png" class="" title="detail"></blockquote><p>After the deadline, withdraw all these tokens from the transfer contract.</p><blockquote><p>withdraw CFX:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234113850.png" class="" title="withdraw CFX"><blockquote><p>after:</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234137147.png" class="" title="change"><p>withdraw CoinA:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234418328.png" class="" title="withdraw CoinA"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234505423.png" class="" title="coinContract"><p>withdraw CoinB:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234544548.png" class="" title="withdraw CoinB"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234615735.png" class="" title="coinContract"><blockquote><p>after:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201106234306249.png" class="" title="withdraw"></blockquote></blockquote><p>Document the process using screenshots and a short description of each step.</p><h2 id="1-Transfer-Factory-OPTIONAL"><a href="#1-Transfer-Factory-OPTIONAL" class="headerlink" title="+1. Transfer Factory [OPTIONAL]"></a>+1. Transfer Factory [OPTIONAL]</h2><p>Look at the file TransferFactory.sol. Try to understand what it does and explain it using your own words.</p><p>Show us how to deploy and use this contract.</p><blockquote><p>It creates and maintains a list of “TimeLockedTransfer” contracts.</p><p>Each time the function “create” is called, a new “TimeLockedTransfer” contract is deployed.</p><p>Deploy: <code>0x833791606cc08d5e4f5fd9a2d6953faff6c0c494</code></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107000207723.png" class="" title="deploy"><p>Create: (3 times)</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107000248108.png" class="" title="create1"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107000336701.png" class="" title="para1"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107000714298.png" class="" title="create2"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107000727118.png" class="" title="para2"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107000610545.png" class="" title="create3"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107000640270.png" class="" title="para3"><p>And we can see those 3 contract infos: (saved in the list called “transfers”)</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107001116958.png" class="" title="infos"><p>BUT these tranfers doesn’t work like I expected, and all the contract addresses are invalid.</p></blockquote><h2 id="1-Cancel-transfer-OPTIONAL"><a href="#1-Cancel-transfer-OPTIONAL" class="headerlink" title="+1. Cancel transfer [OPTIONAL]"></a>+1. Cancel transfer [OPTIONAL]</h2><p>Modify TimeLockedTransfer.sol in a way that allows the sender to cancel the transfer before the specified deadline.</p><p>Provide a way for the sender to re-aquire all their tokens from the transfer contract after cancelling it.</p><blockquote><p>Cancel test:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107014651439.png" class="" title="cancel"><p>The main source code is as follows: (including several changes in other files not showing here)</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: GPL-3.0-or-later</span></span><br><span class="line"></span><br><span class="line">pragma solidity ^<span class="number">0.7</span><span class="number">.1</span>;</span><br><span class="line"></span><br><span class="line">import <span class="string">&quot;./IStandardCoin.sol&quot;</span>;</span><br><span class="line"></span><br><span class="line">contract TimeLockedTransfer &#123;</span><br><span class="line">    address _sender;</span><br><span class="line">    address _receiver;</span><br><span class="line">    address [] public contracts;</span><br><span class="line">    uint256 _unlockAfter; <span class="comment">// point in time</span></span><br><span class="line"></span><br><span class="line">    event <span class="title function_">CFXDeposit</span><span class="params">(uint256 amount)</span>;</span><br><span class="line">    event <span class="title function_">CFXWithdraw</span><span class="params">(uint256 amount)</span>;</span><br><span class="line">    event <span class="title function_">CoinDeposit</span><span class="params">(uint256 amount)</span>;</span><br><span class="line">    event <span class="title function_">CoinWithdraw</span><span class="params">(uint256 amount)</span>;</span><br><span class="line">    event <span class="title function_">Cancel</span><span class="params">(uint256 number)</span>;</span><br><span class="line"></span><br><span class="line">    constructor(address sender, address receiver, uint256 lockTimeSec) &#123;</span><br><span class="line">        _sender = sender;</span><br><span class="line">        _receiver = receiver;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// current time: `block.timestamp` (`now` in older versions)</span></span><br><span class="line">        _unlockAfter = block.timestamp + lockTimeSec;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">balance</span><span class="params">()</span> external view <span class="title function_">returns</span> <span class="params">(uint256)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address(this).balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">depositCFX</span><span class="params">()</span> external payable &#123;</span><br><span class="line">        require(msg.sender == _sender, <span class="string">&quot;TLT: Unauthorized&quot;</span>);</span><br><span class="line">        uint256 amount = msg.value;</span><br><span class="line">        emit <span class="title function_">CFXDeposit</span><span class="params">(amount)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">withdrawCFX</span><span class="params">()</span> external &#123;</span><br><span class="line">        require(msg.sender == _receiver, <span class="string">&quot;TLT: Unauthorized&quot;</span>);</span><br><span class="line">        require(block.timestamp &gt;= _unlockAfter, <span class="string">&quot;TLT: Timelock still active&quot;</span>);</span><br><span class="line">        uint256 amount = address(this).balance;</span><br><span class="line">        msg.sender.transfer(amount);</span><br><span class="line">        emit <span class="title function_">CFXWithdraw</span><span class="params">(amount)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">depositCoin</span><span class="params">(address coinContract)</span> external payable &#123;</span><br><span class="line">        require(msg.sender == _sender, <span class="string">&quot;TLT: Unauthorized&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        contracts.push(coinContract);</span><br><span class="line"></span><br><span class="line">        IStandardCoin coin = IStandardCoin(coinContract);</span><br><span class="line">        uint256 amount = (uint256)(msg.value / <span class="number">1000000000000000000</span>);</span><br><span class="line">        coin.transfer2(msg.sender, address(this), amount);</span><br><span class="line">        emit <span class="title function_">CoinDeposit</span><span class="params">(amount)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">withdrawCoin</span><span class="params">(address coinContract)</span> external &#123;</span><br><span class="line">        <span class="comment">// Alice will deposit coins to this contract through the contract</span></span><br><span class="line">        <span class="comment">// Bob can withdraw after the deadline by passing the coin contract address</span></span><br><span class="line">        require(msg.sender == _receiver, <span class="string">&quot;TLT: Unauthorized&quot;</span>);</span><br><span class="line">        require(block.timestamp &gt;= _unlockAfter, <span class="string">&quot;TLT: Timelock still active&quot;</span>);</span><br><span class="line"></span><br><span class="line">        IStandardCoin coin = IStandardCoin(coinContract);</span><br><span class="line">        uint256 amount = coin.balanceOf(address(this));</span><br><span class="line">        coin.transfer(msg.sender, amount);</span><br><span class="line">        emit <span class="title function_">CoinWithdraw</span><span class="params">(amount)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">cancel</span><span class="params">()</span> external&#123;</span><br><span class="line">        require(msg.sender == _sender, <span class="string">&quot;TLT: Unauthorized&quot;</span>);</span><br><span class="line">        require(block.timestamp &lt; _unlockAfter, <span class="string">&quot;TLT: Timelock is no longer active&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// cancel CFX</span></span><br><span class="line">        uint256 amount = address(this).balance;</span><br><span class="line">        msg.sender.transfer(amount);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// cancel other coins</span></span><br><span class="line">        <span class="keyword">for</span>(uint i = <span class="number">0</span>; i &lt; contracts.length; i = i + <span class="number">1</span>)&#123;</span><br><span class="line">            address coinContract = contracts[i];</span><br><span class="line">            IStandardCoin coin = IStandardCoin(coinContract);</span><br><span class="line">            amount = coin.balanceOf(address(this));</span><br><span class="line">            coin.transfer(msg.sender, amount);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        emit <span class="title function_">Cancel</span><span class="params">(amount)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>A more step by step demo:</p><p>(1) Deploy it with 10 mins delay:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015032551.png" class="" title="deploy"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015144464.png" class="" title="contract"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015159377.png" class="" title="para"><p>(2) check the CoinA(<code>2317</code>) and CoinB(<code>1234</code>):</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015306819.png" class="" title="CoinA"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015323150.png" class="" title="CoinB"><p>(3) send CFX(<code>11</code>), CoinA(<code>12</code>), CoinB(<code>13</code>):</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015430139.png" class="" title="CFX"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015526840.png" class="" title="CoinA"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015510016.png" class="" title="CoinB"><p>(4) Check CFX(<code>11</code>), the CoinA(<code>2317</code> - <code>12</code> = <code>2305</code>) and CoinB(<code>1234</code> - <code>13</code> = <code>1221</code>):</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015647940.png" class="" title="CFX"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015705803.png" class="" title="CoinA"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015720588.png" class="" title="CoinB"><p>(5) <strong><font color=red>cancel</font></strong>:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107015925069.png" class="" title="cancel"><p>CFX(<code>0</code>), CoinA(<code>2317</code>) and CoinB(<code>1234</code>) <strong>again</strong>:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107020002607.png" class="" title="CFX"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107020116644.png" class="" title="CoinA"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107020132737.png" class="" title="CoinB"></blockquote><h1 id="Lecture-6-Gas-and-Gas-Sponsorship"><a href="#Lecture-6-Gas-and-Gas-Sponsorship" class="headerlink" title="Lecture 6 - Gas and Gas Sponsorship"></a>Lecture 6 - Gas and Gas Sponsorship</h1><h2 id="transaction-fee-交易费"><a href="#transaction-fee-交易费" class="headerlink" title="transaction fee 交易费"></a>transaction fee 交易费</h2><h3 id="Bitcoin-比特币"><a href="#Bitcoin-比特币" class="headerlink" title="Bitcoin 比特币"></a>Bitcoin 比特币</h3><p>比特币最大的创新在于系统机制的设计（incentive alignment）。</p><h4 id="Miner-Income-矿工收益"><a href="#Miner-Income-矿工收益" class="headerlink" title="Miner Income 矿工收益"></a>Miner Income 矿工收益</h4><p>miners make money by:</p><ul><li>processing transactions (<strong>transaction fee</strong>) </li><li>creating blocks (<strong>block reward</strong>)</li></ul><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107022334908.png" class="" title="example"><blockquote><p>如上图，1 coin 作为transaction fee变成了矿工的收入。</p></blockquote><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201107022434198.png" class="" title="miner income"><h4 id="Incentive-Alignment-激励措施"><a href="#Incentive-Alignment-激励措施" class="headerlink" title="Incentive Alignment 激励措施"></a>Incentive Alignment 激励措施</h4><p>一个预先定义好的协议：</p><ul><li><strong><font color=blue>反向激励</font></strong>：if you deviate from the rules, you will lose money</li><li><strong><font color=red>正向激励</font></strong>：instead of attacking the system, you can earn more moneyby actually participating (as a miner)<ul><li>理性的参与者，将会接受正向激励</li></ul></li></ul><blockquote><p>this is the reason a native currency is necessary forpermissionless(无条件的) blockchains like Bitcoin and Conflux</p></blockquote><h4 id="transaction-fee-as-an-auction-拍卖"><a href="#transaction-fee-as-an-auction-拍卖" class="headerlink" title="transaction fee as an auction 拍卖"></a>transaction fee as an auction 拍卖</h4><p>每个区块内只能储存有限笔交易，因此矿工倾向于将交易费出价更高的交易打包进区块里面。</p><p>愿意给出的交易费越高，你的交易将会更快地得到处理。</p><h4 id="Bitcoin机制中的漏洞"><a href="#Bitcoin机制中的漏洞" class="headerlink" title="Bitcoin机制中的漏洞"></a>Bitcoin机制中的漏洞</h4><p>自私采矿（selfish mining），这项技术可让矿工赚的钱超过他本应该拿到的合理回报，从而损害系统的公平性。</p><p>区块链依赖于信息的快速广泛传播，但是如果矿工手握某些高额交易费的交易信息，那么他可能倾向于把它留在自己手里，获取这笔更高的手续费。</p><p>比特币还会形成一定的集中化系统，因为挖矿奖励太稀有了，大家倾向于聚集到矿池中获得更稳定的回报。这在长期来看对比特币系统是一种不利因素。</p><h3 id="Ethereum-以太坊"><a href="#Ethereum-以太坊" class="headerlink" title="Ethereum 以太坊"></a>Ethereum 以太坊</h3><p>以太坊和比特币最大的不同在于，引入了<strong>智能合约</strong>。</p><p>但是，智能合约的调用消耗是<strong>非常不确定</strong>的：</p><ul><li>Execution cost: 运行时间可能达到上百万个循环</li><li>Storage cost: 可能最大需要额外的上百万的空间消耗</li></ul><h4 id="Halting-Problem-停机问题"><a href="#Halting-Problem-停机问题" class="headerlink" title="Halting Problem 停机问题"></a>Halting Problem 停机问题</h4><p><strong><font color=red>halting problem</font></strong>(<strong>停机问题</strong>): just by looking at the transaction, you cannot decide if it will ever finish running</p><ul><li><strong>limit the <font color=blue>language</font></strong> so that you cannot even write such code (Bitcoin)<ul><li>this works but might severely limit the types of applications you are able to express</li></ul></li><li>run for a <strong>fixed <font color=blue>duration</font></strong> then terminate (Hyperledger)<ul><li>this might harm determinism: code that timeouts on one machine might terminate on another, any they will be unable to reach consensus</li></ul></li><li>terminate after a <strong>certain number of <font color=blue>steps</font></strong> (a certain amount of computation) has been performed<ul><li>you pay for each computational unit so that miners get properly compensated</li></ul></li></ul><h4 id="Gas"><a href="#Gas" class="headerlink" title="Gas"></a><font color=deepskyblue>Gas</font></h4><blockquote><p>Ethereum: “<strong>pay-per-computational-step</strong>” model</p></blockquote><p>instead of pricing instructions directly in ETH (the price of which fluctuates), we use another metric: <strong><font color=red>GAS</font></strong></p><p>each <strong>EVM instruction</strong> has a predefined GAS cost that is independent of the value of ETH</p><p><strong>the gas cost of a transaction is the sum of the cost for each instruction executed</strong></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201109225608055.png" class="" title="INSTRUCTION GAS COSTS"><blockquote><p>source: <a href="https://github.com/djrtwo/evm-opcode-gas-costs/blob/master/opcode-gas-costs_EIP-150_revision-1e18248_2017-04-12.csv">https://github.com/djrtwo/evm-opcode-gas-costs/blob/master/opcode-gas-costs_EIP-150_revision-1e18248_2017-04-12.csv</a></p></blockquote><h4 id="Gas-Limit"><a href="#Gas-Limit" class="headerlink" title="Gas Limit"></a><font color=aqua>Gas Limit</font></h4><p>when you send a transaction, you specify a <strong><font color=red>gas limit</font></strong>: <strong>the maximum amount of GAS you are willing to spend</strong></p><ul><li>if the execution reaches this limit before finishing, the transaction is reverted and you pay the corresponding fee</li><li>if the gas used by the execution is below the limit, the remaining gas is refunded to your account</li></ul><blockquote><p>this basically solves the halting problem: you can write infinite loops but you’ll have to pay for them</p></blockquote><h4 id="Gas-Price"><a href="#Gas-Price" class="headerlink" title="Gas Price"></a><font color=aqua>Gas Price</font></h4><p>when you send a transaction, you specify a <strong><font color=red>gas price</font></strong>: <strong>the amount of ETH you’re willing to pay per gas</strong></p><p>you are free to choose what gas price to set, similarly to Bitcoin where you can set the transaction fee freely</p><p>the miner is free to choose which transactions to include. it is likely to choose transactions with higher gas pric</p><blockquote><p>这里也会变成类似比特币的拍卖系统</p></blockquote><hr><p><strong>Example</strong>:</p><blockquote><p>Let’s say you can a transaction with</p><ul><li>gas limit: 50000</li><li>gas price: 0.00000008 Ether (80 Gwei)</li></ul><p>you will have to make an up-front(预付) payment of</p><ul><li>50000 x 0.00000008 = 0.004 ETH</li></ul><p>if execution uses 41172 gas, after refund you’ll effectively pay</p><ul><li>41172 x 0.00000008 = 0.00329376 ETH</li></ul></blockquote><h4 id="Example-Contract"><a href="#Example-Contract" class="headerlink" title="Example Contract"></a>Example Contract</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">contract Test &#123;</span><br><span class="line">    uint256 num_a = <span class="number">0</span>;</span><br><span class="line">    uint256 num_b = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">increment</span><span class="params">()</span> public &#123;</span><br><span class="line">        num_a += <span class="number">1</span>;</span><br><span class="line">        num_b += <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// incrementing is essentially equivalent to:</span></span><br><span class="line">        <span class="comment">// uint256 current_value = number;</span></span><br><span class="line">        <span class="comment">// uint256 new_value = current_value + 1;</span></span><br><span class="line">        <span class="comment">// number = new_value;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// solc compiles it like this:</span></span><br><span class="line">        <span class="comment">// SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1</span></span><br><span class="line">        <span class="comment">// PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// we will simply treat it like this:</span></span><br><span class="line">        <span class="comment">// SLOAD ADD SSTORE SLOAD ADD SSTORE</span></span><br><span class="line">        <span class="comment">// gas cost: 2 x (3 + 200 + 5000) = 10406 GAS</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>what happens if we provide a gas limit of <strong>5203 GAS</strong>? (不足的GAS)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">contract Test &#123;</span><br><span class="line">    uint256 num_a = <span class="number">0</span>;</span><br><span class="line">    uint256 num_b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    function <span class="title function_">increment</span><span class="params">()</span> public &#123;</span><br><span class="line">        num_a += <span class="number">1</span>; <span class="comment">// this succeeds</span></span><br><span class="line">        <span class="comment">// &lt;- we run out of gas at this point</span></span><br><span class="line">        num_b += <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// the whole transaction is reverted</span></span><br><span class="line">        <span class="comment">// neither num_a nor num_b is updated</span></span><br><span class="line">        <span class="comment">// the sender pays for the executed 5203 GAS</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>what happens if we provide a gas limit of 12000 GAS? (足够的GAS)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">contract Test &#123;</span><br><span class="line">    uint256 num_a = <span class="number">0</span>;</span><br><span class="line">    uint256 num_b = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">increment</span><span class="params">()</span> public &#123;</span><br><span class="line">        num_a += <span class="number">1</span>; <span class="comment">// this succeeds</span></span><br><span class="line">        num_b += <span class="number">1</span>; <span class="comment">// this also succeeds</span></span><br><span class="line">        <span class="comment">// we finish the execution</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// the whole transaction succeeds</span></span><br><span class="line">        <span class="comment">// both num_a and num_b will be updated</span></span><br><span class="line">        <span class="comment">// the sender pays for the executed 10406 GAS, 1594 is refunded</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><hr><hr><p><strong>Why call it “GAS”</strong>? （<em>Why the gas analogy(类比)?</em>）</p><ul><li>gasoline is what really moves your car, just as it moves the execution of smart contracts</li><li>your car’s gas consumption is roughly static, while the price of gasoline changes</li><li>you could try stuffing dollar bills into the fuel tank of your car, but instead you buy gasoline using dollars, and use that to run it</li></ul><h3 id="Conflux"><a href="#Conflux" class="headerlink" title="Conflux"></a>Conflux</h3><p>Conflux inherited the same fee mechanism from Ethereum, with <strong>a few changes</strong>:</p><ul><li>limited gas refund</li><li>separate payment for execution and storage</li><li>gas can be sponsored（代付机制）</li></ul><h4 id="Limited-Gas-Refund-有限回偿"><a href="#Limited-Gas-Refund-有限回偿" class="headerlink" title="Limited Gas Refund 有限回偿"></a>Limited Gas Refund 有限回偿</h4><p>the cost of a contract call might change, depending on when you call it. consider the following example:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">contract MaybeExpensive &#123;</span><br><span class="line">    uint256 num = <span class="number">0</span>;</span><br><span class="line">    event <span class="title function_">E</span><span class="params">(uint8 n)</span>;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">increment</span><span class="params">()</span> public &#123; num += <span class="number">1</span>; &#125;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">foo</span><span class="params">()</span> public &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (uint8 ii = <span class="number">0</span>; ii &lt; <span class="number">1000</span>; ii++) &#123;</span><br><span class="line">                emit <span class="title function_">E</span><span class="params">(ii)</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>triggering foo() might do almost nothing, or it might also emit 1000 events, depending on the current value of num</p></blockquote><ul><li>in Conflux, miners cannot know for sure the state on whichthe transaction is executed<ul><li>this makes it <strong>impossible to accurately estimate the profits of including certain transactions</strong></li></ul></li><li>to make this estimation easier, <strong><font color=red>at most 1/4 of the whole gas is refunded</font></strong><ul><li>e.g. if gas limit is 10000 and the transaction execution used 6000 gas, the account will still be charged for 7500</li></ul></li></ul><p>这是对矿工收益的权衡之举。</p><h4 id="Pay-Separately-for-Storage-存储抵押费"><a href="#Pay-Separately-for-Storage-存储抵押费" class="headerlink" title="Pay Separately for Storage 存储抵押费"></a>Pay Separately for Storage 存储抵押费</h4><p><strong>in Ethereum paying for storage is a one-time fee</strong> (gas for SSTORE), even though <strong><font color=blue>miners might have to store it forever</font></strong>.</p><p>consider this example: that 13 has to be stored on each machine maintaining the blockchain.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">contract Storage &#123;</span><br><span class="line">    mapping (address =&gt; uint256) data;</span><br><span class="line">    constructor() &#123;</span><br><span class="line">    data[msg.sender] = <span class="number">13</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>in Conflux, you need to deposit CFX for storage entries.<br>this deposit is called <strong>storage collateral</strong>.</p><blockquote><p>miners earn interest on the collateralized storage</p></blockquote><p>if someone deletes or overwrites your entry, you get back your collateral</p><hr><hr><hr><p>so what you will pay is</p><center><strong>(<i><font color=blue>gas_used</font></i> x <i><font color=blue>gas_price</font></i>) + (<i><font color=green>1/16 CFX</font></i> x <i><font color=green>storage_collateralized</font></i>)</strong></center><p>… minus the refund of at most <strong><i><font color=red>1/4</font></i> x <i><font color=red>gas_used</font></i> x <i><font color=red>gas_price</font></i></strong></p><h2 id="transaction-sponsorship"><a href="#transaction-sponsorship" class="headerlink" title="transaction sponsorship"></a>transaction sponsorship</h2><h3 id="The-Problem-with-Gas"><a href="#The-Problem-with-Gas" class="headerlink" title="The Problem with Gas"></a>The Problem with Gas</h3><p>Ethereum dapps: high entry barrier</p><ul><li>get a wallet, acquire some ETH, …</li></ul><p>are people willing to pay for each transaction?</p><ul><li>web 2.0: you have to pay for your server’s uptime but you don’t directly push this onto your customers; you have other revenue streams</li></ul><h3 id="Sponsorship-Mechanism-in-Conflux"><a href="#Sponsorship-Mechanism-in-Conflux" class="headerlink" title="Sponsorship Mechanism in Conflux"></a>Sponsorship Mechanism in Conflux</h3><p>某个人可以选择为某个智能合约的所有交易代付手续费。从而降低人们参与智能合约的门槛。</p><blockquote><p>someone can choose to sponsor transactions to a smart contract, i.e. pay on the sender’s behalf</p></blockquote><p>example use case: <strong>MoonSwap</strong></p><ul><li><strong>UniSwap</strong>: if you swap ETH for USDT, fees are around $4.1 at the time of writing</li><li><strong>MoonSwap</strong>: would cost $0.4 at current price but in practice it’s $0 because the transaction is sponsored</li></ul><h3 id="代付白名单控制"><a href="#代付白名单控制" class="headerlink" title="代付白名单控制"></a>代付白名单控制</h3><p>there is a <strong>built-in contract</strong>(魔术合约，系统内置，由Conflux提供) called <strong>SponsorWhitelistControl</strong><br>address: <strong><code>0x0888000000000000000000000000000000000001</code></strong></p><p>sponsor calls <code>setSponsorForGas(…)</code> to <strong>become the sponsor of a smart contract</strong>. they will also send some CFX along that will be used to cover the gas costs.</p><p>contract calls <code>addPrivilege(…)</code> to “whitelist” accounts<br>(or use 0x0000000000000000000000000000000000000000 (含义：为所有人代付) )</p><hr><p>let’s say Alice deploys the following contract for her dapp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">contract MyCoolDapp &#123;</span><br><span class="line">    constructor() &#123;</span><br><span class="line">        address addr = <span class="number">0x0888000000000000000000000000000000000001</span>;  <span class="comment">// 白名单合约地址</span></span><br><span class="line">        SponsorWhitelistControl swc = SponsorWhitelistControl(addr);</span><br><span class="line">        </span><br><span class="line">        address[] memory a = new address[](<span class="number">1</span>);</span><br><span class="line">        a[<span class="number">0</span>] = <span class="number">0x0000000000000000000000000000000000000000</span>;  <span class="comment">// 代付所有人</span></span><br><span class="line">        swc.add_privilege(a);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function <span class="title function_">doSomething</span><span class="params">()</span> public &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>when Bob calls <code>doSomething()</code> , he has to cover gas and storage</p></blockquote><p>at some point, Alice <strong>sends 10 CFX to the SWC contract</strong> through this call:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">swc.setSponsorForGas(</span><br><span class="line">    <span class="number">0x8caddbc9f0360b6b96e32fc0a37ffa275ee139f6</span>, <span class="comment">// contract</span></span><br><span class="line">    <span class="number">100000000000000000</span>, <span class="comment">// upper limit per transaction: 0.1 CFX</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>upper_bound is in Drip but transfer amount is in CFX</p></blockquote><p>she will most likely do this using the JavaScript SDK, or directly from Conflux Studio</p><p>this means that at least 100 transactions will be sponsored</p></blockquote><p>when Bob calls <code>doSomething()</code> again, he does not need to pay anymore</p><hr><h3 id="blockchain-applications-and-tools"><a href="#blockchain-applications-and-tools" class="headerlink" title="blockchain applications and tools"></a>blockchain applications and tools</h3><ul><li>通证 tokens (ERC-20货币通证, NFT非同质通证)<ul><li>stablecoin</li><li>tokenized art</li><li>tokenized real-world assets</li></ul></li><li>DeFi<ul><li>MoonDex 去中心化交易所</li><li>MoonSwap<ul><li>AMM（自动做市商）</li></ul></li></ul></li><li>ShuttleFlow 跨链映射协议<ul><li>a building block for DeFi applications</li><li>move tokens from other chains to Conflux</li><li>e.g. ETH -&gt; cETH, BTC -&gt; cBTC（资产的跨链转移）</li></ul></li><li>Oracles（预言机）<ul><li>allow your smart contract to interact with the world（安全地获取外界的信息）</li></ul></li></ul><hr><h3 id="Resources-1"><a href="#Resources-1" class="headerlink" title="Resources"></a>Resources</h3><ul><li>ETH Gas Station<ul><li><a href="https://ethgasstation.info">https://ethgasstation.info</a></li></ul></li><li>Bitcoin’s Underlying Incentives<ul><li><a href="https://queue.acm.org/detail.cfm?id=3168362">https://queue.acm.org/detail.cfm?id=3168362</a></li></ul></li><li>Zohar et al. Redesigning bitcoin’s fee market. 2019.<ul><li><a href="https://arxiv.org/abs/1709.08881">https://arxiv.org/abs/1709.08881</a></li></ul></li><li>Eyal, Sirer. Majority is not Enough: Bitcoin Mining is Vulnerable.<br>2013.<ul><li><a href="https://www.cs.cornell.edu/~ie53/publications/btcProcFC.pdf">https://www.cs.cornell.edu/~ie53/publications/btcProcFC.pdf</a></li></ul></li><li>What is Ethereum Gas?<ul><li><a href="https://blockgeeks.com/guides/ethereum-gas">https://blockgeeks.com/guides/ethereum-gas</a></li></ul></li><li>Staking &amp; Collateral For Storage On Conflux Network<ul><li><a href="https://medium.com/conflux-network/conflux-economic-model-staking-collateral-for-storage-on-conflux-network-cb4c8c150e3">https://medium.com/conflux-network/conflux-economic-model-staking-collateral-for-storage-on-conflux-network-cb4c8c150e3</a></li></ul></li><li>Block Reward Components Under the Network’s Mining Incentive Model<ul><li><a href="https://medium.com/conflux-network/conflux-networks-economic-model-block-reward-components-under-the-network-s-mining-incentive-ceadd8f8408f">https://medium.com/conflux-network/conflux-networks-economic-model-block-reward-components-under-the-network-s-mining-incentive-ceadd8f8408f</a></li></ul></li></ul><h1 id="Homework-of-Lecture-6"><a href="#Homework-of-Lecture-6" class="headerlink" title="Homework of Lecture 6"></a>Homework of Lecture 6</h1><blockquote><p><a href="https://forum.conflux.fun/t/topic/3741">Lecture 6 - Homework &amp; Resources</a></p><blockquote><p>Homework is done by a group.</p></blockquote></blockquote><h2 id="1-Answer-the-following-questions-in-a-few-sentences-using-your-own-words"><a href="#1-Answer-the-following-questions-in-a-few-sentences-using-your-own-words" class="headerlink" title="1. Answer the following questions in a few sentences using your own words."></a>1. Answer the following questions in a few sentences using your own words.</h2><p>1.a) Why does Ethereum price EVM instructions in GAS instead of using ETH directly?</p><blockquote><p><em>GAS refers to the computational power required from miners to validate the transaction or smart contract. ETH is the currency used to compensate miners for the GAS required to do the computational work. GAS consumption values are relatively static, while the price of ETH is dynamic and changes overtime.</em> </p><p><em>Charging instructions in GAS thus makes it easier for miners to measure the <strong>cost-benefits of a computation</strong></em> <em>and planning their work.</em></p></blockquote><p>1.b) What is the goal of the gas sponsorship mechanism introduced in Conflux?</p><blockquote><p><em>Transactions costs on the blockchain are traditionally paid by the user, who benefits from the blockchain network feature.</em> </p><p><em>However, as with the case in any other economy, costs are always</em> <strong><em>pain points</em></strong> <em>and discourages adoption. Adoption is critical for building an ecosystem which value increases from network externalities, which precisely the case with most blockchain networks. In addition,</em> <strong><em>blockchain is not necessarily used to facilitate transactions</em></strong>, <em>so there is the possibility that users of the network do not have any deposited amount with which to pay the transaction fee.</em></p><p><em>The gas sponsorship mechanism therefore 1) removes a barrier to adoption of the network by new users and 2) increases the application scenarios / flexibility of the smart contract.</em></p></blockquote><p>1.c) What steps should a developer take so that users of their smart contract do not have to pay for gas?</p><blockquote><p><em>Implement the Gas Sponsorship Mechanism: allow anyone willing to pay to become a “Sponsor”, donating funds to any contract to pay for the transactions of other whitelisted users (usually new ones with 0 account balance).</em></p><p><em>Several parameters to include:</em></p><ol><li><em>Sponsor - records the account providing sponsorship funds for the smart contract</em></li><li><em>Sponsor balance - records the current balance of the sponsorship funds for the smart contract</em></li><li><em>Sponsor limit per transaction - sets an upper limit of funds for individual transactions</em></li><li><em>Whitelist - records, or limits, the accounts that can be sponsored/funded by the smart contract</em></li></ol></blockquote><h2 id="1-Gas-cost-of-token-transfers-OPTIONAL"><a href="#1-Gas-cost-of-token-transfers-OPTIONAL" class="headerlink" title="+1. Gas cost of token transfers [OPTIONAL]"></a>+1. Gas cost of token transfers [OPTIONAL]</h2><p>Download lecture-5’s CourseToken project (<a href="http://github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-5.zip">github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-5.zip 2</a>) or use your own version.</p><p>Send some tokens to a new address. How much were you charged for this transfer? Try to explain why.</p><p>How does the fee change if you send some more tokens to the same address again?</p><blockquote><p>Create a new “CourseCoin” contract:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201110221640108.png" class="" title="create"><p><strong>Send some tokens to a new address</strong>:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201110223816308.png" class="" title="sending tests"><ul><li><strong>How much were you charged for this transfer?</strong><ul><li>sent <code>10</code>, “gasUsed”: “<strong><font color=red>35819</font></strong>“ with gas limit “1000000”, and “gasPrice”: 100</li><li><del>Before Vel has CFX: <strong><code>34363.0111445711547907 CFX</code></strong></del><ul><li><del>SUDDENLY I realize that “Vel” is mining to gain more CFXs. So it won’t work this way.</del></li></ul></li><li>Created another new “CourseCoin” contract with “Calvin”<ul><li>Before Calvin has CFX: <strong><code>9997.756835937425</code> CFX</strong></li><li>After Calvin has CFX:    <strong><code>9997.69433593735</code> CFX</strong></li><li>So, total cost is: <strong><code>0.06250000007457857</code> CFX</strong></li></ul></li></ul></li></ul><p><strong>Try to explain why.</strong></p><p>We have the calculation form for this as follows:</p><blockquote><p><em>so what you will pay is</em></p><center><strong>(<i><font color=blue>gas_used</font></i> x <i><font color=blue>gas_price</font></i>) + (<i><font color=green>1/16 CFX</font></i> x <i><font color=green>storage_collateralized</font></i>)</strong></center><p><em>… minus the refund of at mos</em>t <strong><i><font color=red>1/4</font></i> x <i><font color=red>gas_used</font></i> x <i><font color=red>gas_price</font></i></strong></p></blockquote><ul><li><i><font color=blue>gas_used</font></i> x <i><font color=blue>gas_price</font></i> = <code>35819 * 100</code> = 3581900 Drips = 3.5819e-12 CFX (<strong>In theory</strong>)<ul><li>But according to the refund policy:<ul><li><i><font color=blue>gas_used</font></i> x <i><font color=blue>gas_price</font></i> = <code>3/4 * 1000000 * 100</code> = 75000000 Drips = 7.5e-11 CFX</li></ul></li></ul></li><li>so we can deduce that:<ul><li><i><font color=green>1/16 CFX</font></i> x <i><font color=green>storage_collateralized</font></i> =  <strong><code>0.06250000007457857</code> CFX</strong> - 7.5e-11 CFX $\approx$ 0.0625 CFX</li><li>which also implies: <i><font color=green>storage_collateralized</font></i>  $\approx$ 1</li></ul></li></ul><blockquote><p>But still, the numbers doesn’t exactly match which is still remaining mystery.</p></blockquote><p><strong>How does the fee change if you send some more tokens to the same address again?</strong></p><ul><li>sent <code>1234</code>, gasUsed”: “<strong><font color=red>35883</font></strong>“</li><li>Calvin now has CFX:   <strong><code>9997.694335937275</code> CFX</strong></li><li>total cost is: <strong><code>0.000000000075</code> CFX</strong></li><li>It becomes <strong>significantly low</strong>. I think it’s because the first transaction include data storage initialization which is expensive (<strong><i><font color=green>1/16 CFX</font></i> x <i><font color=green>storage_collateralized</font></i></strong>).</li></ul></blockquote><h2 id="1-Sponsored-ticket-sale-OPTIONAL"><a href="#1-Sponsored-ticket-sale-OPTIONAL" class="headerlink" title="+1. Sponsored ticket sale [OPTIONAL]"></a>+1. Sponsored ticket sale [OPTIONAL]</h2><p>Download lecture-4’s Tickets project (<a href="http://github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-4-tickets.zip">github.com/Thegaram/cfx-uma-resources/raw/master/cfx-lecture-4-tickets.zip</a>) or use your own version.</p><p>Change the contract so that people buying tickets through it <strong>do not have to pay any transaction fee</strong>.</p><blockquote><p>First, trying to find <code>SponsorWhitelistControl.sol</code>.</p><blockquote><p>The <code>import &quot;github.com/Conflux-Chain/conflux-rust/blob/master/internal_contract/contracts/SponsorWhitelistControl.sol&quot;;</code> doesn’t seem working now. Bad news.</p></blockquote><p>But going the website and copying the code is avaliable. And the version is changed. Function Callings are also different.</p><p>So I reimplement the <code>SponsorWhitelistControl.sol</code> to fit the demand.</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201110233817335.png" class="" title="reimplement"><p>Now we deploy the ticket contract, and there are few changes in the code:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201110233941247.png" class="" title="changes"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201110234019028.png" class="" title="deploy"><blockquote><p>The ticket is priced as 15 CFX for each.</p></blockquote><p>“Leon” has 10000 CFX at first:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201110234106465.png" class="" title="Leon balance"><p>Leon buys 1 ticket:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201110234242002.png" class="" title="Leon balance"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201110234301936.png" class="" title="buy"><p>Let’s say Jessica wants to sponsor the contract:</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201110234445503.png" class="" title="Jessica"><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201111001414466.png" class="" title="sponsor"><p>running into a serious trouble…</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201111001212392.png" class="" title="failed"><p>All the sponsor transactions are timeout and reverted, even the ones I directly send from the <code>0x0888000000000000000000000000000000000001</code> panel.</p><p>After some parameter adjustments, it worked.</p><p><strong>Calvin sponsored 101 CFX to the contract.</strong></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201111181900247.png" class="" title="Calvin"><p>Now we can try to buy some more tickets without any charges:</p><p>Leon has: <strong>9974.81249999985 CFX</strong></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201111182622153.png" class="" title="Leon balance"><p>Leon buys 2 tickets: (Each ticket is 5 CFX)</p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201111182715084.png" class="" title="buy"><p>Leon has: 9974.81249999985 CFX - 10 CFX =  <strong>9964.81249999985 CFX</strong></p><img data-src="/%E5%8C%97%E6%96%97UMA%E4%B8%93%E9%A1%B9/image-20201111182857195.png" class="" title="Leon balance"><p>Indeed there is no transaction fee for Leon! We made it!</p></blockquote><h1 id="Lecture-7-DeFi-Reconstruction-and-Innovation-of-Finance"><a href="#Lecture-7-DeFi-Reconstruction-and-Innovation-of-Finance" class="headerlink" title="Lecture 7 - DeFi, Reconstruction and Innovation of Finance"></a>Lecture 7 - DeFi, Reconstruction and Innovation of Finance</h1><h1 id="Lecture-8-Blockchain-Story"><a href="#Lecture-8-Blockchain-Story" class="headerlink" title="Lecture 8 - Blockchain Story"></a>Lecture 8 - Blockchain Story</h1><h1 id="Final-Project"><a href="#Final-Project" class="headerlink" title="Final Project"></a>Final Project</h1><blockquote><p><a href="https://github.com/stellarkey/uma_bbnc_project">https://github.com/stellarkey/uma_bbnc_project</a></p></blockquote><div><hr><font size=5>相关文章</font><ul><li><a href="https://stellarkey.github.io/%E6%8C%96%E7%9F%BF%E5%85%A5%E9%97%A8/">挖矿入门</a></li><li><a href="https://stellarkey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/">区块链课程实验</a></li><li><a href="https://stellarkey.github.io/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%AE%80%E8%AE%B0/">零知识证明简记</a></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.edu.confluxnetwork.org/&quot;&gt;&lt;strong&gt;北斗计划 - 天枢&lt;/strong&gt;&lt;/a&gt;。A little bit of recordings during the UMA session.</summary>
    
    
    
    <category term="Learn" scheme="https://stellarkey.github.io/categories/Learn/"/>
    
    
    <category term="区块链" scheme="https://stellarkey.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="Conflux" scheme="https://stellarkey.github.io/tags/Conflux/"/>
    
  </entry>
  
  <entry>
    <title>中药说明书实体识别挑战纪要</title>
    <link href="https://stellarkey.github.io/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/"/>
    <id>https://stellarkey.github.io/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/</id>
    <published>2020-09-20T10:42:41.000Z</published>
    <updated>2021-01-04T15:24:46.932Z</updated>
    
    <content type="html"><![CDATA[<p>中药说明书实体识别挑战是天池大数据竞赛，主要任务是对药品的说明书中的实体进行提取和分类。<span id="more"></span>这个比赛进度我一直在拖，再过十几天就结束了，感觉时间还是很紧张的。得抓紧抽时间把baseline至少先写出来。</p><blockquote><p>告一段落，确实没有什么时间参与。。倒是可以作为一个关于时间管理的思考。</p></blockquote><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><em>Speech and Language Processing - 3rd</em> / Information Extraction / Named Entity Recognition</p><p>比赛地址：<a href="https://tianchi.aliyun.com/competition/entrance/531824/introduction">中医药天池大数据竞赛——中药说明书实体识别挑战</a></p><blockquote><p><a href="https://tianchi.aliyun.com/notebook-ai/?spm=5176.12281976.J_9711814210.13.3d593f79k2QqEm">天池实验室</a></p></blockquote><p>(BERT+CRF) NER：<a href="https://tianchi.aliyun.com/forum/postDetail?postId=126542">https://tianchi.aliyun.com/forum/postDetail?postId=126542</a></p><p><a href="https://easyai.tech/ai-definition/ner/">命名实体识别 – Named-entity recognition | NER</a></p><p><a href="https://zhuanlan.zhihu.com/p/90133637">基于深度学习的NER综述</a></p><p><a href="https://zhuanlan.zhihu.com/p/88545206">【NLP-NER】命名实体识别中最常用的两种深度学习模型</a></p><p><a href="https://github.com/macanv/BERT-BiLSTM-CRF-NER">BERT-BiLSTM-CRF-NER</a></p><p><a href="https://mp.weixin.qq.com/s/SgkQB7t0j2_kqHeotspHBQ">一等奖团队分享 | 2019 CCF BDCI 《互联网金融新实体发现》</a></p><p><a href="https://blog.csdn.net/lhy2014/article/details/84582145">中文电子病例命名实体识别项目</a>，<a href="https://raw.githubusercontent.com/alibaba-research/ChineseBLUE/master/data/cMedQANER/train.txt">训练标注集</a></p><p><a href="https://github.com/alibaba-research/ChineseBLUE">ChineseBLUE, the Chinese Biomedical Language Understanding Evaluation benchmark</a>，跑跑试试</p><h1 id="探知-命名实体识别-NER"><a href="#探知-命名实体识别-NER" class="headerlink" title="探知-命名实体识别(NER)"></a>探知-命名实体识别(NER)</h1><h2 id="信息抽取"><a href="#信息抽取" class="headerlink" title="信息抽取"></a>信息抽取</h2><p>NER（Named Entity Recognition）技术是一种NLP中的<strong>信息抽取</strong>（Information Extration）技术。</p><p>信息抽取将非结构化的文本信息嵌入到结构化的数据结构（如，关系型数据库）之中。</p><p>信息抽取包括：</p><ul><li><strong>命名实体识别</strong>（Named Entity Recognition，NER）<ul><li>找到并标记（label）分类所有的提及“命名实体”的文本</li></ul></li><li><strong>关系抽取</strong>（Relation Extraction）<ul><li>找到并分类所有文本中实体间的语义关系<ul><li>ex: child-of, employment, part-whole, and geospatial relations…</li></ul></li></ul></li><li><strong>事件抽取</strong>（Event Extraction）<ul><li>找到实体们参与的事件</li><li>Event coreference：确定同一事件的不同指代，并归类为同一事件</li><li>temporal expression：确定事件发生的时间表达，并normalize成准确的格式化时间</li><li>template filling：许多文本描述的是非常标准的结构化事件，因此变成“槽值填充”类似的东西了</li></ul></li></ul><h2 id="命名实体"><a href="#命名实体" class="headerlink" title="命名实体"></a>命名实体</h2><p>实体抽取通常作为作为信息抽取的第一步。在此基础上可以实现其它很多NLP任务，如情感分析、知识问答、信息结构化……</p><p><strong><font color=red>命名实体</font></strong>：任何指代着一个<strong>适定名称</strong>的事物。（例：某个人物、地点、组织……）</p><blockquote><p>适定名称就是<strong>确定无歧义</strong>的指代名。</p><p>这个术语也常常扩展到非实体的领域，如：日期、事件等temporal expression，价格等numerical expression。下图是一个NER的示例：</p></blockquote><img data-src="/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/image-20200926123214018.png" class="" title="NER的示例"><blockquote><p>上图中有13个命名实体，包括5个organization，4个location，2个time，1个person和1个money。</p></blockquote><h3 id="命名实体类"><a href="#命名实体类" class="headerlink" title="命名实体类"></a>命名实体类</h3><p>下图给出了常见的命名实体种类，当然这种形式的分类是面向通用任务的。中医药比赛或者说自定义的人物场景，可以根据需求来设计更细致、面向领域的分类。比如，蛋白质分类、基因、商品、艺术品、药品……</p><img data-src="/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/image-20200926124051196.png" class="" title="常见的命名实体种类"><h2 id="命名实体识别"><a href="#命名实体识别" class="headerlink" title="命名实体识别"></a>命名实体识别</h2><p><strong><font color=red>命名实体识别</font></strong>：寻找包含适定名称的文本段，并分类对应实体。</p><blockquote><p>识别任务的难度部分在于分词（准确地界定实体边界），另一部分在于分类时的歧义（Type Ambiguity）。</p><img data-src="/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/image-20200926130704988.png" class="" title="分类时的歧义"></blockquote><h2 id="序列标注-Sequence-Labeling"><a href="#序列标注-Sequence-Labeling" class="headerlink" title="序列标注 Sequence Labeling"></a>序列标注 Sequence Labeling</h2><p>NER的基本算法是（word by word）序列标注任务。</p><p>常见的序列标注模型：<strong>HMM</strong>，<strong>MEMM</strong>，<strong>CRF</strong>，<strong>bi-LSTM</strong>……</p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/33397147">概率图模型体系：HMM、MEMM、CRF</a></p><p><a href="https://www.dazhuanlan.com/2019/12/20/5dfc5febcda93/">谈谈序列标注三大模型HMM、MEMM、CRF</a></p><p>因为bi-LSTM深度学习可以更好地抽取特征，CRF机器学习则需要好的特征来发挥效果，所以这两个模型常常结合起来使用。（<a href="https://www.jianshu.com/p/c7c3ace12044">Here</a>）</p><p><a href="https://www.cnblogs.com/shona/p/12121473.html">NLP | 序列标注 总结</a></p></blockquote><p>序列标注的应用场景非常广泛，可以解决一系列对字符进行分类的问题，比如：分词、词性标注、命名实体识别、关系抽取……</p><p>序列标注一般可以分为两类：</p><ul><li><strong>原始标注</strong>（Raw labeling）：每个元素都需要被标注为一个标签。</li><li><strong>联合标注</strong>（Joint segmentation and labeling）：多个连续分段被标注为同一个标签。</li></ul><p>其中，通过使用BIO标注可以将联合标注转化为原始标注问题。</p><h3 id="标注法：IO-BIO-BIEO…"><a href="#标注法：IO-BIO-BIEO…" class="headerlink" title="标注法：IO / BIO / BIEO…"></a>标注法：IO / BIO / BIEO…</h3><blockquote><p><a href="https://zhuanlan.zhihu.com/p/147537898">序列标注方法BIO、BIOSE、IOB、BILOU、BMEWO、BMEWO+的异同</a></p></blockquote><ul><li><strong>B</strong> stands for ‘<strong>beginning</strong>‘ (signifies beginning of an NE)</li><li><strong>I</strong> stands for ‘<strong>inside</strong>‘ (signifies that the word is inside an NE)</li><li><strong>O</strong> stands for ‘<strong>outside</strong>‘ (signifies that the word is just a regular word outside of an NE)</li><li><strong>E</strong> stands for ‘<strong>end</strong>‘ (signifies that the word is the end of an NE)</li><li><strong>S</strong> stands for ‘<strong>singleton</strong>‘(signifies that the single word is an NE )</li></ul><p>各种序列标注法的差异大多集中于对边界和特殊情况的处理，但是总的来说 <strong>IO</strong> 标注是最基础的序列标注单元。</p><p>如下面的一个例子：</p><img data-src="/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/image-20200926132249986.png" class="" title="example"><p>使用了 IO 和 IOB(-2) 即 IBO 方法给出序列标注的结果：</p><img data-src="/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/image-20200926132417992.png" class="" title="IO and IOB"><p>可以看到 IOB(-2) 即 IBO 在命名实体相邻的情况下会产生区分效果，但是这种情况在英文场景中较少出现。</p><p>一般来说在不追求极致性能的场景下，BIO标注方法的效果就足够好了。当然如果有精力，测试一下BIOES的效果也是可以的。</p><h2 id="基于特征的NER算法"><a href="#基于特征的NER算法" class="headerlink" title="基于特征的NER算法"></a>基于特征的NER算法</h2><p>基于特征的NER算法首先要做的事就是提取特征。然后用这些特征来train一个MEMM或者CRF之类的序列模型。</p><p>下面具体介绍一种用于英文的特征：</p><p><strong>word shape</strong>：文本的一种抽象的模式表示方法，将小写字母表示为<code>x</code>，大写字母表示为<code>X</code>，数字表示为<code>d</code>，并保留标点。例如<code>DC10-30a</code>会被映成<code>XXdd-ddx</code>。如果考虑压缩映射，把连续的同类字符合并，那么<code>DC10-30a</code>会被映成<code>Xd-dx</code>。这种特征，在基于特征的（English new text）NER任务中被证明非常成功。Shape features在诸如蛋白质名、基因等规范命名领域也很重要。</p><p>加上其它的特征，一个named entity token例如<code>L&#39;Occitane</code>将初步生成以下非零值的特征值：</p><img data-src="/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/image-20200926151702490.png" class="" title="L" alt="Occitane生成非零值的特征值"><blockquote><p>token：什么是token?（<a href="https://www.zhihu.com/question/64984731">Here</a>）</p><ul><li><strong>token</strong> (<strong>符号</strong> / <strong>元素</strong>):包括单词和标点、<ul><li>广义的token就是一串有意义的符号</li></ul></li><li><strong>tokenization</strong> (<strong>分词</strong>)：我是中国人-&gt;[‘我’, ‘是’, ‘中国人’]<ul><li>一个token就是分词后列表中的一个元素</li></ul></li></ul></blockquote><p>下图是在序列标注的结果上加入了<em><a href="https://zhuanlan.zhihu.com/p/60531442">part of speech tags</a></em>，<em>syntactic base-phrase chunk tags</em>，和一些shape的信息：</p><img data-src="/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/image-20200926152815244.png" class="" title="加入特征"><p>下图展示了一个基于特征的序列标注模型的运行方式。所有的箭头都是特征。在这里我们只考虑前后两个单词作为我们的上下文。这些所有的特征联合起来共同提供给classifier，并实现预测。</p><img data-src="/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/image-20200926154923374.png" class="" title="运行示意"><h2 id="基于神经网络的NER算法"><a href="#基于神经网络的NER算法" class="headerlink" title="基于神经网络的NER算法"></a>基于神经网络的NER算法</h2><p>标准的基于神经网络的NER算法，使用<strong>bi-LSTM</strong>作为模型。</p><blockquote><p>bi-LSTM是单独的一章，<em>Speech and Language Processing - 3rd</em>。</p></blockquote><p>注意到最上层仍然有CRF层，这是因为CRF对特征的处理更好，从而形成更好的输出序列。</p><img data-src="/%E4%B8%AD%E8%8D%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%8C%91%E6%88%98%E7%BA%AA%E8%A6%81/image-20200926191745058.png" class="" title="bi-LSTM"><h2 id="基于规则的NER算法"><a href="#基于规则的NER算法" class="headerlink" title="基于规则的NER算法"></a>基于规则的NER算法</h2><h1 id="CRF模型"><a href="#CRF模型" class="headerlink" title="CRF模型"></a>CRF模型</h1><h1 id="bi-LSTM模型"><a href="#bi-LSTM模型" class="headerlink" title="bi-LSTM模型"></a>bi-LSTM模型</h1><h1 id="BERT模型"><a href="#BERT模型" class="headerlink" title="BERT模型"></a>BERT模型</h1><h1 id="Baseline"><a href="#Baseline" class="headerlink" title="Baseline"></a>Baseline</h1><h1 id="数据增强"><a href="#数据增强" class="headerlink" title="数据增强"></a>数据增强</h1><div><hr><font size=5>相关文章</font><ul><li><a href="https://stellarkey.github.io/AI%E6%9C%AA%E6%9D%A5%E8%AF%B4-%E9%9D%92%E5%B9%B4%E5%AD%A6%E6%9C%AF%E8%AE%BA%E5%9D%9B-%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E4%B8%93%E5%9C%BA/">AI未来说-青年学术论坛（自然语言专场）</a></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;中药说明书实体识别挑战是天池大数据竞赛，主要任务是对药品的说明书中的实体进行提取和分类。</summary>
    
    
    
    <category term="Learn" scheme="https://stellarkey.github.io/categories/Learn/"/>
    
    
    <category term="NLP" scheme="https://stellarkey.github.io/tags/NLP/"/>
    
  </entry>
  
  <entry>
    <title>高等计算机网络</title>
    <link href="https://stellarkey.github.io/%E9%AB%98%E7%AD%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <id>https://stellarkey.github.io/%E9%AB%98%E7%AD%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</id>
    <published>2020-09-13T10:42:29.000Z</published>
    <updated>2021-01-04T15:57:28.237Z</updated>
    
    <content type="html"><![CDATA[<p>高等计算机网络。深入学习计算机网络体系结构、协议和算法，了解掌握计算机网络的最新研究成果，学习计算机网络的基本研究方法并能够初步开展计算机网络领域的相关研究。<span id="more"></span></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>课程：《高等计算机网络》，徐恪</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p><a href="http://www.cs.tsinghua.edu.cn/publish/cs/4616/2012/20120713164828239751432/20120713164828239751432_.html">徐恪</a>：计算机网络体系结构与高性能路由器、网络空间安全、赛博智能经济与区块链。</p><h2 id="课程目标"><a href="#课程目标" class="headerlink" title="课程目标"></a>课程目标</h2><ul><li>深入学习计算网络体系结构、协议和算法</li><li>了解掌握计算机网络的最新研究成果（论文讨论）</li><li>学习计算机网络的基本研究方法</li><li>初步开展计算机网络领域的相关研究（课程项目）</li></ul><h2 id="相关课程"><a href="#相关课程" class="headerlink" title="相关课程"></a>相关课程</h2><p>《计算机网络体系结构》——内容相当（最初的课，人数太多，为了开新课才有了“高等计算机网络”）</p><p>《计算机网络前沿研究》——注重SDN，数据中心网络，网络与AI等</p><p>《下一代互联网》——网研院的课，IPv6为核心的下一代互联网技术</p><h2 id="主要教学内容"><a href="#主要教学内容" class="headerlink" title="主要教学内容"></a>主要教学内容</h2><ul><li>介绍网络基础知识</li><li>互联网发展历史</li><li>网络体系结构详细介绍（强调基本算法和基本协议）</li><li>课堂讨论、分组调研及课堂报告</li></ul><p>注重系统性和整体性，形成网络大局观。</p><h2 id="教材和参考书"><a href="#教材和参考书" class="headerlink" title="教材和参考书"></a>教材和参考书</h2><p>《高级计算机网络》——徐恪、徐明伟</p><blockquote><p>正在出新版，旧版已经脱销了。没有太大的必要看。</p></blockquote><p>《计算机网络体系结构——设计、建模、分析与优化》</p><p>《Computer Networks》</p><h2 id="考核方式"><a href="#考核方式" class="headerlink" title="考核方式"></a>考核方式</h2><ul><li>论文阅读（30%）<ul><li>6篇500字+的阅读报告<ul><li>多交可以酌情加分（<del>开始卷了</del>）</li></ul></li></ul></li><li>技术专题讨论（30%）<ul><li>45分钟专题报告</li></ul></li><li>课程项目（40%）<ul><li>选定研究/开发型项目，并完成课程报告</li></ul></li></ul><h2 id="网络研究的基本问题"><a href="#网络研究的基本问题" class="headerlink" title="网络研究的基本问题"></a>网络研究的基本问题</h2><h3 id="网络体系结构-Architecture"><a href="#网络体系结构-Architecture" class="headerlink" title="网络体系结构 Architecture"></a>网络体系结构 Architecture</h3><p>体系结构的准确描述是很难的。 网络的基本原则和机制?</p><ul><li><strong>状态</strong>：状态的维护、更新和存储</li><li><strong>实名</strong>：实体如何命名。比如IP地址、域名</li><li><strong>名字、寻址、路由</strong>：这些功能函数的设计</li><li><strong>协议分层</strong>：Modularity of the protocol stack</li><li><strong>资源分配</strong>：公平性和（congestion control）</li><li><strong>安全性</strong>：网络安全</li><li><strong>管理</strong>：互联网的管理</li><li><strong>服务质量</strong>（QoS）：如何获得和请求服务质量</li></ul><p>网络可以分为两大技术主题：</p><ul><li><strong>网络基础理论</strong>：容量与可扩展性；最优化设计；控制理论；博弈论与机制设计；流量模型和网络行为学</li><li><strong>网络体系结构</strong>：网络分层与跨层设计；软件定义网络、主动网络、可编程网络、应用层网络、无线与移动网络、网络虚拟化；对组播和服务质量的支持；IPv6与下一代互联网</li></ul><p>网络也可以分为三大应用主题：</p><ul><li><strong>资源管理和分配</strong>：QoS，拥塞控制、流量工程</li><li><strong>网络管理</strong>：失效管理、配置管理、计费管理、性能管理、安全管理</li><li><strong>网络安全</strong>：完整性、机密性、可用性</li></ul><h3 id="网络与分布式系统"><a href="#网络与分布式系统" class="headerlink" title="网络与分布式系统"></a>网络与分布式系统</h3><p><strong><font color=purple>网络与分布式系统的界限日益模糊</font></strong>：</p><ul><li><strong>网络本质上就是分布式系统</strong></li><li><strong>互联网服务已经成为信息服务的基本模式</strong></li></ul><p>数据中心网络的资源管理和调度：</p><ul><li>数据中心分布式系统资源管理与网络流控和拥塞控制深度融合</li><li>计算广告、推荐算法等也与网络资源使用密切相关</li></ul><p>比特币与区块链：</p><ul><li>比特币就是运行在网络之上的P2P系统</li><li>区块链是P2P网络、分布式共识、密码算法等多种技术融合的产物</li></ul><h4 id="网络与分布式系统的基础科学问题"><a href="#网络与分布式系统的基础科学问题" class="headerlink" title="网络与分布式系统的基础科学问题"></a>网络与分布式系统的基础科学问题</h4><p>网络领域科学问题：</p><ul><li>安全性</li><li><mark>开放性</mark>（扩展性）</li><li>实时性</li></ul><blockquote><p>相互制约，相互平衡。</p></blockquote><p>分布式系统领域科学问题：</p><ul><li>易用性和可编程性问题</li><li>安全性问题</li><li>一致性问题（共识问题）</li><li>可靠性和可用性问题</li><li>性能提升问题</li></ul><hr><p><strong>通用人工智能</strong>：朱松纯老师正在准备搞这个方向，用小样本、小数据集来进行推理等操作。</p><h2 id="网络研究的基本方法"><a href="#网络研究的基本方法" class="headerlink" title="网络研究的基本方法"></a>网络研究的基本方法</h2><h3 id="文献阅读"><a href="#文献阅读" class="headerlink" title="文献阅读"></a>文献阅读</h3><ul><li>了解新领域，应该从综述论文入手<ul><li>ACM Computing Surveys, IEEE Communications Surveys and Tutorials</li><li>Proceedings of the IEEE</li><li>Communications of the ACM, IEEE Computer</li><li>IEEE Personal Communications, IEEE Communications Magazine, IEEE Network</li></ul></li><li>通过顶级国际会议了解最新的研究成果<ul><li>SIGCOMM，INFOCOM，MOBICOM，MOBIHOC，SIGMETRICS，GLOBECOM，ICNP</li></ul></li><li>充分利用网络资源<ul><li>图书馆电子资源（IEEE，ACM全文库）</li><li>google.com</li><li>scholar.google.com</li></ul></li><li>文献阅读<ul><li>【精致的笔记】</li><li>关注作者和研究小组</li></ul></li></ul><h2 id="网络模型与实验"><a href="#网络模型与实验" class="headerlink" title="网络模型与实验"></a>网络模型与实验</h2><p>模型：</p><ul><li>性能模型：排队论，Petri网（任丰原老师的课程）</li><li>形式化模型：自动机，SDL（尹霞老师的课程）</li><li>数学模型：优化理论（数学系相关课程），控制理论（自动化系相关课程），博弈论（网络科学与策略机制），图论，网络微积分</li></ul><p>实验：</p><ul><li>测量、模拟、仿真和实现</li><li>算法研究中，模拟最方便：ns-2, OPNET, MATLAB</li><li>研究实际网络的行为，需要进行实际测量和观察</li><li>协议研究需要仿真和实现：PlanetLab</li></ul><h2 id="Top-10-tips-for-writing-a-paper"><a href="#Top-10-tips-for-writing-a-paper" class="headerlink" title="Top-10 tips for writing a paper"></a>Top-10 tips for writing a paper</h2><ol><li>Every paper tells a story</li><li>Write top down</li><li>Introduction: crucial, formulaic</li><li>Master the basics of organized writing</li><li>Put yourself in place of the reader</li><li>No one (not even your mother) is as interested in this topic as you</li><li>State the results carefully</li><li>Don’t overstate/understate your results</li><li>Study the art of writing</li><li>Good writing takes times</li></ol><h1 id="The-Internet"><a href="#The-Internet" class="headerlink" title="The Internet"></a>The Internet</h1><p>根据排队论，分组交换的效率较高。</p><h2 id="互联网组织"><a href="#互联网组织" class="headerlink" title="互联网组织"></a>互联网组织</h2><h3 id="Internet-Society-ISOC"><a href="#Internet-Society-ISOC" class="headerlink" title="Internet Society (ISOC)"></a>Internet Society (ISOC)</h3><blockquote><p><a href="https://www.internetsociety.org/">https://www.internetsociety.org/</a></p></blockquote><h4 id="Internet-Hall-of-Fame"><a href="#Internet-Hall-of-Fame" class="headerlink" title="Internet Hall of Fame"></a>Internet Hall of Fame</h4><p><strong>Pioneers</strong>: design and development of the Internet with exceptional achievements</p><p><strong>Innovators</strong>: made outstanding technological, commercial, regulatory or policy advances and helped to expand the Internet’s positive impact on the lives of others</p><p><strong>Global Connectors</strong>: who have made major contributions to the growth, connectivity, and use of the Internet</p><h3 id="Internet-Engineering-Task-Force-IETF"><a href="#Internet-Engineering-Task-Force-IETF" class="headerlink" title="Internet Engineering Task Force (IETF)"></a>Internet Engineering Task Force (IETF)</h3><p>The IETF is the protocol engineering and development arm of the Internet</p><p>Subdivided into many working groups, which specify <strong>Request For Comments or RFCs</strong></p><h4 id="The-Internet-Engineering-Steering-Group-IESG"><a href="#The-Internet-Engineering-Steering-Group-IESG" class="headerlink" title="The Internet Engineering Steering Group (IESG)"></a>The Internet Engineering Steering Group (IESG)</h4><p>The IESG is responsible for technical management of IETF activities and the Internet standards process</p><p>Composed of the <strong>Area Directors</strong> of the IETF working groups</p><p>看起来很民主很透明，但IETF实际上仍然是一个中心化组织，其中最重要的部门就是IESG。下面的这些主席对标准化工作有几乎绝对的话语权。</p><img data-src="/%E9%AB%98%E7%AD%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20200921105404457.png" class="" title="image-20200921105404457"><blockquote><p>Futurewei 跟华为关系比较密切，常常道华为开会来跟进新技术的标准化工作。</p></blockquote><h3 id="Internet-Research-Task-Force-IRTF"><a href="#Internet-Research-Task-Force-IRTF" class="headerlink" title="Internet Research Task Force (IRTF)"></a>Internet Research Task Force (IRTF)</h3><p>做一些标准化的工作。</p><p>The Internet Research Task Force is composed of a number of focused, long-term and small Research Groups</p><h3 id="Internet-Architecture-Board-IAB"><a href="#Internet-Architecture-Board-IAB" class="headerlink" title="Internet Architecture Board (IAB)"></a>Internet Architecture Board (IAB)</h3><p>互联网一个元老院QAQ荣誉很高。</p><p>The IAB is responsible for defining the overall architecture of the Internet, providing guidance and broad direction to the IETF</p><p>目前有做一些funding。</p><h3 id="Internet-Corporation-for-Assigned-Names-and-Numbers-ICANN"><a href="#Internet-Corporation-for-Assigned-Names-and-Numbers-ICANN" class="headerlink" title="Internet Corporation for Assigned Names and Numbers (ICANN)"></a>Internet Corporation for Assigned Names and Numbers (ICANN)</h3><p>协调地址、域名等等。</p><ul><li>To reach another person on the Internet you have to type an address into your computer — <strong>a name or a number</strong></li><li>That address must be unique so computers know where to find each other</li><li>ICANN coordinates these unique identifiers across the world. Without that coordination, we wouldn’t have one global Internet</li></ul><h2 id="边缘论"><a href="#边缘论" class="headerlink" title="边缘论"></a>边缘论</h2><blockquote><p><em>“核心简单，边缘复杂”。</em></p></blockquote><img data-src="/%E9%AB%98%E7%AD%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20200921115302298.png" class="" title="image-20200921115302298"><p>边缘论的解释：</p><ul><li>One interpretation: <ul><li>A function can only be completely and correctly implemented with the knowledge and help of the applications <em>standing at the communication endpoints</em></li></ul></li><li>Another: (more precise…)<ul><li>a system (or subsystem level) should consider only functions that can be <em>completely and correctly</em> implemented within it</li></ul></li><li>Alternative interpretation: (also correct …)<ul><li>Think twice before implementing a functionality that you believe that is useful to an application at a lower layer </li><li>If the application can implement a functionality correctly, implement it a lower layer <em>only</em> as a performance enhancement</li></ul></li></ul><h3 id="层次化选择"><a href="#层次化选择" class="headerlink" title="层次化选择"></a>层次化选择</h3><p>拥塞控制究竟应该放在哪一层?</p><ul><li>应用层<ul><li>交给软件来做，那么有的人可能根本不会去管拥塞控制，每个人写的也不一样</li></ul></li><li>链路层<ul><li>交给交换机/路由器，很可能不是所有人都用得到，那么对底层硬件资源的消耗是不太理想的（需要维护大量额外的参数和控制信号）。比如，一些传输流媒体的用户可能不太care拥塞控制</li></ul></li></ul><h1 id="Internet-传输层"><a href="#Internet-传输层" class="headerlink" title="Internet 传输层"></a>Internet 传输层</h1><img data-src="/%E9%AB%98%E7%AD%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20201012100532317.png" class="" title="TCP&#x2F;IP协议栈"><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><p>早期UDP在以太网上是广播，所以很占带宽，也就是说，只要有一些视频媒体的流量，其他人可能就做不了什么事情了。</p><h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h2><p>分组交换没法解决拥塞问题。</p><blockquote><p>——提出TCP的<strong>自适应</strong>的想法。</p></blockquote><p>拥塞控制和拥塞避免。</p><ul><li>避免：尽量别出事<ul><li>93年TCP Vegas</li></ul></li></ul><p>BIC：快速找最合适的窗口大小。</p><h3 id="TCP-Header"><a href="#TCP-Header" class="headerlink" title="TCP Header"></a>TCP Header</h3><p>Flags：<code>RESET</code>可以用来断开连接，所以常常用来干扰某个TCP连接。</p><h3 id="可靠数据传输"><a href="#可靠数据传输" class="headerlink" title="可靠数据传输"></a>可靠数据传输</h3><p>可靠数据传输：IP层是不可靠的，需要在TCP中加入检查和确认等机制。</p><p>两种冗余方式：</p><ul><li>空间冗余：在编码上的冗余</li><li>时间冗余：确认+超时重传机制</li></ul><h4 id="可靠性机制"><a href="#可靠性机制" class="headerlink" title="可靠性机制"></a>可靠性机制</h4><p>Mechanisms:</p><ul><li>Checksum: detects corruption <em>in</em> <em>pkts</em> <em>&amp;</em> <em>acks</em></li><li>ACK: “packet correctly received”</li><li>Duplicate ACK: “packet <strong>incorrectly</strong> received”</li><li>Sequence number</li><li>Timeout only at sender</li></ul><p>Provides reliable transmission over:</p><ul><li>A <em>forward</em> <em>&amp; reverse</em> channel with <em>bit</em>-errors</li><li>Detects <em>duplicates</em> of packets/acks</li><li><em>NAKs eliminated</em></li><li>A <em>forward &amp; reverse</em> channel with <em>packet</em>-errors (loss)</li></ul><h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><p>3-way-handshake</p><h3 id="TCP窗口流控"><a href="#TCP窗口流控" class="headerlink" title="TCP窗口流控"></a>TCP窗口流控</h3><p>MSS：最大段长，默认536字节。</p><blockquote><p>越大效率越高，但同时如果丢包损失也越高。</p><p>可以和MTU最大传输单元进行适配。避免中途重新分配的时延。</p></blockquote><p>TCP流控：发送的包不要超过接收窗口。</p><h3 id="TCP拥塞控制"><a href="#TCP拥塞控制" class="headerlink" title="TCP拥塞控制"></a>TCP拥塞控制</h3><p>网络中堵塞之后，出现丢包问题，丢包又触发了重传……丢包、重传、丢包、重传……这便是TCP拥塞的特征。</p><p>Van Jacobson: save the Internet.</p><h4 id="拥塞控制和拥塞避免"><a href="#拥塞控制和拥塞避免" class="headerlink" title="拥塞控制和拥塞避免"></a>拥塞控制和拥塞避免</h4><p>让传输速率保持在knee附近是比较明智的选择。</p><img data-src="/%E9%AB%98%E7%AD%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20201012105445850.png" class="" title="拥塞控制图"><h4 id="动态的自适应方案"><a href="#动态的自适应方案" class="headerlink" title="动态的自适应方案"></a>动态的自适应方案</h4><p>基于网络的模型：预先分配每个节点的网络流量限制。比如，ATM、故宫。</p><p>拥塞控制的目标：</p><ul><li>稳定<ul><li>一个动态系统的均衡点</li></ul></li><li>有效</li><li>公平<ul><li>公平的问题比较复杂。。</li><li>提前定义规则，按照可预测的方式去分配资源</li></ul></li></ul><hr><p>Max-min fairness：</p><ul><li>没有拥塞时：$f = max(x_i)$</li><li>否则：$\sum_j \text{min}(x_i,f)=c$</li></ul><img data-src="/%E9%AB%98%E7%AD%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20201012110447325.png" class="" title="Max-min fairness"><p>ACK自时钟控制分组收发：每收到一个包，发送一个ACK。保持进出均衡。</p><blockquote><p>保持在knee点附近波动。实现自适应。</p></blockquote><hr><p>TCK：慢加快减。收敛到平衡点。</p><hr><p>TCK Reno：快重传，快恢复。（跳过了慢启动）</p><p>TCK Vegas：平滑的发送窗口。不会丢包。（前提时buffer足够大）</p><blockquote><p>算法主要看延迟，即RTT时间梯度。</p></blockquote><p>BIC：对RTT最优窗口值进行二分查找。但RTT更小的人更容易拿到窗口，不公平。</p><p>CUBIC：试图解决BIC的公平性问题，找到一种RTT无关的最优窗口查找算法。</p><p>————————————————</p><h4 id="BBR"><a href="#BBR" class="headerlink" title="BBR"></a>BBR</h4><p>找到带宽最大和延迟最小的点。但它们之间是相关的，所以研究人员一开始觉得是不可能的。</p><p><strong><font color=red>BBR</font></strong>：分别估计，并计算<strong>时延带宽积</strong>。按照这个值去优化。</p><blockquote><p><strong>主动测量</strong>。测量短时间（10s内）的最小RTT。</p><p>BBR的问题：</p><ul><li>公平性问题</li><li>ACK压缩问题（一个ACK应答多个报文，如200个）</li><li>应用重启时如何快速恢复带宽</li><li>不匹配的接收窗口</li></ul><blockquote><p>BBR对于数据中心网络的应用还存在一些问题。</p></blockquote></blockquote><h4 id="RED等主动队列管理算法"><a href="#RED等主动队列管理算法" class="headerlink" title="RED等主动队列管理算法"></a>RED等主动队列管理算法</h4><p>提前在队列还没有满的时候，提供一些预警信号。</p><p>随着队列变长，预警强度也随之增加。</p><p>——关键是早一点有效沟通队列的信息。</p><ul><li>不是全体通知<ul><li>引入概率，抽签通知，保证公平性</li></ul></li></ul><p>FRED：加入对flow rate的自适应。</p><hr><p>优化问题，求解全局用户效用之和的最大化。</p><p>凸优化——对偶问题。变成一个机器学习的问题。</p><p>TCP &amp; AQM。拥塞控制变成一个在互联网上求解最优化的问题。</p><hr><p>拥塞控制是Internet最重要的问题之一。</p><h1 id="Internet-服务质量"><a href="#Internet-服务质量" class="headerlink" title="Internet 服务质量"></a>Internet 服务质量</h1><p>网络研究中主要关注网络<strong><font color=blue>保证性能</font></strong>的能力。</p><p>和性能相关的主要的QoS参数：</p><ul><li>带宽</li><li>延迟</li><li>丢包率</li></ul><hr><p>交叉流量是不可预测的。</p><hr><p>集成服务，对资源进行分发预留。</p><h1 id="课程项目"><a href="#课程项目" class="headerlink" title="课程项目"></a>课程项目</h1><h2 id="项目调研"><a href="#项目调研" class="headerlink" title="项目调研"></a>项目调研</h2><h3 id="DDoS"><a href="#DDoS" class="headerlink" title="DDoS"></a>DDoS</h3><p>协作学习。然而协作学习其实就是无中心化的分布式学习。</p><h3 id="NetFPGA"><a href="#NetFPGA" class="headerlink" title="NetFPGA"></a>NetFPGA</h3><blockquote><p><a href="https://netfpga.org/">https://netfpga.org/</a></p></blockquote><p>NetFPGA可以非常方便的使得研究人员或者高校学生搭建一个高速，硬件加速的网络系统。目前NetFPGA已经融入了斯坦福大学的课程中，教授学生如何设计硬件传送、传发数据的GigE的交换机与路由器。</p><div><hr><font size=5>相关文章</font><ul><li><a href="https://stellarkey.github.io/%E5%AD%A6%E5%A0%82%E5%9C%A8%E7%BA%BF-912%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9%E8%AE%A1%E5%88%92/">912内容学习计划</a></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;高等计算机网络。深入学习计算机网络体系结构、协议和算法，了解掌握计算机网络的最新研究成果，学习计算机网络的基本研究方法并能够初步开展计算机网络领域的相关研究。</summary>
    
    
    
    <category term="Learn" scheme="https://stellarkey.github.io/categories/Learn/"/>
    
    
    <category term="计算机网络" scheme="https://stellarkey.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>静态沸腾</title>
    <link href="https://stellarkey.github.io/%E9%9D%99%E6%80%81%E6%B2%B8%E8%85%BE/"/>
    <id>https://stellarkey.github.io/%E9%9D%99%E6%80%81%E6%B2%B8%E8%85%BE/</id>
    <published>2020-09-13T04:08:30.000Z</published>
    <updated>2021-01-04T15:21:39.101Z</updated>
    
    <content type="html"><![CDATA[<p>我独自存在的思考，便是在球形容器中无它的沸腾。这时我便可以随心所欲。</p><p>我向往着脱离，我向往着抽离，我向往着疏离。</p><p>是的，总结，就是离去。思考最纯粹最理性最本质的东西。</p><p>感性只是一个人不愿意面对赤裸裸的理性的包装，但这不掩盖它仍然是规则演绎的结果。</p><p>当我气息迸发，我想象自己不属于我，从黑暗的外维静静感受。<span id="more"></span></p><p>感知。这是一切的基础。它是我一切需要获取的信息。计算成为我思考的外沿。文字成为我思考的输出方式。</p><p>这样，我的大脑便消耗热量的同时产生热量。</p><hr><p>来到这里时，便不断被提醒，国家、社会。</p><p>你已不再是唯一追求自己的个体了。</p><p>我从宏观上思考，然而这与我的命运和意志却是暗自符合的。</p><p>但我希冀的事情，总要是深远，所谓潜流。</p><hr><p>我希望在写作中冷静下来。</p><p>这样的方式通常可以有效。有意义。</p><p>至少我激发的情绪都以一种形式保存，它们不再是无意义的消耗。</p><p>我似乎在渐渐地失去我的伪装。而这尚且不是我所想要的。</p><p>你不要忘记你的梦想！</p><p>或者，说，理想！</p><p>请时刻谨记，不要随波逐流！</p><p>不要随波逐流啊。</p><p>我正在失去我的精骨，那么我只剩下躯壳。这样惶惶中站立着，我就失去了我自我。</p><p>我需要一种抽离的能力，从容地做抉择。</p><p>这个世界与我的关系，我还要再从风更大的地方看看。我要看清楚。</p><hr><p>我已经快要忘了做一个安静的人是什么感觉。</p><p>我渐渐遗忘掉我所曾坚持的静忍必驭。</p><p>但是，我的确该静下心，思考我自己的世界了。</p><p>我被太多繁琐的事情蒙蔽了头脑。</p><p>现在我只想聚焦在我的理想里面。啊，那理想之后，还有更虚无缥缈的梦想。可我感到它的实在。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我独自存在的思考，便是在球形容器中无它的沸腾。这时我便可以随心所欲。&lt;/p&gt;
&lt;p&gt;我向往着脱离，我向往着抽离，我向往着疏离。&lt;/p&gt;
&lt;p&gt;是的，总结，就是离去。思考最纯粹最理性最本质的东西。&lt;/p&gt;
&lt;p&gt;感性只是一个人不愿意面对赤裸裸的理性的包装，但这不掩盖它仍然是规则演绎的结果。&lt;/p&gt;
&lt;p&gt;当我气息迸发，我想象自己不属于我，从黑暗的外维静静感受。</summary>
    
    
    
    <category term="Think" scheme="https://stellarkey.github.io/categories/Think/"/>
    
    
  </entry>
  
  <entry>
    <title>南国行记</title>
    <link href="https://stellarkey.github.io/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/"/>
    <id>https://stellarkey.github.io/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/</id>
    <published>2020-08-02T15:42:49.000Z</published>
    <updated>2021-01-04T15:10:59.635Z</updated>
    
    <content type="html"><![CDATA[<p>本文记载深圳OS项目实习的一些见闻。<span id="more"></span></p><h1 id="8月2日-向南"><a href="#8月2日-向南" class="headerlink" title="8月2日 向南"></a>8月2日 向南</h1><p>疫情后的湖北（宜昌），还是一种比较严肃的气氛。</p><p>似乎高速公路的通行上仍存在一定问题（这个问题应该存在了几年了），跨省界时需要转小型车，再转为宜昌交运客车。当地的客车似乎更高级一些，设备更新，座位有重力感应，这样与安全带插扣联合在一起，便可以保证安全带的使用——只是，空座位上确实不能放置物品了。</p><p>听说这几天深圳强降水，有些庆幸选择了高铁前往。如果是飞机，可能又要延误（之后发现确实有人延误。。）。我为数不多的飞行体验中，就有一次接近半天的延误。人们常常夸赞航班的超高安全性，但我却不以为然。飞机的安全性是通过全面“规避风险”来获得的，这意味着飞行本身是一件高风险的事。而火车或者汽车则不一样，它们的基础风险是很低的，它们规避风险的需求也更少。</p><p>但，“规避风险”是一件非常强调主观能力的事情。</p><p>窗外突然开始下雨。刮大风。并且能见度变得很低。可以在空中看到明显的风雨轨迹。隧道中的应急车道上停靠了大量避雨的私家车。但过了一段距离，雾渐散了。雨也消了。</p><p>看到崇山峻岭间有些鬼斧式的地貌。公路和车辆在森林中一闪而过。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809205806820.png" class="" title="image-20200809205806820"><p>人对自然的改造。也是脉络式的改造。</p><p>崇山峻岭也隐去了，平原，城市的轮廓浮现出来。</p><p>世界太大了。单独的人，单独的建筑，都显得很渺小。思维超出个体时，行为是否能超出个体呢？</p><hr><p>高铁上可以明显感到与之前的交通工具在速度上的差异。出发时还是早晨，天气晴朗，云海只淡淡的一层，并形成起伏的波浪线。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809205842032.png" class="" title="image-20200809205842032"><p>没想到中途的站点竟经停武汉。</p><p>病毒的风险，何尝又不是一种主观能力上的风险规避。跟航班也有一些相似性。</p><p>体验了一把在高铁上点外卖的感觉。结论：太贵。</p><p>无论如何舒适的环境，坐久了都会变得不是很舒适。可能还不够舒适?</p><hr><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210052524.png" class="" title="image-20200809210052524"><p>深圳的城市从宏观上跟北京之类的大都会没有什么区别。但是，细节之处却相当不同。深圳有专门的出租车集散地，这是我在其他省市所从未见过的，深圳的交通似乎更加严格，也许这是一种“先行区”的表现吧?深圳是一座很有活力的城市，从街景的设计中可以看出，一些蓝色的吉祥物（没有认出来是什么），还有雕塑。深圳的非机动车道和人行道镶嵌粘合在一起，这也是其他城市我所未见的新。深圳也许暂时我没有体味到创造的新，但是标新立异的新，确实令人侧目。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809211543865.png" class="" title="image-20200809211543865"><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210030842.png" class="" title="image-20200809210030842"><p>到了酒店，直观的感受就是，高端的生活方式真是难以想象的舒适。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210040962.png" class="" title="image-20200809210040962"><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809211605199.png" class="" title="image-20200809211605199"><p>室友是来自数学系的大佬，听说为了契合自己的计划，甚至故意挂了科从而可以留校留级。这种认知是反常的，然而在了解之后又立马显得十分自然。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210716168.png" class="" title="image-20200809210716168"><h1 id="8月3日-实验室"><a href="#8月3日-实验室" class="headerlink" title="8月3日 实验室"></a>8月3日 实验室</h1><p>六点多醒了。悠哉游哉到鹏程实验室，脚程大约3分钟。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210646859.png" class="" title="image-20200809210646859"><p>早餐自助。还是很好吃的。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210702567.png" class="" title="image-20200809210702567"><p>安排也大致有了：<a href="https://github.com/rcore-os/zCore/wiki/zcore-summer-of-code。">https://github.com/rcore-os/zCore/wiki/zcore-summer-of-code。</a></p><p>今天大概是：rCore 开发历史和选题介绍。</p><blockquote><p>与同学交流选题</p><p>上午11:00 B栋一楼合影，3楼参观</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210753003.png" class="" title="image-20200809210753003"><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210801369.png" class="" title="image-20200809210801369"><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210808670.png" class="" title="image-20200809210808670"><p>中午二楼就餐</p><p>晚上：聚餐和小活动</p></blockquote><p>安排。：）</p><hr><p>中午吃多了。。<del>控制控制</del>。。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809210727686.png" class="" title="image-20200809210727686"><hr><p><strong>第二届开源操作系统技术研讨会</strong>。</p><hr><p>没有做完实验的，先把前面六个实验全部做完。</p><p>操作系统的用户态、内核态的转换，在rust设计中得到了优化。通过异步的办法，让操作系统的性能有一个巨大的提升。（用户态中断?）</p><p>对于传统操作系统，异步的编写很麻烦。在rust中，则可以由编译器来负责完成。rust语言有可能对操作系统有一个本质性的影响。</p><p><strong>信号</strong>：比如键盘信号，<strong>用户态</strong>的一个信号。信号处理函数在用户态，平时不激活。很诡异地一个设计，需要把很多东西凑合到一起。</p><p>RISC-V中有一个用户态中断。这件事完成后，那么就可以实现在用户态完成信号机制。</p><hr><p>第二阶段没有什么参考，所以需要自己规划。</p><p>目的：<strong>做开源社区</strong>。</p><p>明天下午国科大本科毕设分享：RISC-V处理器流片背后的故事。</p><p>对于<strong>树莓派</strong>，PCB开源但<strong>GPU不开源</strong>，ucore移植的图形显示很不好搞，图形渲染不好弄，只能弄图形点阵。</p><p>目前有一个对标树莓派的全开源项目，似乎。</p><p>周四去华为参观?</p><p>龙芯杯似乎有点内卷。。QAQ</p><p>我的树莓派4已经吃灰一年了感觉。。未来10年间主流指令集会从x86过渡到arm?</p><hr><p>关于zCore-Tutorial的一些特点。自顶向下。逐步替换底层实现。</p><hr><p>网络集群的特点就是，每个人都很有特点。这其实有点循环论证的问题。</p><p>大二的同学竟然有7位。不禁感叹时光流逝。当年我在大二时，大概才开始学习算法，那年的算法课我也不过是60分飘过。</p><p>开源协议赶紧再记一下：</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/253a7b1819e2af555ed0a7e0f11a0b59_r.jpg" class="" title="preview"><hr><p><del>今晚真的要聚餐</del>。</p><h1 id="8月4日-一生一芯"><a href="#8月4日-一生一芯" class="headerlink" title="8月4日 一生一芯"></a>8月4日 一生一芯</h1><p>今天迟到了。不过好像问题不大。匆匆吃完外带的早餐。</p><p>貌似github.io被墙了。</p><p>说实话zCore-Tutorial这个东西，现在想参与还是比较无力的。作者wrj本身也就写了一点点内容。但他把一些大纲拟好。</p><p>hal（硬件抽象层，Hardware Abstraction Layer），与硬件隔离。</p><blockquote><p>目前支持裸机（Bare Metal），和Linux/Mac OS环境。</p></blockquote><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/structure.svg" class="" title="img"><p>rust-analyzer听说很好用。clion听说很好用。</p><p>大概了解了一下zCore的结构。</p><hr><p>进度资料：<a href="http://os.cs.tsinghua.edu.cn/oscourse/OsTrain2019/g1">2019年操作系统专题训练大实验-Fuchsia OS调研</a>。抽时间了解一下他们都做了些什么，以及进度。</p><p>关于Fuchsia OS：<a href="http://os.cs.tsinghua.edu.cn/oscourse/OsTrain2019/g1?action=AttachFile&amp;do=view&amp;target=%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A.pdf。">http://os.cs.tsinghua.edu.cn/oscourse/OsTrain2019/g1?action=AttachFile&amp;do=view&amp;target=%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A.pdf。</a></p><blockquote><p>“非典型”微内核。（勉强算微内核）</p><p>Fuchsia是Google开发的，可能将用于取代Android。</p><p>rCore有实现微内核的潜力，这最终形成了zCore?</p></blockquote><h2 id="国科大本科毕设研讨会——“一生一芯”项目访谈"><a href="#国科大本科毕设研讨会——“一生一芯”项目访谈" class="headerlink" title="国科大本科毕设研讨会——“一生一芯”项目访谈"></a>国科大本科毕设研讨会——“一生一芯”项目访谈</h2><p>今天的研讨会终于给人比较正式的感觉。上午的自由讨论，最终只剩下自由，而没有讨论。</p><p>注意：一生一芯是指，每一个学生设计一个芯片。</p><hr><p>介绍，开发经验，经历分享，未来展望。</p><blockquote><p>余子濠、金越（验证测试）、王华强（前端/DEBUG）、王凯帆（核参数/应用）、张林隽（TLB）、张紫飞（微结构）</p></blockquote><h3 id="第一环节-介绍"><a href="#第一环节-介绍" class="headerlink" title="第一环节 介绍"></a>第一环节 介绍</h3><ol><li>芯片基本情况<ol><li>“果壳”，NutShell</li><li>一款功能完整的RISC-V处理器</li><li>国产110nm工艺完成流片（面积10 mm^2），流片一次二十万???</li><li>有对应的果壳<strong>板卡</strong></li><li>SDRAM大型内存操作系统只能跑200MHz。其他内存占用小的OS可以到350MHz。<ol><li>SDRAM中途还换了颗粒，一开始只能测试小程序最多128K左右</li></ol></li><li>跑分一般</li><li>4个月的前端开发</li><li><del>自产自销QAQ</del></li><li>疫情原因，芯片测试并没有实际参与</li><li>第一版芯片电路（电源线）接错，取指成功，但是会烧掉板子（烧了两块，然后回厂）</li></ol></li><li>现在回过头来看, 流片难吗?<ol><li>五位同学主要接触的是前端设计的工作<ol><li>与流片相关的工作：时序逻辑设计要求比较严格</li></ol></li><li>流片的时间节点的压力比较大<ol><li>如果之后有问题的话，无法修改</li><li>爆肝</li></ol></li><li><del>王凯帆同学中途出国被反复鞭尸QAQ，他的一些软件任务由余博士完成</del></li></ol></li><li>什么时候认识到项目的复杂性? 如何应对?<ol><li>课程中老师常常把一些东西黑盒化，但是在项目中需要接触验证的环境（测试程序的正确性），DEBUG比较艰难——<strong>了解每一行代码的细节</strong></li><li><del>加强版的龙芯杯QAQ</del>，<strong>版本管理</strong>很重要</li><li>前期可以黑盒，但后期必须了解硬件外设的细节，比如几千行的 verilog 代码</li><li>后期开始参与用户态使用时，感觉到复杂性。可能需要引入<strong>编程范式</strong>?<ol><li>一步一步，任务驱动，一层一层慢慢解开黑盒</li><li>阅读大型项目的方法~~~</li></ol></li></ol></li></ol><h3 id="第二环节-开发"><a href="#第二环节-开发" class="headerlink" title="第二环节 开发"></a>第二环节 开发</h3><ol><li><p>使用 <code>Chisel</code> 有什么感想?</p><ol><li><code>Scala</code> （相对于 <code>Rust</code>）更强调函数式编程、面向对象编程</li><li><code>Chisel</code> 就是基于 <code>Scala</code></li><li><code>Chisel</code> 描述硬件的语言方式是非常抽象高级的，<code>Verilog</code> 的抽象层次很低，可以视作“电路设计中的汇编语言”</li><li>在 <code>Chisel</code> 里面 DEBUG 一般直接打印信息<ol><li>传统看波形：通过信号周期（几千几万的那种）跟踪，太难了</li></ol></li><li>有些功能 <code>Chisel</code> 解决不了或者实现会很复杂<ol><li>多时钟可以搞，但是会更复杂一点</li><li>DDR的复杂度很高，Contrler很难搞<ol><li>CPU和SDRAM的时钟频率不一样，需要转换桥?</li></ol></li></ol></li></ol></li><li><p>使用chisel如何调试?</p><ol><li>处理器在线<strong>差分</strong>测试仿真验证<ol><li>nemu是一个简版的qemu，在qemu里面自定义DEBUG很麻烦，而且封装过度当需要很小（获取一个寄存器的值）开销很大<ol><li>nemu里面可以直接通过函数调用来获取DEBUG信息</li><li>nemu和qemu可以相互映证</li><li>直接用qemu可能会有一些坑</li></ol></li><li>模拟器作为动态链接库连接到仿真程序</li><li>处理器在指令完成时发出比对信息，<strong>当比对信息不一致时立刻报错</strong>并输出当前处理器状态</li></ol></li></ol></li><li><p>如何测试验证模块的正确性?</p><ol><li><p>设计对比实验，如果结果相同则认为正确</p></li><li><p>TLB中可以自行设计测例，来验证多种的功能</p></li><li><p>行为是否符合预期?</p></li><li><p>没有BUG的情况下，如果提升性能?</p><ol><li><p>微结构设计?。。</p></li><li><p>写一些比较小的模块/程序，观察一个请求究竟做了什么事情，做<strong>周期级别的时间分析</strong>（打日志）。定位性能倒退的原因。</p></li></ol></li><li><p>（参数化框架）配置的组合数很大，可能需要用到<strong>回归测试</strong>，遍历所有的系统模块的组合</p></li></ol></li><li><p>适配操作系统的过程中遇到哪些困难? 如何克服?</p><ol><li>流片前开发（六个系统软件/OS）<ol><li>Nanas-lite：用户空间和内核空间共用同一个1GB空间，导致PTE覆盖</li><li>FreeRTOS</li><li>RT-thread：Idscript有ALIGN（4），4全部改成8跑通了</li><li><strong>xv6</strong>：不刷TLB（qemu里面没有刷TLB的概念）此时fork的时候Copy on Write机制会出现问题，还有load的时候?<ol><li>只有运行一些很小的程序才会高几率出现此BUG，大程序可能会把TLB刷下去</li></ol></li><li>Linux kernel：编了一份SMP<ol><li>运行的时候随机爆炸</li><li>上周的多核linux刷TLB又重新弄了一下</li><li>其他没有太多的坑</li></ol></li><li>Debian：跨页的4字节指令</li></ol></li><li>流片后测试<ol><li>4字节flash读取会导致一些读写取指相关的错误</li><li>XIP（eXecute In Place）：用flash取指执行，用sdram来读写数据<ol><li>只适合“一个程序”<ol><li>多个独立程序加载时会产生覆盖</li><li>程序段之间有2MB的空洞，如果直接全部加载进来，很浪费（总共只有4MB的内存）</li><li>因此将BBL和linux做成了一个程序</li></ol></li><li>linux数据段默认按页对齐，但XIP要求存储连续<ol><li>修改链接脚本，把所有数据段合并成一个<ol><li>段间空洞改为段内空洞，对XIP透明化</li></ol></li></ol></li></ol></li><li>内核识别到的内存大小为0<ol><li>实际RAM地址超出了默认内存地址空间的范围（1GB的间隔）</li><li>强行硬编码增加了1GB的空间。。</li></ol></li><li>执行内核线程hello</li><li>执行用户线程hello<ol><li>由于前面设计的锅，sdram中不能直接执行代码，所以分页的时候对进程页面要拦截并进行手动地址映射设置到flash</li><li>对flash读8字节，将ld指令魔改位lw的4字节指令</li></ol></li><li><strong>vDSO</strong>（Virtual dynamic shared object）<ol><li>一个映射到用户空间的so文件，可以在不陷入内核的情况下执行一些简单的系统调用</li></ol></li><li>每次取指都需要从flash中取，需要成千上万个周期，变成了实际意义上的多周期</li></ol></li></ol></li></ol><h3 id="第三环节-经历"><a href="#第三环节-经历" class="headerlink" title="第三环节 经历"></a>第三环节 经历</h3><ol><li>印象最深刻的bug<ol><li>使用测试框架定位复杂BUG<ol><li>模拟器和处理器的行为不太一样，33亿条指令时<strong>捕捉到错误</strong>。。。</li><li><strong>边界测例</strong>：一条指令横跨了两个页面（前半和后半被分开，会产生PAgeFault）</li><li>特殊的Page Fault需要在指令集手册上查找，需要往特定的寄存器中写入值</li></ol></li><li>硬件引脚输出问题<ol><li>换成显式的硬件逻辑，突然就跑通了</li><li>对硬件手册信息（约定）的理解有错，“N”，低位全部接成了高位引脚</li></ol></li><li>TLB取地址<ol><li>TLB转换对了，但取出来的值不对</li><li>看了4天log信息，在x86中打印流程</li><li>最终师兄2小时找出，是x86的软件的一个BUG（没有刷TLB）</li></ol></li><li>Cache（SRAM）黑盒爆炸<ol><li>BUG不断修锅，然后不断出新BUG</li></ol></li><li>去Cache中间层<ol><li>整个核的行为发生很大变化</li><li>握手信号初始化的小问题<ol><li>但是性能显著降低</li><li>分支预测器隐含的条件，去掉Cache后就不满足了</li></ol></li></ol></li></ol></li><li>有没有坑过队友/被队友坑过?<ol><li>主要还是硬件方面的事情</li><li>Cache流水线（同时访问）有仲裁级相关的问题</li></ol></li><li>和龙芯杯相比有什么不同?<ol><li><strong>验证环境</strong>更好（极大提高DEBUG生产效率）</li><li>代码质量需要一定的水平</li></ol></li><li>第一次对项目进行可配置化, 感觉如何?<ol><li>相比 verilog 好上很多了，要改的东西更少——敏捷开发（3周）</li></ol></li><li>外设的验证工作有什么挑战?<ol><li>多维度的复杂性：设备多样性、场景多样性、扩展多样性。</li></ol></li><li>课堂上没讲过硬件填充的TLB, 你是如何实现正确的?<ol><li>TLB实现需要满足实验手册的约定，但需要自己去实现</li><li>从<strong>状态机</strong>开始，不断扩充、成型（有点搞科研的味道；不确定性）</li></ol></li><li>Nextline预取器听上去很简单, 但你花了两个月才实现正确, 有什么坑?<ol><li>功能：给一个地址，取这个地址+1</li><li>最初实现预取器发现性能倒退：L1 Cache访问比较频繁，如果放到L1前面就会性能下降（每次预取器加倍消耗）。所以又采用了L2 Cache，放到了L2 Cahce的前面，</li></ol></li></ol><h3 id="第四环节-未来"><a href="#第四环节-未来" class="headerlink" title="第四环节 未来"></a>第四环节 未来</h3><ol><li>一生一芯的经验对大家做毕设有什么帮助?<ol><li>假设论证、心态。。</li><li>坚持、走通一条路。</li><li>quick and dirty麻雀原则：先弄出来，再疯狂改进。<ol><li>对前景要有认识，要意识到后续工作的改进瓶颈</li><li>保证良好的可扩展性</li><li>第一次设计推倒重来很正常，多次之后前景逐渐明朗</li></ol></li></ol></li><li>对参加下一届一生一芯项目的学弟学妹有什么建议?<ol><li>基础设施很重要<ol><li>对linux的魔改都是现在nemu中运行<ol><li>其它的硬件环境运行测试起来都很难</li></ol></li></ol></li><li>系统能力很重要<ol><li>不要害怕犯错</li><li>注重代码质量，commit水平，版本管理</li><li>总揽全局，对整个项目有接口性把握</li></ol></li><li>对下一届的期望?<ol><li>看实力水平，改进或者从头来走一遍（试错）?</li><li>水平不够，走一些弯路也是可以的?</li></ol></li></ol></li></ol><h2 id="zCore整体设计"><a href="#zCore整体设计" class="headerlink" title="zCore整体设计"></a>zCore整体设计</h2><p>前面讲的和以前的差不多。</p><h3 id="async"><a href="#async" class="headerlink" title="async"></a><code>async</code></h3><p><code>async-await</code> 用同步风格编写异步代码。Rust的一个特性。</p><ul><li>本质：无栈<strong><font color=blue>协程</font></strong>（共享同一个栈，面向任务的轻量级线程），协作式调度（非抢占式）<ul><li><strong><font color=red>语法糖</font></strong>。同步管理被封装透明化了，所以写法上与一般代码差不多。</li><li>协程特点：共享栈，满足每个协程使用栈空间的最大用量（协程运行的中间状态），同时用少量的栈空间来保存每个协程的必要信息。</li></ul></li><li>适用于高并发IO场景<ul><li>可能必须解决响应时间的问题</li></ul></li><li>主流编程语言均以支持：C#，C++，JavaScript，Python</li><li>几乎没有在 bare-metal（裸机）中应用</li></ul><h3 id="工具链"><a href="#工具链" class="headerlink" title="工具链"></a>工具链</h3><ul><li>代码质量控制：<code>cargo fmt</code>，<code>cargo clippy</code></li><li>文档和单元测试：<code>cargo doc + cargo test + grcov</code>（<code>grcov</code> 计算测试覆盖率）<ul><li>（TODO）性能测试：<code>cargo bench</code></li></ul></li><li>carte 的拆分和发布流程：<code>cargo publish</code></li><li>持续集成和自动测试：GitHub Actions</li><li>社区合作开发：GitHub issue + PR</li></ul><hr><p>突然想看看《<strong>设计模式</strong>》。</p><h1 id="8月5日-RIOS实验室"><a href="#8月5日-RIOS实验室" class="headerlink" title="8月5日 RIOS实验室"></a>8月5日 RIOS实验室</h1><p>没想到之前关注的两个：一生一芯、RIOS都被邀请过来作报告。。tql。感觉就是这个活动很高端。</p><p>好的，上午依然是自由活动的性质，所以没什么事。。</p><hr><p>我的博客网址出锅了，想办法看看能不能补救。HSTS策略是真的烦。</p><hr><p><a href="https://raw.githubusercontent.com/wiki/rcore-os/zCore/files/wrj-thesis.pdf。wrj的毕设论文写得确实很详细。">https://raw.githubusercontent.com/wiki/rcore-os/zCore/files/wrj-thesis.pdf。wrj的毕设论文写得确实很详细。</a></p><p><a href="https://raw.githubusercontent.com/wiki/rcore-os/zCore/files/pql-thesis.pdf。">https://raw.githubusercontent.com/wiki/rcore-os/zCore/files/pql-thesis.pdf。</a></p><p>先把这两个毕设看一看好了。</p><hr><p>TBSI来咯。hhh</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809211208300.png" class="" title="image-20200809211208300"><h2 id="RIOS实验室研讨会"><a href="#RIOS实验室研讨会" class="headerlink" title="RIOS实验室研讨会"></a>RIOS实验室研讨会</h2><p><strong>RIOS实验室研讨会</strong>。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809211157289.png" class="" title="image-20200809211157289"><hr><p>张林老师有信息论的MOOC，貌似以前是TBSI的院长。 <del>然而信息论我都还没看完</del>，我太菜辣。</p><p>一开始基本还是一些RISC-V的背景介绍。没啥新鲜的。在经济上和政治上都有一定优势。</p><p>PicoRio：超低成本，成熟的社区。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809211427899.png" class="" title="image-20200809211427899"><p>TBSI 谭老师的口语实在是有点泛英语化。。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809211249364.png" class="" title="image-20200809211249364"><hr><p>现在PicoRio有开源地址吗?或者在哪里可以了解到最新进展呢?</p><blockquote><p>目前还没有正式地发布，文档还在慢慢更新。秋季?</p><p>从专门网站上找documentation。</p><p>PicoRio似乎不想用BSD许可证，然后再设计一个license?但是出发点是保护社区。</p></blockquote><p>其它的事情不太了解也不是很感兴趣。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809211228265.png" class="" title="image-20200809211228265"><h2 id="Sipeed矽速工程师交流会"><a href="#Sipeed矽速工程师交流会" class="headerlink" title="Sipeed矽速工程师交流会"></a>Sipeed矽速工程师交流会</h2><p>听说K210板子是从他们那批发的。。</p><p>矽速科技官网：<a href="https://www.sipeed.com">https://www.sipeed.com</a></p><hr><p><a href="https://cn.maixpy.sipeed.com/zh/">MaixPy</a>：使用简单的Micropython语法在AI芯片上快速实现有趣的功能的SDK。</p><blockquote><p>SDK组成：</p><ul><li>CMake + Kconfig<ul><li>CMake：自动寻找cmake文件，导入各个模块并注册</li><li>Kconfig：进行组件配置的选择，并生成config文件</li></ul></li><li>组件（驱动、micropython、模块）</li><li>工程（project.py）</li></ul><p>视觉、多媒体、机器流水线、人脸识别……、</p><p>Micropython语法：</p><ul><li>用户代码精简，易于上手，成本低（几十块钱的开发板）</li><li>面向对象语法，封装性好，开发速度高</li><li>解释型语言，快速验证</li></ul></blockquote><p>Micropython语法是从语法上与python不同，还是只是可以调用你们写的一些库函数?</p><blockquote><p>Micropython其实就是一个解释器，大部分时候与python语法上是兼容的。</p></blockquote><p><strong>AI 模型</strong>：</p><p>K210搭载了 AI 芯片吗? 它在什么方向上做了优化，和传统的芯片的不同在哪?</p><blockquote><p>AI芯片就是一个可以部署和运行模型的芯片而已。</p></blockquote><p>所有的算法模型都是提前训练好的? K210 本身支持训练吗?</p><blockquote><p>对。一般要在电脑上训练。</p></blockquote><p>KPU 是什么? 和CPU和GPU有什么不同?</p><blockquote><p>针对的应用场景不同，KPU支持的是通用运算。GPU专门处理图形处理方面的运算。</p><p>KPU的K只是一个命名。KPU实现了GPU功能的一些子集。</p></blockquote><p>模型压缩的方法?</p><blockquote><p>浮点运算精度调低。用一些软件工具来压缩?</p></blockquote><p><strong>MaixPy常见难点</strong>：</p><p>GC（垃圾回收）：GC分配的内存需要标记，内存不足的时候自动回收</p><p>对齐错误：指针、内存、地址对齐的问题</p><p>MaixPy TODO：</p><ul><li>LPU Flash run，PSRAM run：目前只支持6M的模型，如果可以存储到flash里面，需要的时候再读取，就很好</li><li>MaixUI：简单轻量化，减少内存消耗</li><li>MaixHub：分享训练好的模型的Hub网站</li><li>IDE：。。。</li><li>MaixPy on Linux：</li></ul><hr><p>JTAG（Joint Test Action Group，联合测试工作组）。</p><p>一个硬件集成式的调试工具。提供了一系列接口来调试开发板。</p><p>JTAG提供了图形界面化的IDE。</p><h1 id="8月6日-论文研读"><a href="#8月6日-论文研读" class="headerlink" title="8月6日 论文研读"></a>8月6日 论文研读</h1><p>今天主要看rCore和zCore的本科毕业设计论文。</p><p>Rust 的零成本开销抽象意味着，抽象的<strong>运行开销</strong>为0；如果的确要在运行时使用该抽象，也可以保证运行开销最小。</p><hr><p><strong>文档讨论会</strong>。</p><hr><p>可能需要从头开始搭一遍 zCore。（<strong>复现</strong> / <strong>拆解</strong>?）</p><p>然后老师又说把每一部分的代码进行分析。</p><blockquote><p>自己先理解自己的代码部分。</p><p>主线还是需要变化。</p></blockquote><p>操作系统 DEBUG 门槛/难度怎么改变?</p><blockquote><p>有点难度。</p></blockquote><hr><p><strong>华为 openEuler 研讨会</strong>。</p><hr><p>Email：guanyanjie AT huawei.com</p><p>华为基于服务器linux发行版，开源在码云上的一个共享社区。</p><p>网址：openeuler.org。</p><blockquote><p>openEuler是一个开源、免费的Linux发行版平台，将通过开放的社区形式与全球的开发者共同构建一个开放、多元和架构包容的软件生态体系。同时，openEuler也是一个创新的平台，鼓励任何人在该平台上提出新想法、开拓新思路、实践新方案。</p></blockquote><p>openEuler 是为了让华为的芯片（麒麟、鲲鹏……）出厂即可以有配套的开源发行版。建立 openEuler 社区，使能ARM生态，让世界有第二选择。</p><p>全软件堆栈的技术优化，打造高性能、高可靠、高安全、易用的操作系统。</p><hr><p>完全回到了原来的一个状态，自选一个项目：继续写tutorial，或者写代码的测试文档。</p><hr><p><strong>RVM晚间研讨会</strong>。</p><hr><p>Hypervisor： Virtual Machine Monitor（VMM）</p><p>RVM： Rcore Virtual Machine。基于 RVM 实现了 rCore/zCore 的 hypervisor。</p><p>不是很感兴趣。全是实现细节。</p><p>zCore虚拟化的更多工作：</p><ul><li>完善RVM，完成更多的测试（24/28）</li><li>RVM从rCore中独立出来，但有些部分还没搞好</li><li>跑在其它真实的环境中，目前只支持 intel 的 x86</li></ul><hr><p><strong>zCore 内核对象及系统调用</strong>。</p><hr><p>Zircon微内核是Fuchsia的最底层。</p><ul><li>实用主义微内核</li><li>使用 C++ 实现，支持 x86_64 和 ARM64</li><li>面向对象（微内核的传统习惯）：将功能划分到内核对象</li><li>默认隔离：使用 Capability 进行权限管理</li><li>安全考量：强制地址随机化（zCore还没实现），使用 vDSO 隔离系统调用</li></ul><p>所有的东西都可以称为内核对象。</p><ul><li>任务：Job, …</li><li>内存：VMAR, …</li><li>IPC： Channel, …</li><li>信号：Event, …</li><li>驱动：Resource, ….</li></ul><hr><p>Object：</p><ul><li>Object：内核对象</li><li>Rights：对象访问权限</li><li>Handle = Object + Rights：对象句柄（类似 fd）</li></ul><p>IPC：</p><ul><li>Channel：进程间通信基础设施，可以传递数据和handle</li><li>FIFO：报文数据传输</li><li>Socket：流数据传输</li></ul><p>Tasks：</p><ul><li>Job：作业，负责控制权限（类似容器）</li><li>Process：进程，负责管理资源</li><li>Thread：线程，负责调度执行</li></ul><p>一个作业可能有多个进程，一个进程可能有多个线程。进程之间没有父子关系。</p><p>Memory：</p><ul><li>VMO（Virtual Memory Object）<ul><li>Paged：分页物理内存，支持写时复制</li><li>Physical：连续物理内存</li></ul></li><li>VMAR（Virtual Memory Address Region）<ul><li>代表一个进程的虚拟地址空间</li><li>树状结构</li></ul></li><li>Pager：用户态分页机制</li></ul><p>Signaling and Waiting：每个 Object 有 32 个信号位，用户程序可以阻塞等待。</p><ul><li>Event（pair）：事件源/对</li><li>Timer：计时器</li><li>Futex：用户态同步互斥机制（快速）</li><li>Port：事件分发机制（类似epoll）</li></ul><hr><p><strong>zCore硬件移植和驱动开发</strong>。</p><hr><p>UEFI（Unified Extensible Firmware Interface）：增强版 BIOS。类似 Open SBI。</p><ul><li>省去了从古老的实模式进入现代长模式的汇编代码</li><li>丰富的外设驱动支持，快速输入输出</li><li>Rust UEFI 开发环境方便易用（<code>uefi-rs</code> 库）</li></ul><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809211634649.png" class="" title="image-20200809211634649"><h1 id="8月8日"><a href="#8月8日" class="headerlink" title="8月8日"></a>8月8日</h1><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809212300425.png" class="" title="image-20200809212300425"><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809212241585.png" class="" title="image-20200809212241585"><p>今天到海南转机，结果航班取消了。被迫在海南呆了半天。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809212201438.png" class="" title="image-20200809212201438"><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809212224773.png" class="" title="image-20200809212224773"><p>居然看到了椰树椰汁的厂子。。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809212005022.png" class="" title="image-20200809212005022"><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809212027412.png" class="" title="image-20200809212027412"><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809212356319.png" class="" title="image-20200809212356319"><p>海南唯一的一家呷哺呷哺。。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809212319866.png" class="" title="image-20200809212319866"><p>买了晚上的经济舱，结果被升成头等舱了。。</p><img data-src="/%E5%8D%97%E5%9B%BD%E8%A1%8C%E8%AE%B0/image-20200809212406124.png" class="" title="image-20200809212406124"><hr><p>一系列际遇之后到家。完结。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文记载深圳OS项目实习的一些见闻。</summary>
    
    
    
    <category term="View" scheme="https://stellarkey.github.io/categories/View/"/>
    
    
  </entry>
  
</feed>
